{"version":3,"sources":["jquery-2.1.1.js","bootstrap.js","inspinia.js","sweetalert-dev.js","pace.min.js","jasny-bootstrap.min.js","jquery.metisMenu.js","jquery.slimscroll.min.js","chosen.jquery.js","jquery.dataTables.js","dataTables.bootstrap.js","dataTables.responsive.js","dataTables.tableTools.min.js","clockpicker.js"],"names":[],"mappingszrzCA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfrzncA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrxlfile":"app.min.js","sourcesContent":["/*! jQuery v2.1.1 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.1\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C=\"undefined\",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",N=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=N.replace(\"w\",\"w#\"),P=\"\\\\[\"+M+\"*(\"+N+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+O+\"))|)\"+M+\"*\\\\]\",Q=\":(\"+N+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P+\")*)|.*)\\\\)|)\",R=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),S=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),T=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(\"=\"+M+\"*([^\\\\]'\\\"]*?)\"+M+\"*\\\\]\",\"g\"),V=new RegExp(Q),W=new RegExp(\"^\"+O+\"$\"),X={ID:new RegExp(\"^#(\"+N+\")\"),CLASS:new RegExp(\"^\\\\.(\"+N+\")\"),TAG:new RegExp(\"^(\"+N.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+P),PSEUDO:new RegExp(\"^\"+Q),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+L+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\/g,cb=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+M+\"?|(\"+M+\")|.)\",\"ig\"),db=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||\"string\"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(bb,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(\",\")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener(\"unload\",function(){m()},!1):g.attachEvent&&g.attachEvent(\"onunload\",function(){m()})),c.attributes=ib(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML=\"<div class='a'></div><div class='a i'></div>\",a.firstChild.className=\"i\",2===a.getElementsByClassName(\"i\").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML=\"<select msallowclip=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowclip^='']\").length&&q.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+M+\"*(?:value|\"+L+\")\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\")}),ib(function(a){var b=e.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+M+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",Q)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\"\").replace(cb,db),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+M+\")\"+a+\"(\"+M+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||\"\")||fb.error(\"unsupported lang: \"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ib(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||jb(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||jb(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute(\"disabled\")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+Math.random()}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)\n},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bb=/<([\\w:]+)/,cb=/<|&#?\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fb=/^$|\\/(?:java|ecma)script/i,gb=/^true\\/(.*)/,hb=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ib={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function kb(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\"script\"),g.length>0&&mb(g,!i&&ob(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(bb.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\"script\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(ab,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\"script\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\"none\"!==c&&c||(qb=(qb||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Bb=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Cb={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Db={letterSpacing:\"0\",fontWeight:\"400\"},Eb=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",tb(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\"normal\"===e&&b in Db&&(e=Db[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xb,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||tb(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\"show\"),slideUp:Tb(\"hide\"),slideToggle:Tb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))\n},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ac,\" \").indexOf(b)>=0)return!0;return!1}});var bc=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bc,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cc=n.now(),dc=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var ec,fc,gc=/#.*$/,hc=/([?&])_=[^&]*/,ic=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,jc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kc=/^(?:GET|HEAD)$/,lc=/^\\/\\//,mc=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,nc={},oc={},pc=\"*/\".concat(\"*\");try{fc=location.href}catch(qc){fc=l.createElement(\"a\"),fc.href=\"\",fc=fc.href}ec=mc.exec(fc.toLowerCase())||[];function rc(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function sc(a,b,c,d){var e={},f=a===oc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function tc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function uc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function vc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fc,type:\"GET\",isLocal:jc.test(ec[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":pc,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?tc(tc(a,n.ajaxSettings),b):tc(n.ajaxSettings,a)},ajaxPrefilter:rc(nc),ajaxTransport:rc(oc),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=ic.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||fc)+\"\").replace(gc,\"\").replace(lc,ec[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=mc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===ec[1]&&h[2]===ec[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(ec[3]||(\"http:\"===ec[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),sc(nc,k,b,v),2===t)return v;i=k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!kc.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=hc.test(d)?d.replace(hc,\"$1_=\"+cc++):d+(dc.test(d)?\"&\":\"?\")+\"_=\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+pc+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=sc(oc,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=uc(k,v,f)),u=vc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var wc=/%20/g,xc=/\\[\\]$/,yc=/\\r?\\n/g,zc=/^(?:submit|button|image|reset|file)$/i,Ac=/^(?:input|select|textarea|keygen)/i;function Bc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||xc.test(a)?d(a,e):Bc(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Bc(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Bc(c,a[c],b,e);return d.join(\"&\").replace(wc,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&Ac.test(this.nodeName)&&!zc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(yc,\"\\r\\n\")}}):{name:b.name,value:c.replace(yc,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Cc=0,Dc={},Ec={0:200,1223:204},Fc=n.ajaxSettings.xhr();a.ActiveXObject&&n(a).on(\"unload\",function(){for(var a in Dc)Dc[a]()}),k.cors=!!Fc&&\"withCredentials\"in Fc,k.ajax=Fc=!!Fc,n.ajaxTransport(function(a){var b;return k.cors||Fc&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Cc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Dc[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Ec[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Dc[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Gc=[],Hc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Gc.pop()||n.expando+\"_\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Hc.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Hc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Hc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Gc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Ic=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Ic)return Ic.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Jc=a.document.documentElement;function Kc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Kc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Jc;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Jc})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Kc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Lc=a.jQuery,Mc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Mc),b&&a.jQuery===n&&(a.jQuery=Lc),n},typeof b===U&&(a.jQuery=a.$=n),n});","/*!\n * Bootstrap v3.3.6 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n\n+function ($) {\n  'use strict';\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 2)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.6\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.3.6\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.6'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.6\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.6'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.6\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.6'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.6\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.6'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.6\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.6'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.3.6\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.6'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.6\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.6'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.3.6\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.6'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.6\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.6'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.6\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.6'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.6\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.6'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/*\n *\n *   INSPINIA - Responsive Admin Theme\n *   version 2.4\n *\n */\n\n\n$(document).ready(function () {\n\n\n    // Add body-small class if window less than 768px\n    if ($(this).width() < 769) {\n        $('body').addClass('body-small')\n    } else {\n        $('body').removeClass('body-small')\n    }\n\n    // MetsiMenu\n    $('#side-menu').metisMenu();\n\n    // Collapse ibox function\n    $('.collapse-link').click(function () {\n        var ibox = $(this).closest('div.ibox');\n        var button = $(this).find('i');\n        var content = ibox.find('div.ibox-content');\n        content.slideToggle(200);\n        button.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\n        ibox.toggleClass('').toggleClass('border-bottom');\n        setTimeout(function () {\n            ibox.resize();\n            ibox.find('[id^=map-]').resize();\n        }, 50);\n    });\n\n    // Close ibox function\n    $('.close-link').click(function () {\n        var content = $(this).closest('div.ibox');\n        content.remove();\n    });\n\n    // Fullscreen ibox function\n    $('.fullscreen-link').click(function () {\n        var ibox = $(this).closest('div.ibox');\n        var button = $(this).find('i');\n        $('body').toggleClass('fullscreen-ibox-mode');\n        button.toggleClass('fa-expand').toggleClass('fa-compress');\n        ibox.toggleClass('fullscreen');\n        setTimeout(function () {\n            $(window).trigger('resize');\n        }, 100);\n    });\n\n    // Close menu in canvas mode\n    $('.close-canvas-menu').click(function () {\n        $(\"body\").toggleClass(\"mini-navbar\");\n        SmoothlyMenu();\n    });\n\n    // Run menu of canvas\n    $('body.canvas-menu .sidebar-collapse').slimScroll({\n        height: '100%',\n        railOpacity: 0.9\n    });\n\n    // Open close right sidebar\n    $('.right-sidebar-toggle').click(function () {\n        $('#right-sidebar').toggleClass('sidebar-open');\n    });\n\n    // Initialize slimscroll for right sidebar\n    $('.sidebar-container').slimScroll({\n        height: '100%',\n        railOpacity: 0.4,\n        wheelStep: 10\n    });\n\n    // Open close small chat\n    $('.open-small-chat').click(function () {\n        $(this).children().toggleClass('fa-comments').toggleClass('fa-remove');\n        $('.small-chat-box').toggleClass('active');\n    });\n\n    // Initialize slimscroll for small chat\n    $('.small-chat-box .content').slimScroll({\n        height: '234px',\n        railOpacity: 0.4\n    });\n\n    // Small todo handler\n    $('.check-link').click(function () {\n        var button = $(this).find('i');\n        var label = $(this).next('span');\n        button.toggleClass('fa-check-square').toggleClass('fa-square-o');\n        label.toggleClass('todo-completed');\n        return false;\n    });\n\n    // Append config box / Only for demo purpose\n    // Uncomment on server mode to enable XHR calls\n    $.get(\"skin-config.html\", function (data) {\n        if (!$('body').hasClass('no-skin-config'))\n            $('body').append(data);\n    });\n\n    // Minimalize menu\n    $('.navbar-minimalize').click(function () {\n        $(\"body\").toggleClass(\"mini-navbar\");\n        SmoothlyMenu();\n\n    });\n\n    // Tooltips demo\n    $('.tooltip-demo').tooltip({\n        selector: \"[data-toggle=tooltip]\",\n        container: \"body\"\n    });\n\n    // Move modal to body\n    // Fix Bootstrap backdrop issu with animation.css\n    $('.modal').appendTo(\"body\");\n\n    // Full height of sidebar\n    function fix_height() {\n        var heightWithoutNavbar = $(\"body > #wrapper\").height() - 61;\n        $(\".sidebard-panel\").css(\"min-height\", heightWithoutNavbar + \"px\");\n\n        var navbarHeigh = $('nav.navbar-default').height();\n        var wrapperHeigh = $('#page-wrapper').height();\n\n        if (navbarHeigh > wrapperHeigh) {\n            $('#page-wrapper').css(\"min-height\", navbarHeigh + \"px\");\n        }\n\n        if (navbarHeigh < wrapperHeigh) {\n            $('#page-wrapper').css(\"min-height\", $(window).height() + \"px\");\n        }\n\n        if ($('body').hasClass('fixed-nav')) {\n            if (navbarHeigh > wrapperHeigh) {\n                $('#page-wrapper').css(\"min-height\", navbarHeigh - 60 + \"px\");\n            } else {\n                $('#page-wrapper').css(\"min-height\", $(window).height() - 60 + \"px\");\n            }\n        }\n\n    }\n\n    fix_height();\n\n    // Fixed Sidebar\n    $(window).bind(\"load\", function () {\n        if ($(\"body\").hasClass('fixed-sidebar')) {\n            $('.sidebar-collapse').slimScroll({\n                height: '100%',\n                railOpacity: 0.9\n            });\n        }\n    });\n\n    // Move right sidebar top after scroll\n    $(window).scroll(function () {\n        if ($(window).scrollTop() > 0 && !$('body').hasClass('fixed-nav')) {\n            $('#right-sidebar').addClass('sidebar-top');\n        } else {\n            $('#right-sidebar').removeClass('sidebar-top');\n        }\n    });\n\n    $(window).bind(\"load resize scroll\", function () {\n        if (!$(\"body\").hasClass('body-small')) {\n            fix_height();\n        }\n    });\n\n    $(\"[data-toggle=popover]\")\n        .popover();\n\n    // Add slimscroll to element\n    $('.full-height-scroll').slimscroll({\n        height: '100%'\n    })\n});\n\n\n// Minimalize menu when screen is less than 768px\n$(window).bind(\"resize\", function () {\n    if ($(this).width() < 769) {\n        $('body').addClass('body-small')\n    } else {\n        $('body').removeClass('body-small')\n    }\n});\n\n// Local Storage functions\n// Set proper body class and plugins based on user configuration\n$(document).ready(function () {\n    if (localStorageSupport) {\n\n        var collapse = localStorage.getItem(\"collapse_menu\");\n        var fixedsidebar = localStorage.getItem(\"fixedsidebar\");\n        var fixednavbar = localStorage.getItem(\"fixednavbar\");\n        var boxedlayout = localStorage.getItem(\"boxedlayout\");\n        var fixedfooter = localStorage.getItem(\"fixedfooter\");\n\n        var body = $('body');\n\n        if (fixedsidebar == 'on') {\n            body.addClass('fixed-sidebar');\n            $('.sidebar-collapse').slimScroll({\n                height: '100%',\n                railOpacity: 0.9\n            });\n        }\n\n        if (collapse == 'on') {\n            if (body.hasClass('fixed-sidebar')) {\n                if (!body.hasClass('body-small')) {\n                    body.addClass('mini-navbar');\n                }\n            } else {\n                if (!body.hasClass('body-small')) {\n                    body.addClass('mini-navbar');\n                }\n\n            }\n        }\n\n        if (fixednavbar == 'on') {\n            $(\".navbar-static-top\").removeClass('navbar-static-top').addClass('navbar-fixed-top');\n            body.addClass('fixed-nav');\n        }\n\n        if (boxedlayout == 'on') {\n            body.addClass('boxed-layout');\n        }\n\n        if (fixedfooter == 'on') {\n            $(\".footer\").addClass('fixed');\n        }\n    }\n});\n\n// check if browser support HTML5 local storage\nfunction localStorageSupport() {\n    return (('localStorage' in window) && window['localStorage'] !== null)\n}\n\n// For demo purpose - animation css script\nfunction animationHover(element, animation) {\n    element = $(element);\n    element.hover(\n        function () {\n            element.addClass('animated ' + animation);\n        },\n        function () {\n            //wait for animation to finish before removing classes\n            window.setTimeout(function () {\n                element.removeClass('animated ' + animation);\n            }, 2000);\n        });\n}\n\nfunction SmoothlyMenu() {\n    if (!$('body').hasClass('mini-navbar') || $('body').hasClass('body-small')) {\n        // Hide menu in order to smoothly turn on when maximize menu\n        $('#side-menu').hide();\n        // For smoothly turn on menu\n        setTimeout(\n            function () {\n                $('#side-menu').fadeIn(400);\n            }, 200);\n    } else if ($('body').hasClass('fixed-sidebar')) {\n        $('#side-menu').hide();\n        setTimeout(\n            function () {\n                $('#side-menu').fadeIn(400);\n            }, 100);\n    } else {\n        // Remove all inline style from jquery fadeIn function to reset menu state\n        $('#side-menu').removeAttr('style');\n    }\n}\n\n// Dragable panels\nfunction WinMove() {\n    var element = \"[class*=col]\";\n    var handle = \".ibox-title\";\n    var connect = \"[class*=col]\";\n    $(element).sortable(\n        {\n            handle: handle,\n            connectWith: connect,\n            tolerance: 'pointer',\n            forcePlaceholderSize: true,\n            opacity: 0.8\n        })\n        .disableSelection();\n}\n\n\n","/**\n * Created by Maxime on 14/11/2015.\n */\n;\n(function (window, document, undefined) {\n    \"use strict\";\n\n    (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a)return a(o, !0);\n                    if (i)return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {exports: {}};\n                t[o][0].call(l.exports, function (e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++)s(r[o]);\n        return s\n    })({\n        1: [function (require, module, exports) {\n            'use strict';\n\n            var _interopRequireWildcard = function (obj) {\n                return obj && obj.__esModule ? obj : {'default': obj};\n            };\n\n            Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n// SweetAlert\n// 2014-2015 (c) - Tristan Edwards\n// github.com/t4t5/sweetalert\n\n            /*\n             * jQuery-like functions for manipulating the DOM\n             */\n\n            var _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation = require('./modules/handle-dom');\n\n            /*\n             * Handy utilities\n             */\n\n            var _extend$hexToRgb$isIE8$logStr$colorLuminance = require('./modules/utils');\n\n            /*\n             *  Handle sweetAlert's DOM elements\n             */\n\n            var _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition = require('./modules/handle-swal-dom');\n\n// Handle button events and keyboard events\n\n            var _handleButton$handleConfirm$handleCancel = require('./modules/handle-click');\n\n            var _handleKeyDown = require('./modules/handle-key');\n\n            var _handleKeyDown2 = _interopRequireWildcard(_handleKeyDown);\n\n// Default values\n\n            var _defaultParams = require('./modules/default-params');\n\n            var _defaultParams2 = _interopRequireWildcard(_defaultParams);\n\n            var _setParameters = require('./modules/set-params');\n\n            var _setParameters2 = _interopRequireWildcard(_setParameters);\n\n            /*\n             * Remember state in cases where opening and handling a modal will fiddle with it.\n             * (We also use window.previousActiveElement as a global variable)\n             */\n            var previousWindowKeyDown;\n            var lastFocusedButton;\n\n            /*\n             * Global sweetAlert function\n             * (this is what the user calls)\n             */\n            var sweetAlert, swal;\n\n            exports['default'] = sweetAlert = swal = function () {\n                var customizations = arguments[0];\n\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.addClass(document.body, 'stop-scrolling');\n                _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.resetInput();\n\n                /*\n                 * Use argument if defined or default value from params object otherwise.\n                 * Supports the case where a default value is boolean true and should be\n                 * overridden by a corresponding explicit argument which is boolean false.\n                 */\n                function argumentOrDefault(key) {\n                    var args = customizations;\n                    return args[key] === undefined ? _defaultParams2['default'][key] : args[key];\n                }\n\n                if (customizations === undefined) {\n                    _extend$hexToRgb$isIE8$logStr$colorLuminance.logStr('SweetAlert expects at least 1 attribute!');\n                    return false;\n                }\n\n                var params = _extend$hexToRgb$isIE8$logStr$colorLuminance.extend({}, _defaultParams2['default']);\n\n                switch (typeof customizations) {\n\n                    // Ex: swal(\"Hello\", \"Just testing\", \"info\");\n                    case 'string':\n                        params.title = customizations;\n                        params.text = arguments[1] || '';\n                        params.type = arguments[2] || '';\n                        break;\n\n                    // Ex: swal({ title:\"Hello\", text: \"Just testing\", type: \"info\" });\n                    case 'object':\n                        if (customizations.title === undefined) {\n                            _extend$hexToRgb$isIE8$logStr$colorLuminance.logStr('Missing \"title\" argument!');\n                            return false;\n                        }\n\n                        params.title = customizations.title;\n\n                        for (var customName in _defaultParams2['default']) {\n                            params[customName] = argumentOrDefault(customName);\n                        }\n\n                        // Show \"Confirm\" instead of \"OK\" if cancel button is visible\n                        params.confirmButtonText = params.showCancelButton ? 'Confirm' : _defaultParams2['default'].confirmButtonText;\n                        params.confirmButtonText = argumentOrDefault('confirmButtonText');\n\n                        // Callback function when clicking on \"OK\"/\"Cancel\"\n                        params.doneFunction = arguments[1] || null;\n\n                        break;\n\n                    default:\n                        _extend$hexToRgb$isIE8$logStr$colorLuminance.logStr('Unexpected type of argument! Expected \"string\" or \"object\", got ' + typeof customizations);\n                        return false;\n\n                }\n\n                _setParameters2['default'](params);\n                _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.fixVerticalPosition();\n                _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.openModal(arguments[1]);\n\n                // Modal interactions\n                var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n\n                /*\n                 * Make sure all modal buttons respond to all events\n                 */\n                var $buttons = modal.querySelectorAll('button');\n                var buttonEvents = ['onclick', 'onmouseover', 'onmouseout', 'onmousedown', 'onmouseup', 'onfocus'];\n                var onButtonEvent = function onButtonEvent(e) {\n                    return _handleButton$handleConfirm$handleCancel.handleButton(e, params, modal);\n                };\n\n                for (var btnIndex = 0; btnIndex < $buttons.length; btnIndex++) {\n                    for (var evtIndex = 0; evtIndex < buttonEvents.length; evtIndex++) {\n                        var btnEvt = buttonEvents[evtIndex];\n                        $buttons[btnIndex][btnEvt] = onButtonEvent;\n                    }\n                }\n\n                // Clicking outside the modal dismisses it (if allowed by user)\n                _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getOverlay().onclick = onButtonEvent;\n\n                previousWindowKeyDown = window.onkeydown;\n\n                var onKeyEvent = function onKeyEvent(e) {\n                    return _handleKeyDown2['default'](e, params, modal);\n                };\n                window.onkeydown = onKeyEvent;\n\n                window.onfocus = function () {\n                    // When the user has focused away and focused back from the whole window.\n                    setTimeout(function () {\n                        // Put in a timeout to jump out of the event sequence.\n                        // Calling focus() in the event sequence confuses things.\n                        if (lastFocusedButton !== undefined) {\n                            lastFocusedButton.focus();\n                            lastFocusedButton = undefined;\n                        }\n                    }, 0);\n                };\n\n                // Show alert with enabled buttons always\n                swal.enableButtons();\n            };\n\n            /*\n             * Set default params for each popup\n             * @param {Object} userParams\n             */\n            sweetAlert.setDefaults = swal.setDefaults = function (userParams) {\n                if (!userParams) {\n                    throw new Error('userParams is required');\n                }\n                if (typeof userParams !== 'object') {\n                    throw new Error('userParams has to be a object');\n                }\n\n                _extend$hexToRgb$isIE8$logStr$colorLuminance.extend(_defaultParams2['default'], userParams);\n            };\n\n            /*\n             * Animation when closing modal\n             */\n            sweetAlert.close = swal.close = function () {\n                var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.fadeOut(_sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getOverlay(), 5);\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.fadeOut(modal, 5);\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass(modal, 'showSweetAlert');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.addClass(modal, 'hideSweetAlert');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass(modal, 'visible');\n\n                /*\n                 * Reset icon animations\n                 */\n                var $successIcon = modal.querySelector('.sa-icon.sa-success');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($successIcon, 'animate');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($successIcon.querySelector('.sa-tip'), 'animateSuccessTip');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($successIcon.querySelector('.sa-long'), 'animateSuccessLong');\n\n                var $errorIcon = modal.querySelector('.sa-icon.sa-error');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($errorIcon, 'animateErrorIcon');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($errorIcon.querySelector('.sa-x-mark'), 'animateXMark');\n\n                var $warningIcon = modal.querySelector('.sa-icon.sa-warning');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($warningIcon, 'pulseWarning');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($warningIcon.querySelector('.sa-body'), 'pulseWarningIns');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($warningIcon.querySelector('.sa-dot'), 'pulseWarningIns');\n\n                // Reset custom class (delay so that UI changes aren't visible)\n                setTimeout(function () {\n                    var customClass = modal.getAttribute('data-custom-class');\n                    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass(modal, customClass);\n                }, 300);\n\n                // Make page scrollable again\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass(document.body, 'stop-scrolling');\n\n                // Reset the page to its previous state\n                window.onkeydown = previousWindowKeyDown;\n                if (window.previousActiveElement) {\n                    window.previousActiveElement.focus();\n                }\n                lastFocusedButton = undefined;\n                clearTimeout(modal.timeout);\n\n                return true;\n            };\n\n            /*\n             * Validation of the input field is done by user\n             * If something is wrong => call showInputError with errorMessage\n             */\n            sweetAlert.showInputError = swal.showInputError = function (errorMessage) {\n                var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n\n                var $errorIcon = modal.querySelector('.sa-input-error');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.addClass($errorIcon, 'show');\n\n                var $errorContainer = modal.querySelector('.sa-error-container');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.addClass($errorContainer, 'show');\n\n                $errorContainer.querySelector('p').innerHTML = errorMessage;\n\n                setTimeout(function () {\n                    sweetAlert.enableButtons();\n                }, 1);\n\n                modal.querySelector('input').focus();\n            };\n\n            /*\n             * Reset input error DOM elements\n             */\n            sweetAlert.resetInputError = swal.resetInputError = function (event) {\n                // If press enter => ignore\n                if (event && event.keyCode === 13) {\n                    return false;\n                }\n\n                var $modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n\n                var $errorIcon = $modal.querySelector('.sa-input-error');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($errorIcon, 'show');\n\n                var $errorContainer = $modal.querySelector('.sa-error-container');\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide$isDescendant$getTopMargin$fadeIn$fadeOut$fireClick$stopEventPropagation.removeClass($errorContainer, 'show');\n            };\n\n            /*\n             * Disable confirm and cancel buttons\n             */\n            sweetAlert.disableButtons = swal.disableButtons = function (event) {\n                var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n                var $confirmButton = modal.querySelector('button.confirm');\n                var $cancelButton = modal.querySelector('button.cancel');\n                $confirmButton.disabled = true;\n                $cancelButton.disabled = true;\n            };\n\n            /*\n             * Enable confirm and cancel buttons\n             */\n            sweetAlert.enableButtons = swal.enableButtons = function (event) {\n                var modal = _sweetAlertInitialize$getModal$getOverlay$getInput$setFocusStyle$openModal$resetInput$fixVerticalPosition.getModal();\n                var $confirmButton = modal.querySelector('button.confirm');\n                var $cancelButton = modal.querySelector('button.cancel');\n                $confirmButton.disabled = false;\n                $cancelButton.disabled = false;\n            };\n\n            if (typeof window !== 'undefined') {\n                // The 'handle-click' module requires\n                // that 'sweetAlert' was set as global.\n                window.sweetAlert = window.swal = sweetAlert;\n            } else {\n                _extend$hexToRgb$isIE8$logStr$colorLuminance.logStr('SweetAlert is a frontend module!');\n            }\n            module.exports = exports['default'];\n\n        }, {\n            \"./modules/default-params\": 2,\n            \"./modules/handle-click\": 3,\n            \"./modules/handle-dom\": 4,\n            \"./modules/handle-key\": 5,\n            \"./modules/handle-swal-dom\": 6,\n            \"./modules/set-params\": 8,\n            \"./modules/utils\": 9\n        }],\n        2: [function (require, module, exports) {\n            'use strict';\n\n            Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n            var defaultParams = {\n                title: '',\n                text: '',\n                type: null,\n                allowOutsideClick: false,\n                showConfirmButton: true,\n                showCancelButton: false,\n                closeOnConfirm: true,\n                closeOnCancel: true,\n                confirmButtonText: 'OK',\n                confirmButtonColor: '#8CD4F5',\n                cancelButtonText: 'Cancel',\n                imageUrl: null,\n                imageSize: null,\n                timer: null,\n                customClass: '',\n                html: false,\n                animation: true,\n                allowEscapeKey: true,\n                inputType: 'text',\n                inputPlaceholder: '',\n                inputValue: '',\n                showLoaderOnConfirm: false\n            };\n\n            exports['default'] = defaultParams;\n            module.exports = exports['default'];\n\n        }, {}],\n        3: [function (require, module, exports) {\n            'use strict';\n\n            Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n\n            var _colorLuminance = require('./utils');\n\n            var _getModal = require('./handle-swal-dom');\n\n            var _hasClass$isDescendant = require('./handle-dom');\n\n            /*\n             * User clicked on \"Confirm\"/\"OK\" or \"Cancel\"\n             */\n            var handleButton = function handleButton(event, params, modal) {\n                var e = event || window.event;\n                var target = e.target || e.srcElement;\n\n                var targetedConfirm = target.className.indexOf('confirm') !== -1;\n                var targetedOverlay = target.className.indexOf('sweet-overlay') !== -1;\n                var modalIsVisible = _hasClass$isDescendant.hasClass(modal, 'visible');\n                var doneFunctionExists = params.doneFunction && modal.getAttribute('data-has-done-function') === 'true';\n\n                // Since the user can change the background-color of the confirm button programmatically,\n                // we must calculate what the color should be on hover/active\n                var normalColor, hoverColor, activeColor;\n                if (targetedConfirm && params.confirmButtonColor) {\n                    normalColor = params.confirmButtonColor;\n                    hoverColor = _colorLuminance.colorLuminance(normalColor, -0.04);\n                    activeColor = _colorLuminance.colorLuminance(normalColor, -0.14);\n                }\n\n                function shouldSetConfirmButtonColor(color) {\n                    if (targetedConfirm && params.confirmButtonColor) {\n                        target.style.backgroundColor = color;\n                    }\n                }\n\n                switch (e.type) {\n                    case 'mouseover':\n                        shouldSetConfirmButtonColor(hoverColor);\n                        break;\n\n                    case 'mouseout':\n                        shouldSetConfirmButtonColor(normalColor);\n                        break;\n\n                    case 'mousedown':\n                        shouldSetConfirmButtonColor(activeColor);\n                        break;\n\n                    case 'mouseup':\n                        shouldSetConfirmButtonColor(hoverColor);\n                        break;\n\n                    case 'focus':\n                        var $confirmButton = modal.querySelector('button.confirm');\n                        var $cancelButton = modal.querySelector('button.cancel');\n\n                        if (targetedConfirm) {\n                            $cancelButton.style.boxShadow = 'none';\n                        } else {\n                            $confirmButton.style.boxShadow = 'none';\n                        }\n                        break;\n\n                    case 'click':\n                        var clickedOnModal = modal === target;\n                        var clickedOnModalChild = _hasClass$isDescendant.isDescendant(modal, target);\n\n                        // Ignore click outside if allowOutsideClick is false\n                        if (!clickedOnModal && !clickedOnModalChild && modalIsVisible && !params.allowOutsideClick) {\n                            break;\n                        }\n\n                        if (targetedConfirm && doneFunctionExists && modalIsVisible) {\n                            handleConfirm(modal, params);\n                        } else if (doneFunctionExists && modalIsVisible || targetedOverlay) {\n                            handleCancel(modal, params);\n                        } else if (_hasClass$isDescendant.isDescendant(modal, target) && target.tagName === 'BUTTON') {\n                            sweetAlert.close();\n                        }\n                        break;\n                }\n            };\n\n            /*\n             *  User clicked on \"Confirm\"/\"OK\"\n             */\n            var handleConfirm = function handleConfirm(modal, params) {\n                var callbackValue = true;\n\n                if (_hasClass$isDescendant.hasClass(modal, 'show-input')) {\n                    callbackValue = modal.querySelector('input').value;\n\n                    if (!callbackValue) {\n                        callbackValue = '';\n                    }\n                }\n\n                params.doneFunction(callbackValue);\n\n                if (params.closeOnConfirm) {\n                    sweetAlert.close();\n                }\n                // Disable cancel and confirm button if the parameter is true\n                if (params.showLoaderOnConfirm) {\n                    sweetAlert.disableButtons();\n                }\n            };\n\n            /*\n             *  User clicked on \"Cancel\"\n             */\n            var handleCancel = function handleCancel(modal, params) {\n                // Check if callback function expects a parameter (to track cancel actions)\n                var functionAsStr = String(params.doneFunction).replace(/\\s/g, '');\n                var functionHandlesCancel = functionAsStr.substring(0, 9) === 'function(' && functionAsStr.substring(9, 10) !== ')';\n\n                if (functionHandlesCancel) {\n                    params.doneFunction(false);\n                }\n\n                if (params.closeOnCancel) {\n                    sweetAlert.close();\n                }\n            };\n\n            exports['default'] = {\n                handleButton: handleButton,\n                handleConfirm: handleConfirm,\n                handleCancel: handleCancel\n            };\n            module.exports = exports['default'];\n\n        }, {\"./handle-dom\": 4, \"./handle-swal-dom\": 6, \"./utils\": 9}],\n        4: [function (require, module, exports) {\n            'use strict';\n\n            Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n            var hasClass = function hasClass(elem, className) {\n                return new RegExp(' ' + className + ' ').test(' ' + elem.className + ' ');\n            };\n\n            var addClass = function addClass(elem, className) {\n                if (!hasClass(elem, className)) {\n                    elem.className += ' ' + className;\n                }\n            };\n\n            var removeClass = function removeClass(elem, className) {\n                var newClass = ' ' + elem.className.replace(/[\\t\\r\\n]/g, ' ') + ' ';\n                if (hasClass(elem, className)) {\n                    while (newClass.indexOf(' ' + className + ' ') >= 0) {\n                        newClass = newClass.replace(' ' + className + ' ', ' ');\n                    }\n                    elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n                }\n            };\n\n            var escapeHtml = function escapeHtml(str) {\n                var div = document.createElement('div');\n                div.appendChild(document.createTextNode(str));\n                return div.innerHTML;\n            };\n\n            var _show = function _show(elem) {\n                elem.style.opacity = '';\n                elem.style.display = 'block';\n            };\n\n            var show = function show(elems) {\n                if (elems && !elems.length) {\n                    return _show(elems);\n                }\n                for (var i = 0; i < elems.length; ++i) {\n                    _show(elems[i]);\n                }\n            };\n\n            var _hide = function _hide(elem) {\n                elem.style.opacity = '';\n                elem.style.display = 'none';\n            };\n\n            var hide = function hide(elems) {\n                if (elems && !elems.length) {\n                    return _hide(elems);\n                }\n                for (var i = 0; i < elems.length; ++i) {\n                    _hide(elems[i]);\n                }\n            };\n\n            var isDescendant = function isDescendant(parent, child) {\n                var node = child.parentNode;\n                while (node !== null) {\n                    if (node === parent) {\n                        return true;\n                    }\n                    node = node.parentNode;\n                }\n                return false;\n            };\n\n            var getTopMargin = function getTopMargin(elem) {\n                elem.style.left = '-9999px';\n                elem.style.display = 'block';\n\n                var height = elem.clientHeight,\n                    padding;\n                if (typeof getComputedStyle !== 'undefined') {\n                    // IE 8\n                    padding = parseInt(getComputedStyle(elem).getPropertyValue('padding-top'), 10);\n                } else {\n                    padding = parseInt(elem.currentStyle.padding);\n                }\n\n                elem.style.left = '';\n                elem.style.display = 'none';\n                return '-' + parseInt((height + padding) / 2) + 'px';\n            };\n\n            var fadeIn = function fadeIn(elem, interval) {\n                if (+elem.style.opacity < 1) {\n                    interval = interval || 16;\n                    elem.style.opacity = 0;\n                    elem.style.display = 'block';\n                    var last = +new Date();\n                    var tick = (function (_tick) {\n                        function tick() {\n                            return _tick.apply(this, arguments);\n                        }\n\n                        tick.toString = function () {\n                            return _tick.toString();\n                        };\n\n                        return tick;\n                    })(function () {\n                        elem.style.opacity = +elem.style.opacity + (new Date() - last) / 100;\n                        last = +new Date();\n\n                        if (+elem.style.opacity < 1) {\n                            setTimeout(tick, interval);\n                        }\n                    });\n                    tick();\n                }\n                elem.style.display = 'block'; //fallback IE8\n            };\n\n            var fadeOut = function fadeOut(elem, interval) {\n                interval = interval || 16;\n                elem.style.opacity = 1;\n                var last = +new Date();\n                var tick = (function (_tick2) {\n                    function tick() {\n                        return _tick2.apply(this, arguments);\n                    }\n\n                    tick.toString = function () {\n                        return _tick2.toString();\n                    };\n\n                    return tick;\n                })(function () {\n                    elem.style.opacity = +elem.style.opacity - (new Date() - last) / 100;\n                    last = +new Date();\n\n                    if (+elem.style.opacity > 0) {\n                        setTimeout(tick, interval);\n                    } else {\n                        elem.style.display = 'none';\n                    }\n                });\n                tick();\n            };\n\n            var fireClick = function fireClick(node) {\n                // Taken from http://www.nonobtrusive.com/2011/11/29/programatically-fire-crossbrowser-click-event-with-javascript/\n                // Then fixed for today's Chrome browser.\n                if (typeof MouseEvent === 'function') {\n                    // Up-to-date approach\n                    var mevt = new MouseEvent('click', {\n                        view: window,\n                        bubbles: false,\n                        cancelable: true\n                    });\n                    node.dispatchEvent(mevt);\n                } else if (document.createEvent) {\n                    // Fallback\n                    var evt = document.createEvent('MouseEvents');\n                    evt.initEvent('click', false, false);\n                    node.dispatchEvent(evt);\n                } else if (document.createEventObject) {\n                    node.fireEvent('onclick');\n                } else if (typeof node.onclick === 'function') {\n                    node.onclick();\n                }\n            };\n\n            var stopEventPropagation = function stopEventPropagation(e) {\n                // In particular, make sure the space bar doesn't scroll the main window.\n                if (typeof e.stopPropagation === 'function') {\n                    e.stopPropagation();\n                    e.preventDefault();\n                } else if (window.event && window.event.hasOwnProperty('cancelBubble')) {\n                    window.event.cancelBubble = true;\n                }\n            };\n\n            exports.hasClass = hasClass;\n            exports.addClass = addClass;\n            exports.removeClass = removeClass;\n            exports.escapeHtml = escapeHtml;\n            exports._show = _show;\n            exports.show = show;\n            exports._hide = _hide;\n            exports.hide = hide;\n            exports.isDescendant = isDescendant;\n            exports.getTopMargin = getTopMargin;\n            exports.fadeIn = fadeIn;\n            exports.fadeOut = fadeOut;\n            exports.fireClick = fireClick;\n            exports.stopEventPropagation = stopEventPropagation;\n\n        }, {}],\n        5: [function (require, module, exports) {\n            'use strict';\n\n            Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n\n            var _stopEventPropagation$fireClick = require('./handle-dom');\n\n            var _setFocusStyle = require('./handle-swal-dom');\n\n            var handleKeyDown = function handleKeyDown(event, params, modal) {\n                var e = event || window.event;\n                var keyCode = e.keyCode || e.which;\n\n                var $okButton = modal.querySelector('button.confirm');\n                var $cancelButton = modal.querySelector('button.cancel');\n                var $modalButtons = modal.querySelectorAll('button[tabindex]');\n\n                if ([9, 13, 32, 27].indexOf(keyCode) === -1) {\n                    // Don't do work on keys we don't care about.\n                    return;\n                }\n\n                var $targetElement = e.target || e.srcElement;\n\n                var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\n                for (var i = 0; i < $modalButtons.length; i++) {\n                    if ($targetElement === $modalButtons[i]) {\n                        btnIndex = i;\n                        break;\n                    }\n                }\n\n                if (keyCode === 9) {\n                    // TAB\n                    if (btnIndex === -1) {\n                        // No button focused. Jump to the confirm button.\n                        $targetElement = $okButton;\n                    } else {\n                        // Cycle to the next button\n                        if (btnIndex === $modalButtons.length - 1) {\n                            $targetElement = $modalButtons[0];\n                        } else {\n                            $targetElement = $modalButtons[btnIndex + 1];\n                        }\n                    }\n\n                    _stopEventPropagation$fireClick.stopEventPropagation(e);\n                    $targetElement.focus();\n\n                    if (params.confirmButtonColor) {\n                        _setFocusStyle.setFocusStyle($targetElement, params.confirmButtonColor);\n                    }\n                } else {\n                    if (keyCode === 13) {\n                        if ($targetElement.tagName === 'INPUT') {\n                            $targetElement = $okButton;\n                            $okButton.focus();\n                        }\n\n                        if (btnIndex === -1) {\n                            // ENTER/SPACE clicked outside of a button.\n                            $targetElement = $okButton;\n                        } else {\n                            // Do nothing - let the browser handle it.\n                            $targetElement = undefined;\n                        }\n                    } else if (keyCode === 27 && params.allowEscapeKey === true) {\n                        $targetElement = $cancelButton;\n                        _stopEventPropagation$fireClick.fireClick($targetElement, e);\n                    } else {\n                        // Fallback - let the browser handle it.\n                        $targetElement = undefined;\n                    }\n                }\n            };\n\n            exports['default'] = handleKeyDown;\n            module.exports = exports['default'];\n\n        }, {\"./handle-dom\": 4, \"./handle-swal-dom\": 6}],\n        6: [function (require, module, exports) {\n            'use strict';\n\n            var _interopRequireWildcard = function (obj) {\n                return obj && obj.__esModule ? obj : {'default': obj};\n            };\n\n            Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n\n            var _hexToRgb = require('./utils');\n\n            var _removeClass$getTopMargin$fadeIn$show$addClass = require('./handle-dom');\n\n            var _defaultParams = require('./default-params');\n\n            var _defaultParams2 = _interopRequireWildcard(_defaultParams);\n\n            /*\n             * Add modal + overlay to DOM\n             */\n\n            var _injectedHTML = require('./injected-html');\n\n            var _injectedHTML2 = _interopRequireWildcard(_injectedHTML);\n\n            var modalClass = '.sweet-alert';\n            var overlayClass = '.sweet-overlay';\n\n            var sweetAlertInitialize = function sweetAlertInitialize() {\n                var sweetWrap = document.createElement('div');\n                sweetWrap.innerHTML = _injectedHTML2['default'];\n\n                // Append elements to body\n                while (sweetWrap.firstChild) {\n                    document.body.appendChild(sweetWrap.firstChild);\n                }\n            };\n\n            /*\n             * Get DOM element of modal\n             */\n            var getModal = (function (_getModal) {\n                function getModal() {\n                    return _getModal.apply(this, arguments);\n                }\n\n                getModal.toString = function () {\n                    return _getModal.toString();\n                };\n\n                return getModal;\n            })(function () {\n                var $modal = document.querySelector(modalClass);\n\n                if (!$modal) {\n                    sweetAlertInitialize();\n                    $modal = getModal();\n                }\n\n                return $modal;\n            });\n\n            /*\n             * Get DOM element of input (in modal)\n             */\n            var getInput = function getInput() {\n                var $modal = getModal();\n                if ($modal) {\n                    return $modal.querySelector('input');\n                }\n            };\n\n            /*\n             * Get DOM element of overlay\n             */\n            var getOverlay = function getOverlay() {\n                return document.querySelector(overlayClass);\n            };\n\n            /*\n             * Add box-shadow style to button (depending on its chosen bg-color)\n             */\n            var setFocusStyle = function setFocusStyle($button, bgColor) {\n                var rgbColor = _hexToRgb.hexToRgb(bgColor);\n                $button.style.boxShadow = '0 0 2px rgba(' + rgbColor + ', 0.8), inset 0 0 0 1px rgba(0, 0, 0, 0.05)';\n            };\n\n            /*\n             * Animation when opening modal\n             */\n            var openModal = function openModal(callback) {\n                var $modal = getModal();\n                _removeClass$getTopMargin$fadeIn$show$addClass.fadeIn(getOverlay(), 10);\n                _removeClass$getTopMargin$fadeIn$show$addClass.show($modal);\n                _removeClass$getTopMargin$fadeIn$show$addClass.addClass($modal, 'showSweetAlert');\n                _removeClass$getTopMargin$fadeIn$show$addClass.removeClass($modal, 'hideSweetAlert');\n\n                window.previousActiveElement = document.activeElement;\n                var $okButton = $modal.querySelector('button.confirm');\n                $okButton.focus();\n\n                setTimeout(function () {\n                    _removeClass$getTopMargin$fadeIn$show$addClass.addClass($modal, 'visible');\n                }, 500);\n\n                var timer = $modal.getAttribute('data-timer');\n\n                if (timer !== 'null' && timer !== '') {\n                    var timerCallback = callback;\n                    $modal.timeout = setTimeout(function () {\n                        var doneFunctionExists = (timerCallback || null) && $modal.getAttribute('data-has-done-function') === 'true';\n                        if (doneFunctionExists) {\n                            timerCallback(null);\n                        } else {\n                            sweetAlert.close();\n                        }\n                    }, timer);\n                }\n            };\n\n            /*\n             * Reset the styling of the input\n             * (for example if errors have been shown)\n             */\n            var resetInput = function resetInput() {\n                var $modal = getModal();\n                var $input = getInput();\n\n                _removeClass$getTopMargin$fadeIn$show$addClass.removeClass($modal, 'show-input');\n                $input.value = _defaultParams2['default'].inputValue;\n                $input.setAttribute('type', _defaultParams2['default'].inputType);\n                $input.setAttribute('placeholder', _defaultParams2['default'].inputPlaceholder);\n\n                resetInputError();\n            };\n\n            var resetInputError = function resetInputError(event) {\n                // If press enter => ignore\n                if (event && event.keyCode === 13) {\n                    return false;\n                }\n\n                var $modal = getModal();\n\n                var $errorIcon = $modal.querySelector('.sa-input-error');\n                _removeClass$getTopMargin$fadeIn$show$addClass.removeClass($errorIcon, 'show');\n\n                var $errorContainer = $modal.querySelector('.sa-error-container');\n                _removeClass$getTopMargin$fadeIn$show$addClass.removeClass($errorContainer, 'show');\n            };\n\n            /*\n             * Set \"margin-top\"-property on modal based on its computed height\n             */\n            var fixVerticalPosition = function fixVerticalPosition() {\n                var $modal = getModal();\n                $modal.style.marginTop = _removeClass$getTopMargin$fadeIn$show$addClass.getTopMargin(getModal());\n            };\n\n            exports.sweetAlertInitialize = sweetAlertInitialize;\n            exports.getModal = getModal;\n            exports.getOverlay = getOverlay;\n            exports.getInput = getInput;\n            exports.setFocusStyle = setFocusStyle;\n            exports.openModal = openModal;\n            exports.resetInput = resetInput;\n            exports.resetInputError = resetInputError;\n            exports.fixVerticalPosition = fixVerticalPosition;\n\n        }, {\"./default-params\": 2, \"./handle-dom\": 4, \"./injected-html\": 7, \"./utils\": 9}],\n        7: [function (require, module, exports) {\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n            var injectedHTML =\n\n// Dark overlay\n                \"<div class=\\\"sweet-overlay\\\" tabIndex=\\\"-1\\\"></div>\" +\n\n// Modal\n                \"<div class=\\\"sweet-alert\\\">\" +\n\n// Error icon\n                \"<div class=\\\"sa-icon sa-error\\\">\\n      <span class=\\\"sa-x-mark\\\">\\n        <span class=\\\"sa-line sa-left\\\"></span>\\n        <span class=\\\"sa-line sa-right\\\"></span>\\n      </span>\\n    </div>\" +\n\n// Warning icon\n                \"<div class=\\\"sa-icon sa-warning\\\">\\n      <span class=\\\"sa-body\\\"></span>\\n      <span class=\\\"sa-dot\\\"></span>\\n    </div>\" +\n\n// Info icon\n                \"<div class=\\\"sa-icon sa-info\\\"></div>\" +\n\n// Success icon\n                \"<div class=\\\"sa-icon sa-success\\\">\\n      <span class=\\\"sa-line sa-tip\\\"></span>\\n      <span class=\\\"sa-line sa-long\\\"></span>\\n\\n      <div class=\\\"sa-placeholder\\\"></div>\\n      <div class=\\\"sa-fix\\\"></div>\\n    </div>\" + \"<div class=\\\"sa-icon sa-custom\\\"></div>\" +\n\n// Title, text and input\n                \"<h2>Title</h2>\\n    <p>Text</p>\\n    <fieldset>\\n      <input type=\\\"text\\\" tabIndex=\\\"3\\\" />\\n      <div class=\\\"sa-input-error\\\"></div>\\n    </fieldset>\" +\n\n// Input errors\n                \"<div class=\\\"sa-error-container\\\">\\n      <div class=\\\"icon\\\">!</div>\\n      <p>Not valid!</p>\\n    </div>\" +\n\n// Cancel and confirm buttons\n                \"<div class=\\\"sa-button-container\\\">\\n      <button class=\\\"cancel\\\" tabIndex=\\\"2\\\">Cancel</button>\\n      <div class=\\\"sa-confirm-button-container\\\">\\n        <button class=\\\"confirm\\\" tabIndex=\\\"1\\\">OK</button>\" +\n\n// Loading animation\n                \"<div class=\\\"la-ball-fall\\\">\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n        </div>\\n      </div>\\n    </div>\" +\n\n// End of modal\n                \"</div>\";\n\n            exports[\"default\"] = injectedHTML;\n            module.exports = exports[\"default\"];\n\n        }, {}],\n        8: [function (require, module, exports) {\n            'use strict';\n\n            Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n\n            var _isIE8 = require('./utils');\n\n            var _getModal$getInput$setFocusStyle = require('./handle-swal-dom');\n\n            var _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide = require('./handle-dom');\n\n            var alertTypes = ['error', 'warning', 'info', 'success', 'input', 'prompt'];\n\n            /*\n             * Set type, text and actions on modal\n             */\n            var setParameters = function setParameters(params) {\n                var modal = _getModal$getInput$setFocusStyle.getModal();\n\n                var $title = modal.querySelector('h2');\n                var $text = modal.querySelector('p');\n                var $cancelBtn = modal.querySelector('button.cancel');\n                var $confirmBtn = modal.querySelector('button.confirm');\n\n                /*\n                 * Title\n                 */\n                $title.innerHTML = params.html ? params.title : _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.escapeHtml(params.title).split('\\n').join('<br>');\n\n                /*\n                 * Text\n                 */\n                $text.innerHTML = params.html ? params.text : _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.escapeHtml(params.text || '').split('\\n').join('<br>');\n                if (params.text) _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.show($text);\n\n                /*\n                 * Custom class\n                 */\n                if (params.customClass) {\n                    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass(modal, params.customClass);\n                    modal.setAttribute('data-custom-class', params.customClass);\n                } else {\n                    // Find previously set classes and remove them\n                    var customClass = modal.getAttribute('data-custom-class');\n                    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.removeClass(modal, customClass);\n                    modal.setAttribute('data-custom-class', '');\n                }\n\n                /*\n                 * Icon\n                 */\n                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.hide(modal.querySelectorAll('.sa-icon'));\n\n                if (params.type && !_isIE8.isIE8()) {\n                    var _ret = (function () {\n\n                        var validType = false;\n\n                        for (var i = 0; i < alertTypes.length; i++) {\n                            if (params.type === alertTypes[i]) {\n                                validType = true;\n                                break;\n                            }\n                        }\n\n                        if (!validType) {\n                            logStr('Unknown alert type: ' + params.type);\n                            return {\n                                v: false\n                            };\n                        }\n\n                        var typesWithIcons = ['success', 'error', 'warning', 'info'];\n                        var $icon = undefined;\n\n                        if (typesWithIcons.indexOf(params.type) !== -1) {\n                            $icon = modal.querySelector('.sa-icon.' + 'sa-' + params.type);\n                            _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.show($icon);\n                        }\n\n                        var $input = _getModal$getInput$setFocusStyle.getInput();\n\n                        // Animate icon\n                        switch (params.type) {\n\n                            case 'success':\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon, 'animate');\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-tip'), 'animateSuccessTip');\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-long'), 'animateSuccessLong');\n                                break;\n\n                            case 'error':\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon, 'animateErrorIcon');\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-x-mark'), 'animateXMark');\n                                break;\n\n                            case 'warning':\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon, 'pulseWarning');\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-body'), 'pulseWarningIns');\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass($icon.querySelector('.sa-dot'), 'pulseWarningIns');\n                                break;\n\n                            case 'input':\n                            case 'prompt':\n                                $input.setAttribute('type', params.inputType);\n                                $input.value = params.inputValue;\n                                $input.setAttribute('placeholder', params.inputPlaceholder);\n                                _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.addClass(modal, 'show-input');\n                                setTimeout(function () {\n                                    $input.focus();\n                                    $input.addEventListener('keyup', swal.resetInputError);\n                                }, 400);\n                                break;\n                        }\n                    })();\n\n                    if (typeof _ret === 'object') {\n                        return _ret.v;\n                    }\n                }\n\n                /*\n                 * Custom image\n                 */\n                if (params.imageUrl) {\n                    var $customIcon = modal.querySelector('.sa-icon.sa-custom');\n\n                    $customIcon.style.backgroundImage = 'url(' + params.imageUrl + ')';\n                    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.show($customIcon);\n\n                    var _imgWidth = 80;\n                    var _imgHeight = 80;\n\n                    if (params.imageSize) {\n                        var dimensions = params.imageSize.toString().split('x');\n                        var imgWidth = dimensions[0];\n                        var imgHeight = dimensions[1];\n\n                        if (!imgWidth || !imgHeight) {\n                            logStr('Parameter imageSize expects value with format WIDTHxHEIGHT, got ' + params.imageSize);\n                        } else {\n                            _imgWidth = imgWidth;\n                            _imgHeight = imgHeight;\n                        }\n                    }\n\n                    $customIcon.setAttribute('style', $customIcon.getAttribute('style') + 'width:' + _imgWidth + 'px; height:' + _imgHeight + 'px');\n                }\n\n                /*\n                 * Show cancel button?\n                 */\n                modal.setAttribute('data-has-cancel-button', params.showCancelButton);\n                if (params.showCancelButton) {\n                    $cancelBtn.style.display = 'inline-block';\n                } else {\n                    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.hide($cancelBtn);\n                }\n\n                /*\n                 * Show confirm button?\n                 */\n                modal.setAttribute('data-has-confirm-button', params.showConfirmButton);\n                if (params.showConfirmButton) {\n                    $confirmBtn.style.display = 'inline-block';\n                } else {\n                    _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.hide($confirmBtn);\n                }\n\n                /*\n                 * Custom text on cancel/confirm buttons\n                 */\n                if (params.cancelButtonText) {\n                    $cancelBtn.innerHTML = _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.escapeHtml(params.cancelButtonText);\n                }\n                if (params.confirmButtonText) {\n                    $confirmBtn.innerHTML = _hasClass$addClass$removeClass$escapeHtml$_show$show$_hide$hide.escapeHtml(params.confirmButtonText);\n                }\n\n                /*\n                 * Custom color on confirm button\n                 */\n                if (params.confirmButtonColor) {\n                    // Set confirm button to selected background color\n                    $confirmBtn.style.backgroundColor = params.confirmButtonColor;\n\n                    // Set the confirm button color to the loading ring\n                    $confirmBtn.style.borderLeftColor = params.confirmLoadingButtonColor;\n                    $confirmBtn.style.borderRightColor = params.confirmLoadingButtonColor;\n\n                    // Set box-shadow to default focused button\n                    _getModal$getInput$setFocusStyle.setFocusStyle($confirmBtn, params.confirmButtonColor);\n                }\n\n                /*\n                 * Allow outside click\n                 */\n                modal.setAttribute('data-allow-outside-click', params.allowOutsideClick);\n\n                /*\n                 * Callback function\n                 */\n                var hasDoneFunction = params.doneFunction ? true : false;\n                modal.setAttribute('data-has-done-function', hasDoneFunction);\n\n                /*\n                 * Animation\n                 */\n                if (!params.animation) {\n                    modal.setAttribute('data-animation', 'none');\n                } else if (typeof params.animation === 'string') {\n                    modal.setAttribute('data-animation', params.animation); // Custom animation\n                } else {\n                    modal.setAttribute('data-animation', 'pop');\n                }\n\n                /*\n                 * Timer\n                 */\n                modal.setAttribute('data-timer', params.timer);\n            };\n\n            exports['default'] = setParameters;\n            module.exports = exports['default'];\n\n        }, {\"./handle-dom\": 4, \"./handle-swal-dom\": 6, \"./utils\": 9}],\n        9: [function (require, module, exports) {\n            'use strict';\n\n            Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n            /*\n             * Allow user to pass their own params\n             */\n            var extend = function extend(a, b) {\n                for (var key in b) {\n                    if (b.hasOwnProperty(key)) {\n                        a[key] = b[key];\n                    }\n                }\n                return a;\n            };\n\n            /*\n             * Convert HEX codes to RGB values (#000000 -> rgb(0,0,0))\n             */\n            var hexToRgb = function hexToRgb(hex) {\n                var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n                return result ? parseInt(result[1], 16) + ', ' + parseInt(result[2], 16) + ', ' + parseInt(result[3], 16) : null;\n            };\n\n            /*\n             * Check if the user is using Internet Explorer 8 (for fallbacks)\n             */\n            var isIE8 = function isIE8() {\n                return window.attachEvent && !window.addEventListener;\n            };\n\n            /*\n             * IE compatible logging for developers\n             */\n            var logStr = function logStr(string) {\n                if (window.console) {\n                    // IE...\n                    window.console.log('SweetAlert: ' + string);\n                }\n            };\n\n            /*\n             * Set hover, active and focus-states for buttons\n             * (source: http://www.sitepoint.com/javascript-generate-lighter-darker-color)\n             */\n            var colorLuminance = function colorLuminance(hex, lum) {\n                // Validate hex string\n                hex = String(hex).replace(/[^0-9a-f]/gi, '');\n                if (hex.length < 6) {\n                    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n                }\n                lum = lum || 0;\n\n                // Convert to decimal and change luminosity\n                var rgb = '#';\n                var c;\n                var i;\n\n                for (i = 0; i < 3; i++) {\n                    c = parseInt(hex.substr(i * 2, 2), 16);\n                    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n                    rgb += ('00' + c).substr(c.length);\n                }\n\n                return rgb;\n            };\n\n            exports.extend = extend;\n            exports.hexToRgb = hexToRgb;\n            exports.isIE8 = isIE8;\n            exports.logStr = logStr;\n            exports.colorLuminance = colorLuminance;\n\n        }, {}]\n    }, {}, [1]);\n//# sourceMappingURL=data:application/json;base64,\n\n\n    /*\n     * Use SweetAlert with RequireJS\n     */\n\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return sweetAlert;\n        });\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = sweetAlert;\n    }\n\n})(window, document);\n","/*! pace 1.0.2 */\n(function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X=[].slice,Y={}.hasOwnProperty,Z=function(a,b){function c(){this.constructor=a}for(var d in b)Y.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},$=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1};for(u={catchupTime:100,initialRate:.03,minTime:250,ghostTime:100,maxProgressPerFrame:20,easeFactor:1.25,startOnPageLoad:!0,restartOnPushState:!0,restartOnRequestAfter:500,target:\"body\",elements:{checkInterval:100,selectors:[\"body\"]},eventLag:{minSamples:10,sampleCount:3,lagThreshold:3},ajax:{trackMethods:[\"GET\"],trackWebSockets:!0,ignoreURLs:[]}},C=function(){var a;return null!=(a=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance.now():void 0)?a:+new Date},E=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,t=window.cancelAnimationFrame||window.mozCancelAnimationFrame,null==E&&(E=function(a){return setTimeout(a,50)},t=function(a){return clearTimeout(a)}),G=function(a){var b,c;return b=C(),(c=function(){var d;return d=C()-b,d>=33?(b=C(),a(d,function(){return E(c)})):setTimeout(c,33-d)})()},F=function(){var a,b,c;return c=arguments[0],b=arguments[1],a=3<=arguments.length?X.call(arguments,2):[],\"function\"==typeof c[b]?c[b].apply(c,a):c[b]},v=function(){var a,b,c,d,e,f,g;for(b=arguments[0],d=2<=arguments.length?X.call(arguments,1):[],f=0,g=d.length;g>f;f++)if(c=d[f])for(a in c)Y.call(c,a)&&(e=c[a],null!=b[a]&&\"object\"==typeof b[a]&&null!=e&&\"object\"==typeof e?v(b[a],e):b[a]=e);return b},q=function(a){var b,c,d,e,f;for(c=b=0,e=0,f=a.length;f>e;e++)d=a[e],c+=Math.abs(d),b++;return c/b},x=function(a,b){var c,d,e;if(null==a&&(a=\"options\"),null==b&&(b=!0),e=document.querySelector(\"[data-pace-\"+a+\"]\")){if(c=e.getAttribute(\"data-pace-\"+a),!b)return c;try{return JSON.parse(c)}catch(f){return d=f,\"undefined\"!=typeof console&&null!==console?console.error(\"Error parsing inline pace options\",d):void 0}}},g=function(){function a(){}return a.prototype.on=function(a,b,c,d){var e;return null==d&&(d=!1),null==this.bindings&&(this.bindings={}),null==(e=this.bindings)[a]&&(e[a]=[]),this.bindings[a].push({handler:b,ctx:c,once:d})},a.prototype.once=function(a,b,c){return this.on(a,b,c,!0)},a.prototype.off=function(a,b){var c,d,e;if(null!=(null!=(d=this.bindings)?d[a]:void 0)){if(null==b)return delete this.bindings[a];for(c=0,e=[];c<this.bindings[a].length;)e.push(this.bindings[a][c].handler===b?this.bindings[a].splice(c,1):c++);return e}},a.prototype.trigger=function(){var a,b,c,d,e,f,g,h,i;if(c=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],null!=(g=this.bindings)?g[c]:void 0){for(e=0,i=[];e<this.bindings[c].length;)h=this.bindings[c][e],d=h.handler,b=h.ctx,f=h.once,d.apply(null!=b?b:this,a),i.push(f?this.bindings[c].splice(e,1):e++);return i}},a}(),j=window.Pace||{},window.Pace=j,v(j,g.prototype),D=j.options=v({},u,window.paceOptions,x()),U=[\"ajax\",\"document\",\"eventLag\",\"elements\"],Q=0,S=U.length;S>Q;Q++)K=U[Q],D[K]===!0&&(D[K]=u[K]);i=function(a){function b(){return V=b.__super__.constructor.apply(this,arguments)}return Z(b,a),b}(Error),b=function(){function a(){this.progress=0}return a.prototype.getElement=function(){var a;if(null==this.el){if(a=document.querySelector(D.target),!a)throw new i;this.el=document.createElement(\"div\"),this.el.className=\"pace pace-active\",document.body.className=document.body.className.replace(/pace-done/g,\"\"),document.body.className+=\" pace-running\",this.el.innerHTML='<div class=\"pace-progress\">\\n  <div class=\"pace-progress-inner\"></div>\\n</div>\\n<div class=\"pace-activity\"></div>',null!=a.firstChild?a.insertBefore(this.el,a.firstChild):a.appendChild(this.el)}return this.el},a.prototype.finish=function(){var a;return a=this.getElement(),a.className=a.className.replace(\"pace-active\",\"\"),a.className+=\" pace-inactive\",document.body.className=document.body.className.replace(\"pace-running\",\"\"),document.body.className+=\" pace-done\"},a.prototype.update=function(a){return this.progress=a,this.render()},a.prototype.destroy=function(){try{this.getElement().parentNode.removeChild(this.getElement())}catch(a){i=a}return this.el=void 0},a.prototype.render=function(){var a,b,c,d,e,f,g;if(null==document.querySelector(D.target))return!1;for(a=this.getElement(),d=\"translate3d(\"+this.progress+\"%, 0, 0)\",g=[\"webkitTransform\",\"msTransform\",\"transform\"],e=0,f=g.length;f>e;e++)b=g[e],a.children[0].style[b]=d;return(!this.lastRenderedProgress||this.lastRenderedProgress|0!==this.progress|0)&&(a.children[0].setAttribute(\"data-progress-text\",\"\"+(0|this.progress)+\"%\"),this.progress>=100?c=\"99\":(c=this.progress<10?\"0\":\"\",c+=0|this.progress),a.children[0].setAttribute(\"data-progress\",\"\"+c)),this.lastRenderedProgress=this.progress},a.prototype.done=function(){return this.progress>=100},a}(),h=function(){function a(){this.bindings={}}return a.prototype.trigger=function(a,b){var c,d,e,f,g;if(null!=this.bindings[a]){for(f=this.bindings[a],g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(c.call(this,b));return g}},a.prototype.on=function(a,b){var c;return null==(c=this.bindings)[a]&&(c[a]=[]),this.bindings[a].push(b)},a}(),P=window.XMLHttpRequest,O=window.XDomainRequest,N=window.WebSocket,w=function(a,b){var c,d,e;e=[];for(d in b.prototype)try{e.push(null==a[d]&&\"function\"!=typeof b[d]?\"function\"==typeof Object.defineProperty?Object.defineProperty(a,d,{get:function(){return b.prototype[d]},configurable:!0,enumerable:!0}):a[d]=b.prototype[d]:void 0)}catch(f){c=f}return e},A=[],j.ignore=function(){var a,b,c;return b=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],A.unshift(\"ignore\"),c=b.apply(null,a),A.shift(),c},j.track=function(){var a,b,c;return b=arguments[0],a=2<=arguments.length?X.call(arguments,1):[],A.unshift(\"track\"),c=b.apply(null,a),A.shift(),c},J=function(a){var b;if(null==a&&(a=\"GET\"),\"track\"===A[0])return\"force\";if(!A.length&&D.ajax){if(\"socket\"===a&&D.ajax.trackWebSockets)return!0;if(b=a.toUpperCase(),$.call(D.ajax.trackMethods,b)>=0)return!0}return!1},k=function(a){function b(){var a,c=this;b.__super__.constructor.apply(this,arguments),a=function(a){var b;return b=a.open,a.open=function(d,e){return J(d)&&c.trigger(\"request\",{type:d,url:e,request:a}),b.apply(a,arguments)}},window.XMLHttpRequest=function(b){var c;return c=new P(b),a(c),c};try{w(window.XMLHttpRequest,P)}catch(d){}if(null!=O){window.XDomainRequest=function(){var b;return b=new O,a(b),b};try{w(window.XDomainRequest,O)}catch(d){}}if(null!=N&&D.ajax.trackWebSockets){window.WebSocket=function(a,b){var d;return d=null!=b?new N(a,b):new N(a),J(\"socket\")&&c.trigger(\"request\",{type:\"socket\",url:a,protocols:b,request:d}),d};try{w(window.WebSocket,N)}catch(d){}}}return Z(b,a),b}(h),R=null,y=function(){return null==R&&(R=new k),R},I=function(a){var b,c,d,e;for(e=D.ajax.ignoreURLs,c=0,d=e.length;d>c;c++)if(b=e[c],\"string\"==typeof b){if(-1!==a.indexOf(b))return!0}else if(b.test(a))return!0;return!1},y().on(\"request\",function(b){var c,d,e,f,g;return f=b.type,e=b.request,g=b.url,I(g)?void 0:j.running||D.restartOnRequestAfter===!1&&\"force\"!==J(f)?void 0:(d=arguments,c=D.restartOnRequestAfter||0,\"boolean\"==typeof c&&(c=0),setTimeout(function(){var b,c,g,h,i,k;if(b=\"socket\"===f?e.readyState<2:0<(h=e.readyState)&&4>h){for(j.restart(),i=j.sources,k=[],c=0,g=i.length;g>c;c++){if(K=i[c],K instanceof a){K.watch.apply(K,d);break}k.push(void 0)}return k}},c))}),a=function(){function a(){var a=this;this.elements=[],y().on(\"request\",function(){return a.watch.apply(a,arguments)})}return a.prototype.watch=function(a){var b,c,d,e;return d=a.type,b=a.request,e=a.url,I(e)?void 0:(c=\"socket\"===d?new n(b):new o(b),this.elements.push(c))},a}(),o=function(){function a(a){var b,c,d,e,f,g,h=this;if(this.progress=0,null!=window.ProgressEvent)for(c=null,a.addEventListener(\"progress\",function(a){return h.progress=a.lengthComputable?100*a.loaded/a.total:h.progress+(100-h.progress)/2},!1),g=[\"load\",\"abort\",\"timeout\",\"error\"],d=0,e=g.length;e>d;d++)b=g[d],a.addEventListener(b,function(){return h.progress=100},!1);else f=a.onreadystatechange,a.onreadystatechange=function(){var b;return 0===(b=a.readyState)||4===b?h.progress=100:3===a.readyState&&(h.progress=50),\"function\"==typeof f?f.apply(null,arguments):void 0}}return a}(),n=function(){function a(a){var b,c,d,e,f=this;for(this.progress=0,e=[\"error\",\"open\"],c=0,d=e.length;d>c;c++)b=e[c],a.addEventListener(b,function(){return f.progress=100},!1)}return a}(),d=function(){function a(a){var b,c,d,f;for(null==a&&(a={}),this.elements=[],null==a.selectors&&(a.selectors=[]),f=a.selectors,c=0,d=f.length;d>c;c++)b=f[c],this.elements.push(new e(b))}return a}(),e=function(){function a(a){this.selector=a,this.progress=0,this.check()}return a.prototype.check=function(){var a=this;return document.querySelector(this.selector)?this.done():setTimeout(function(){return a.check()},D.elements.checkInterval)},a.prototype.done=function(){return this.progress=100},a}(),c=function(){function a(){var a,b,c=this;this.progress=null!=(b=this.states[document.readyState])?b:100,a=document.onreadystatechange,document.onreadystatechange=function(){return null!=c.states[document.readyState]&&(c.progress=c.states[document.readyState]),\"function\"==typeof a?a.apply(null,arguments):void 0}}return a.prototype.states={loading:0,interactive:50,complete:100},a}(),f=function(){function a(){var a,b,c,d,e,f=this;this.progress=0,a=0,e=[],d=0,c=C(),b=setInterval(function(){var g;return g=C()-c-50,c=C(),e.push(g),e.length>D.eventLag.sampleCount&&e.shift(),a=q(e),++d>=D.eventLag.minSamples&&a<D.eventLag.lagThreshold?(f.progress=100,clearInterval(b)):f.progress=100*(3/(a+3))},50)}return a}(),m=function(){function a(a){this.source=a,this.last=this.sinceLastUpdate=0,this.rate=D.initialRate,this.catchup=0,this.progress=this.lastProgress=0,null!=this.source&&(this.progress=F(this.source,\"progress\"))}return a.prototype.tick=function(a,b){var c;return null==b&&(b=F(this.source,\"progress\")),b>=100&&(this.done=!0),b===this.last?this.sinceLastUpdate+=a:(this.sinceLastUpdate&&(this.rate=(b-this.last)/this.sinceLastUpdate),this.catchup=(b-this.progress)/D.catchupTime,this.sinceLastUpdate=0,this.last=b),b>this.progress&&(this.progress+=this.catchup*a),c=1-Math.pow(this.progress/100,D.easeFactor),this.progress+=c*this.rate*a,this.progress=Math.min(this.lastProgress+D.maxProgressPerFrame,this.progress),this.progress=Math.max(0,this.progress),this.progress=Math.min(100,this.progress),this.lastProgress=this.progress,this.progress},a}(),L=null,H=null,r=null,M=null,p=null,s=null,j.running=!1,z=function(){return D.restartOnPushState?j.restart():void 0},null!=window.history.pushState&&(T=window.history.pushState,window.history.pushState=function(){return z(),T.apply(window.history,arguments)}),null!=window.history.replaceState&&(W=window.history.replaceState,window.history.replaceState=function(){return z(),W.apply(window.history,arguments)}),l={ajax:a,elements:d,document:c,eventLag:f},(B=function(){var a,c,d,e,f,g,h,i;for(j.sources=L=[],g=[\"ajax\",\"elements\",\"document\",\"eventLag\"],c=0,e=g.length;e>c;c++)a=g[c],D[a]!==!1&&L.push(new l[a](D[a]));for(i=null!=(h=D.extraSources)?h:[],d=0,f=i.length;f>d;d++)K=i[d],L.push(new K(D));return j.bar=r=new b,H=[],M=new m})(),j.stop=function(){return j.trigger(\"stop\"),j.running=!1,r.destroy(),s=!0,null!=p&&(\"function\"==typeof t&&t(p),p=null),B()},j.restart=function(){return j.trigger(\"restart\"),j.stop(),j.start()},j.go=function(){var a;return j.running=!0,r.render(),a=C(),s=!1,p=G(function(b,c){var d,e,f,g,h,i,k,l,n,o,p,q,t,u,v,w;for(l=100-r.progress,e=p=0,f=!0,i=q=0,u=L.length;u>q;i=++q)for(K=L[i],o=null!=H[i]?H[i]:H[i]=[],h=null!=(w=K.elements)?w:[K],k=t=0,v=h.length;v>t;k=++t)g=h[k],n=null!=o[k]?o[k]:o[k]=new m(g),f&=n.done,n.done||(e++,p+=n.tick(b));return d=p/e,r.update(M.tick(b,d)),r.done()||f||s?(r.update(100),j.trigger(\"done\"),setTimeout(function(){return r.finish(),j.running=!1,j.trigger(\"hide\")},Math.max(D.ghostTime,Math.max(D.minTime-(C()-a),0)))):c()})},j.start=function(a){v(D,a),j.running=!0;try{r.render()}catch(b){i=b}return document.querySelector(\".pace\")?(j.trigger(\"start\"),j.go()):setTimeout(j.start,50)},\"function\"==typeof define&&define.amd?define([\"pace\"],function(){return j}):\"object\"==typeof exports?module.exports=j:D.startOnPageLoad&&j.start()}).call(this);","/*!\n * Jasny Bootstrap v3.1.2 (http://jasny.github.io/bootstrap)\n * Copyright 2012-2014 Arnold Daniels\n * Licensed under Apache-2.0 (https://github.com/jasny/bootstrap/blob/master/LICENSE)\n */\nif(\"undefined\"==typeof jQuery)throw new Error(\"Jasny Bootstrap's JavaScript requires jQuery\");+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}void 0===a.support.transition&&(a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(a.support.transition.end,function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b()}))}(window.jQuery),+function(a){\"use strict\";var b=function(c,d){this.$element=a(c),this.options=a.extend({},b.DEFAULTS,d),this.state=null,this.placement=null,this.options.recalc&&(this.calcClone(),a(window).on(\"resize\",a.proxy(this.recalc,this))),this.options.autohide&&a(document).on(\"click\",a.proxy(this.autohide,this)),this.options.toggle&&this.toggle(),this.options.disablescrolling&&(this.options.disableScrolling=this.options.disablescrolling,delete this.options.disablescrolling)};b.DEFAULTS={toggle:!0,placement:\"auto\",autohide:!0,recalc:!0,disableScrolling:!0},b.prototype.offset=function(){switch(this.placement){case\"left\":case\"right\":return this.$element.outerWidth();case\"top\":case\"bottom\":return this.$element.outerHeight()}},b.prototype.calcPlacement=function(){function b(a,b){if(\"auto\"===e.css(b))return a;if(\"auto\"===e.css(a))return b;var c=parseInt(e.css(a),10),d=parseInt(e.css(b),10);return c>d?b:a}if(\"auto\"!==this.options.placement)return void(this.placement=this.options.placement);this.$element.hasClass(\"in\")||this.$element.css(\"visiblity\",\"hidden !important\").addClass(\"in\");var c=a(window).width()/this.$element.width(),d=a(window).height()/this.$element.height(),e=this.$element;this.placement=c>=d?b(\"left\",\"right\"):b(\"top\",\"bottom\"),\"hidden !important\"===this.$element.css(\"visibility\")&&this.$element.removeClass(\"in\").css(\"visiblity\",\"\")},b.prototype.opposite=function(a){switch(a){case\"top\":return\"bottom\";case\"left\":return\"right\";case\"bottom\":return\"top\";case\"right\":return\"left\"}},b.prototype.getCanvasElements=function(){var b=this.options.canvas?a(this.options.canvas):this.$element,c=b.find(\"*\").filter(function(){return\"fixed\"===a(this).css(\"position\")}).not(this.options.exclude);return b.add(c)},b.prototype.slide=function(b,c,d){if(!a.support.transition){var e={};return e[this.placement]=\"+=\"+c,b.animate(e,350,d)}var f=this.placement,g=this.opposite(f);b.each(function(){\"auto\"!==a(this).css(f)&&a(this).css(f,(parseInt(a(this).css(f),10)||0)+c),\"auto\"!==a(this).css(g)&&a(this).css(g,(parseInt(a(this).css(g),10)||0)-c)}),this.$element.one(a.support.transition.end,d).emulateTransitionEnd(350)},b.prototype.disableScrolling=function(){var b=a(\"body\").width(),c=\"padding-\"+this.opposite(this.placement);if(void 0===a(\"body\").data(\"offcanvas-style\")&&a(\"body\").data(\"offcanvas-style\",a(\"body\").attr(\"style\")),a(\"body\").css(\"overflow\",\"hidden\"),a(\"body\").width()>b){var d=parseInt(a(\"body\").css(c),10)+a(\"body\").width()-b;setTimeout(function(){a(\"body\").css(c,d)},1)}},b.prototype.show=function(){if(!this.state){var b=a.Event(\"show.bs.offcanvas\");if(this.$element.trigger(b),!b.isDefaultPrevented()){this.state=\"slide-in\",this.calcPlacement();var c=this.getCanvasElements(),d=this.placement,e=this.opposite(d),f=this.offset();-1!==c.index(this.$element)&&(a(this.$element).data(\"offcanvas-style\",a(this.$element).attr(\"style\")||\"\"),this.$element.css(d,-1*f),this.$element.css(d)),c.addClass(\"canvas-sliding\").each(function(){void 0===a(this).data(\"offcanvas-style\")&&a(this).data(\"offcanvas-style\",a(this).attr(\"style\")||\"\"),\"static\"===a(this).css(\"position\")&&a(this).css(\"position\",\"relative\"),\"auto\"!==a(this).css(d)&&\"0px\"!==a(this).css(d)||\"auto\"!==a(this).css(e)&&\"0px\"!==a(this).css(e)||a(this).css(d,0)}),this.options.disableScrolling&&this.disableScrolling();var g=function(){\"slide-in\"==this.state&&(this.state=\"slid\",c.removeClass(\"canvas-sliding\").addClass(\"canvas-slid\"),this.$element.trigger(\"shown.bs.offcanvas\"))};setTimeout(a.proxy(function(){this.$element.addClass(\"in\"),this.slide(c,f,a.proxy(g,this))},this),1)}}},b.prototype.hide=function(){if(\"slid\"===this.state){var b=a.Event(\"hide.bs.offcanvas\");if(this.$element.trigger(b),!b.isDefaultPrevented()){this.state=\"slide-out\";var c=a(\".canvas-slid\"),d=(this.placement,-1*this.offset()),e=function(){\"slide-out\"==this.state&&(this.state=null,this.placement=null,this.$element.removeClass(\"in\"),c.removeClass(\"canvas-sliding\"),c.add(this.$element).add(\"body\").each(function(){a(this).attr(\"style\",a(this).data(\"offcanvas-style\")).removeData(\"offcanvas-style\")}),this.$element.trigger(\"hidden.bs.offcanvas\"))};c.removeClass(\"canvas-slid\").addClass(\"canvas-sliding\"),setTimeout(a.proxy(function(){this.slide(c,d,a.proxy(e,this))},this),1)}}},b.prototype.toggle=function(){\"slide-in\"!==this.state&&\"slide-out\"!==this.state&&this[\"slid\"===this.state?\"hide\":\"show\"]()},b.prototype.calcClone=function(){this.$calcClone=this.$element.clone().html(\"\").addClass(\"offcanvas-clone\").removeClass(\"in\").appendTo(a(\"body\"))},b.prototype.recalc=function(){if(\"none\"!==this.$calcClone.css(\"display\")&&(\"slid\"===this.state||\"slide-in\"===this.state)){this.state=null,this.placement=null;var b=this.getCanvasElements();this.$element.removeClass(\"in\"),b.removeClass(\"canvas-slid\"),b.add(this.$element).add(\"body\").each(function(){a(this).attr(\"style\",a(this).data(\"offcanvas-style\")).removeData(\"offcanvas-style\")})}},b.prototype.autohide=function(b){0===a(b.target).closest(this.$element).length&&this.hide()};var c=a.fn.offcanvas;a.fn.offcanvas=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.offcanvas\"),f=a.extend({},b.DEFAULTS,d.data(),\"object\"==typeof c&&c);e||d.data(\"bs.offcanvas\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})},a.fn.offcanvas.Constructor=b,a.fn.offcanvas.noConflict=function(){return a.fn.offcanvas=c,this},a(document).on(\"click.bs.offcanvas.data-api\",\"[data-toggle=offcanvas]\",function(b){var c,d=a(this),e=d.attr(\"data-target\")||b.preventDefault()||(c=d.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\"),f=a(e),g=f.data(\"bs.offcanvas\"),h=g?\"toggle\":d.data();b.stopPropagation(),g?g.toggle():f.offcanvas(h)})}(window.jQuery),+function(a){\"use strict\";var b=function(c,d){this.$element=a(c),this.options=a.extend({},b.DEFAULTS,d),this.$element.on(\"click.bs.rowlink\",\"td:not(.rowlink-skip)\",a.proxy(this.click,this))};b.DEFAULTS={target:\"a\"},b.prototype.click=function(b){var c=a(b.currentTarget).closest(\"tr\").find(this.options.target)[0];if(a(b.target)[0]!==c)if(b.preventDefault(),c.click)c.click();else if(document.createEvent){var d=document.createEvent(\"MouseEvents\");d.initMouseEvent(\"click\",!0,!0,window,0,0,0,0,0,!1,!1,!1,!1,0,null),c.dispatchEvent(d)}};var c=a.fn.rowlink;a.fn.rowlink=function(c){return this.each(function(){var d=a(this),e=d.data(\"rowlink\");e||d.data(\"rowlink\",e=new b(this,c))})},a.fn.rowlink.Constructor=b,a.fn.rowlink.noConflict=function(){return a.fn.rowlink=c,this},a(document).on(\"click.bs.rowlink.data-api\",'[data-link=\"row\"]',function(b){if(0===a(b.target).closest(\".rowlink-skip\").length){var c=a(this);c.data(\"rowlink\")||(c.rowlink(c.data()),a(b.target).trigger(\"click.bs.rowlink\"))}})}(window.jQuery),+function(a){\"use strict\";var b=void 0!==window.orientation,c=navigator.userAgent.toLowerCase().indexOf(\"android\")>-1,d=\"Microsoft Internet Explorer\"==window.navigator.appName,e=function(b,d){c||(this.$element=a(b),this.options=a.extend({},e.DEFAULTS,d),this.mask=String(this.options.mask),this.init(),this.listen(),this.checkVal())};e.DEFAULTS={mask:\"\",placeholder:\"_\",definitions:{9:\"[0-9]\",a:\"[A-Za-z]\",\"?\":\"[A-Za-z0-9]\",\"*\":\".\"}},e.prototype.init=function(){var b=this.options.definitions,c=this.mask.length;this.tests=[],this.partialPosition=this.mask.length,this.firstNonMaskPos=null,a.each(this.mask.split(\"\"),a.proxy(function(a,d){\"?\"==d?(c--,this.partialPosition=a):b[d]?(this.tests.push(new RegExp(b[d])),null===this.firstNonMaskPos&&(this.firstNonMaskPos=this.tests.length-1)):this.tests.push(null)},this)),this.buffer=a.map(this.mask.split(\"\"),a.proxy(function(a){return\"?\"!=a?b[a]?this.options.placeholder:a:void 0},this)),this.focusText=this.$element.val(),this.$element.data(\"rawMaskFn\",a.proxy(function(){return a.map(this.buffer,function(a,b){return this.tests[b]&&a!=this.options.placeholder?a:null}).join(\"\")},this))},e.prototype.listen=function(){if(!this.$element.attr(\"readonly\")){var b=(d?\"paste\":\"input\")+\".mask\";this.$element.on(\"unmask.bs.inputmask\",a.proxy(this.unmask,this)).on(\"focus.bs.inputmask\",a.proxy(this.focusEvent,this)).on(\"blur.bs.inputmask\",a.proxy(this.blurEvent,this)).on(\"keydown.bs.inputmask\",a.proxy(this.keydownEvent,this)).on(\"keypress.bs.inputmask\",a.proxy(this.keypressEvent,this)).on(b,a.proxy(this.pasteEvent,this))}},e.prototype.caret=function(a,b){if(0!==this.$element.length){if(\"number\"==typeof a)return b=\"number\"==typeof b?b:a,this.$element.each(function(){if(this.setSelectionRange)this.setSelectionRange(a,b);else if(this.createTextRange){var c=this.createTextRange();c.collapse(!0),c.moveEnd(\"character\",b),c.moveStart(\"character\",a),c.select()}});if(this.$element[0].setSelectionRange)a=this.$element[0].selectionStart,b=this.$element[0].selectionEnd;else if(document.selection&&document.selection.createRange){var c=document.selection.createRange();a=0-c.duplicate().moveStart(\"character\",-1e5),b=a+c.text.length}return{begin:a,end:b}}},e.prototype.seekNext=function(a){for(var b=this.mask.length;++a<=b&&!this.tests[a];);return a},e.prototype.seekPrev=function(a){for(;--a>=0&&!this.tests[a];);return a},e.prototype.shiftL=function(a,b){var c=this.mask.length;if(!(0>a)){for(var d=a,e=this.seekNext(b);c>d;d++)if(this.tests[d]){if(!(c>e&&this.tests[d].test(this.buffer[e])))break;this.buffer[d]=this.buffer[e],this.buffer[e]=this.options.placeholder,e=this.seekNext(e)}this.writeBuffer(),this.caret(Math.max(this.firstNonMaskPos,a))}},e.prototype.shiftR=function(a){for(var b=this.mask.length,c=a,d=this.options.placeholder;b>c;c++)if(this.tests[c]){var e=this.seekNext(c),f=this.buffer[c];if(this.buffer[c]=d,!(b>e&&this.tests[e].test(f)))break;d=f}},e.prototype.unmask=function(){this.$element.unbind(\".mask\").removeData(\"inputmask\")},e.prototype.focusEvent=function(){this.focusText=this.$element.val();var a=this.mask.length,b=this.checkVal();this.writeBuffer();var c=this,d=function(){b==a?c.caret(0,b):c.caret(b)};d(),setTimeout(d,50)},e.prototype.blurEvent=function(){this.checkVal(),this.$element.val()!==this.focusText&&this.$element.trigger(\"change\")},e.prototype.keydownEvent=function(a){var c=a.which;if(8==c||46==c||b&&127==c){var d=this.caret(),e=d.begin,f=d.end;return f-e===0&&(e=46!=c?this.seekPrev(e):f=this.seekNext(e-1),f=46==c?this.seekNext(f):f),this.clearBuffer(e,f),this.shiftL(e,f-1),!1}return 27==c?(this.$element.val(this.focusText),this.caret(0,this.checkVal()),!1):void 0},e.prototype.keypressEvent=function(a){var b=this.mask.length,c=a.which,d=this.caret();if(a.ctrlKey||a.altKey||a.metaKey||32>c)return!0;if(c){d.end-d.begin!==0&&(this.clearBuffer(d.begin,d.end),this.shiftL(d.begin,d.end-1));var e=this.seekNext(d.begin-1);if(b>e){var f=String.fromCharCode(c);if(this.tests[e].test(f)){this.shiftR(e),this.buffer[e]=f,this.writeBuffer();var g=this.seekNext(e);this.caret(g)}}return!1}},e.prototype.pasteEvent=function(){var a=this;setTimeout(function(){a.caret(a.checkVal(!0))},0)},e.prototype.clearBuffer=function(a,b){for(var c=this.mask.length,d=a;b>d&&c>d;d++)this.tests[d]&&(this.buffer[d]=this.options.placeholder)},e.prototype.writeBuffer=function(){return this.$element.val(this.buffer.join(\"\")).val()},e.prototype.checkVal=function(a){for(var b=this.mask.length,c=this.$element.val(),d=-1,e=0,f=0;b>e;e++)if(this.tests[e]){for(this.buffer[e]=this.options.placeholder;f++<c.length;){var g=c.charAt(f-1);if(this.tests[e].test(g)){this.buffer[e]=g,d=e;break}}if(f>c.length)break}else this.buffer[e]==c.charAt(f)&&e!=this.partialPosition&&(f++,d=e);return!a&&d+1<this.partialPosition?(this.$element.val(\"\"),this.clearBuffer(0,b)):(a||d+1>=this.partialPosition)&&(this.writeBuffer(),a||this.$element.val(this.$element.val().substring(0,d+1))),this.partialPosition?e:this.firstNonMaskPos};var f=a.fn.inputmask;a.fn.inputmask=function(b){return this.each(function(){var c=a(this),d=c.data(\"inputmask\");d||c.data(\"inputmask\",d=new e(this,b))})},a.fn.inputmask.Constructor=e,a.fn.inputmask.noConflict=function(){return a.fn.inputmask=f,this},a(document).on(\"focus.bs.inputmask.data-api\",\"[data-mask]\",function(){var b=a(this);b.data(\"inputmask\")||b.inputmask(b.data())})}(window.jQuery),+function(a){\"use strict\";var b=\"Microsoft Internet Explorer\"==window.navigator.appName,c=function(b,c){if(this.$element=a(b),this.$input=this.$element.find(\":file\"),0!==this.$input.length){this.name=this.$input.attr(\"name\")||c.name,this.$hidden=this.$element.find('input[type=hidden][name=\"'+this.name+'\"]'),0===this.$hidden.length&&(this.$hidden=a('<input type=\"hidden\">').insertBefore(this.$input)),this.$preview=this.$element.find(\".fileinput-preview\");var d=this.$preview.css(\"height\");\"inline\"!==this.$preview.css(\"display\")&&\"0px\"!==d&&\"none\"!==d&&this.$preview.css(\"line-height\",d),this.original={exists:this.$element.hasClass(\"fileinput-exists\"),preview:this.$preview.html(),hiddenVal:this.$hidden.val()},this.listen()}};c.prototype.listen=function(){this.$input.on(\"change.bs.fileinput\",a.proxy(this.change,this)),a(this.$input[0].form).on(\"reset.bs.fileinput\",a.proxy(this.reset,this)),this.$element.find('[data-trigger=\"fileinput\"]').on(\"click.bs.fileinput\",a.proxy(this.trigger,this)),this.$element.find('[data-dismiss=\"fileinput\"]').on(\"click.bs.fileinput\",a.proxy(this.clear,this))},c.prototype.change=function(b){var c=void 0===b.target.files?b.target&&b.target.value?[{name:b.target.value.replace(/^.+\\\\/,\"\")}]:[]:b.target.files;if(b.stopPropagation(),0===c.length)return void this.clear();this.$hidden.val(\"\"),this.$hidden.attr(\"name\",\"\"),this.$input.attr(\"name\",this.name);var d=c[0];if(this.$preview.length>0&&(\"undefined\"!=typeof d.type?d.type.match(/^image\\/(gif|png|jpeg)$/):d.name.match(/\\.(gif|png|jpe?g)$/i))&&\"undefined\"!=typeof FileReader){var e=new FileReader,f=this.$preview,g=this.$element;e.onload=function(b){var e=a(\"<img>\");e[0].src=b.target.result,c[0].result=b.target.result,g.find(\".fileinput-filename\").text(d.name),\"none\"!=f.css(\"max-height\")&&e.css(\"max-height\",parseInt(f.css(\"max-height\"),10)-parseInt(f.css(\"padding-top\"),10)-parseInt(f.css(\"padding-bottom\"),10)-parseInt(f.css(\"border-top\"),10)-parseInt(f.css(\"border-bottom\"),10)),f.html(e),g.addClass(\"fileinput-exists\").removeClass(\"fileinput-new\"),g.trigger(\"change.bs.fileinput\",c)},e.readAsDataURL(d)}else this.$element.find(\".fileinput-filename\").text(d.name),this.$preview.text(d.name),this.$element.addClass(\"fileinput-exists\").removeClass(\"fileinput-new\"),this.$element.trigger(\"change.bs.fileinput\")},c.prototype.clear=function(a){if(a&&a.preventDefault(),this.$hidden.val(\"\"),this.$hidden.attr(\"name\",this.name),this.$input.attr(\"name\",\"\"),b){var c=this.$input.clone(!0);this.$input.after(c),this.$input.remove(),this.$input=c}else this.$input.val(\"\");this.$preview.html(\"\"),this.$element.find(\".fileinput-filename\").text(\"\"),this.$element.addClass(\"fileinput-new\").removeClass(\"fileinput-exists\"),void 0!==a&&(this.$input.trigger(\"change\"),this.$element.trigger(\"clear.bs.fileinput\"))},c.prototype.reset=function(){this.clear(),this.$hidden.val(this.original.hiddenVal),this.$preview.html(this.original.preview),this.$element.find(\".fileinput-filename\").text(\"\"),this.original.exists?this.$element.addClass(\"fileinput-exists\").removeClass(\"fileinput-new\"):this.$element.addClass(\"fileinput-new\").removeClass(\"fileinput-exists\"),this.$element.trigger(\"reset.bs.fileinput\")},c.prototype.trigger=function(a){this.$input.trigger(\"click\"),a.preventDefault()};var d=a.fn.fileinput;a.fn.fileinput=function(b){return this.each(function(){var d=a(this),e=d.data(\"fileinput\");e||d.data(\"fileinput\",e=new c(this,b)),\"string\"==typeof b&&e[b]()})},a.fn.fileinput.Constructor=c,a.fn.fileinput.noConflict=function(){return a.fn.fileinput=d,this},a(document).on(\"click.fileinput.data-api\",'[data-provides=\"fileinput\"]',function(b){var c=a(this);if(!c.data(\"fileinput\")){c.fileinput(c.data());var d=a(b.target).closest('[data-dismiss=\"fileinput\"],[data-trigger=\"fileinput\"]');d.length>0&&(b.preventDefault(),d.trigger(\"click.bs.fileinput\"))}})}(window.jQuery);","/*\n * metismenu - v2.0.2\n * A jQuery menu plugin\n * https://github.com/onokumus/metisMenu\n *\n * Made by Osman Nuri Okumus\n * Under MIT License\n */\n\n!function(a){\"use strict\";function b(){var a=document.createElement(\"mm\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}function c(b){return this.each(function(){var c=a(this),d=c.data(\"mm\"),f=a.extend({},e.DEFAULTS,c.data(),\"object\"==typeof b&&b);d||c.data(\"mm\",d=new e(this,f)),\"string\"==typeof b&&d[b]()})}a.fn.emulateTransitionEnd=function(b){var c=!1,e=this;a(this).one(\"mmTransitionEnd\",function(){c=!0});var f=function(){c||a(e).trigger(d.end)};return setTimeout(f,b),this};var d=b();d&&(a.event.special.mmTransitionEnd={bindType:d.end,delegateType:d.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}});var e=function(b,c){this.$element=a(b),this.options=a.extend({},e.DEFAULTS,c),this.transitioning=null,this.init()};e.TRANSITION_DURATION=350,e.DEFAULTS={toggle:!0,doubleTapToGo:!1,activeClass:\"active\"},e.prototype.init=function(){var b=this,c=this.options.activeClass;this.$element.find(\"li.\"+c).has(\"ul\").children(\"ul\").addClass(\"collapse in\"),this.$element.find(\"li\").not(\".\"+c).has(\"ul\").children(\"ul\").addClass(\"collapse\"),this.options.doubleTapToGo&&this.$element.find(\"li.\"+c).has(\"ul\").children(\"a\").addClass(\"doubleTapToGo\"),this.$element.find(\"li\").has(\"ul\").children(\"a\").on(\"click.metisMenu\",function(d){var e=a(this),f=e.parent(\"li\"),g=f.children(\"ul\");return d.preventDefault(),f.hasClass(c)?b.hide(g):b.show(g),b.options.doubleTapToGo&&b.doubleTapToGo(e)&&\"#\"!==e.attr(\"href\")&&\"\"!==e.attr(\"href\")?(d.stopPropagation(),void(document.location=e.attr(\"href\"))):void 0})},e.prototype.doubleTapToGo=function(a){var b=this.$element;return a.hasClass(\"doubleTapToGo\")?(a.removeClass(\"doubleTapToGo\"),!0):a.parent().children(\"ul\").length?(b.find(\".doubleTapToGo\").removeClass(\"doubleTapToGo\"),a.addClass(\"doubleTapToGo\"),!1):void 0},e.prototype.show=function(b){var c=this.options.activeClass,f=a(b),g=f.parent(\"li\");if(!this.transitioning&&!f.hasClass(\"in\")){g.addClass(c),this.options.toggle&&this.hide(g.siblings().children(\"ul.in\")),f.removeClass(\"collapse\").addClass(\"collapsing\").height(0),this.transitioning=1;var h=function(){f.removeClass(\"collapsing\").addClass(\"collapse in\").height(\"\"),this.transitioning=0};return d?void f.one(\"mmTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(e.TRANSITION_DURATION).height(f[0].scrollHeight):h.call(this)}},e.prototype.hide=function(b){var c=this.options.activeClass,f=a(b);if(!this.transitioning&&f.hasClass(\"in\")){f.parent(\"li\").removeClass(c),f.height(f.height())[0].offsetHeight,f.addClass(\"collapsing\").removeClass(\"collapse\").removeClass(\"in\"),this.transitioning=1;var g=function(){this.transitioning=0,f.removeClass(\"collapsing\").addClass(\"collapse\")};return d?void f.height(0).one(\"mmTransitionEnd\",a.proxy(g,this)).emulateTransitionEnd(e.TRANSITION_DURATION):g.call(this)}};var f=a.fn.metisMenu;a.fn.metisMenu=c,a.fn.metisMenu.Constructor=e,a.fn.metisMenu.noConflict=function(){return a.fn.metisMenu=f,this}}(jQuery);","/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)\n * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)\n * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.\n *\n * Version: 1.3.6\n *\n */\n(function(e){e.fn.extend({slimScroll:function(g){var a=e.extend({width:\"auto\",height:\"250px\",size:\"7px\",color:\"#000\",position:\"right\",distance:\"1px\",start:\"top\",opacity:.4,alwaysVisible:!1,disableFadeOut:!1,railVisible:!1,railColor:\"#333\",railOpacity:.2,railDraggable:!0,railClass:\"slimScrollRail\",barClass:\"slimScrollBar\",wrapperClass:\"slimScrollDiv\",allowPageScroll:!1,wheelStep:20,touchScrollStep:200,borderRadius:\"7px\",railBorderRadius:\"7px\"},g);this.each(function(){function v(d){if(r){d=d||window.event;\n    var c=0;d.wheelDelta&&(c=-d.wheelDelta/120);d.detail&&(c=d.detail/3);e(d.target||d.srcTarget||d.srcElement).closest(\".\"+a.wrapperClass).is(b.parent())&&m(c,!0);d.preventDefault&&!k&&d.preventDefault();k||(d.returnValue=!1)}}function m(d,e,g){k=!1;var f=d,h=b.outerHeight()-c.outerHeight();e&&(f=parseInt(c.css(\"top\"))+d*parseInt(a.wheelStep)/100*c.outerHeight(),f=Math.min(Math.max(f,0),h),f=0<d?Math.ceil(f):Math.floor(f),c.css({top:f+\"px\"}));l=parseInt(c.css(\"top\"))/(b.outerHeight()-c.outerHeight());\n    f=l*(b[0].scrollHeight-b.outerHeight());g&&(f=d,d=f/b[0].scrollHeight*b.outerHeight(),d=Math.min(Math.max(d,0),h),c.css({top:d+\"px\"}));b.scrollTop(f);b.trigger(\"slimscrolling\",~~f);w();p()}function x(){u=Math.max(b.outerHeight()/b[0].scrollHeight*b.outerHeight(),30);c.css({height:u+\"px\"});var a=u==b.outerHeight()?\"none\":\"block\";c.css({display:a})}function w(){x();clearTimeout(B);l==~~l?(k=a.allowPageScroll,C!=l&&b.trigger(\"slimscroll\",0==~~l?\"top\":\"bottom\")):k=!1;C=l;u>=b.outerHeight()?k=!0:(c.stop(!0,\n    !0).fadeIn(\"fast\"),a.railVisible&&h.stop(!0,!0).fadeIn(\"fast\"))}function p(){a.alwaysVisible||(B=setTimeout(function(){a.disableFadeOut&&r||y||z||(c.fadeOut(\"slow\"),h.fadeOut(\"slow\"))},1E3))}var r,y,z,B,A,u,l,C,k=!1,b=e(this);if(b.parent().hasClass(a.wrapperClass)){var n=b.scrollTop(),c=b.closest(\".\"+a.barClass),h=b.closest(\".\"+a.railClass);x();if(e.isPlainObject(g)){if(\"height\"in g&&\"auto\"==g.height){b.parent().css(\"height\",\"auto\");b.css(\"height\",\"auto\");var q=b.parent().parent().height();b.parent().css(\"height\",\n    q);b.css(\"height\",q)}if(\"scrollTo\"in g)n=parseInt(a.scrollTo);else if(\"scrollBy\"in g)n+=parseInt(a.scrollBy);else if(\"destroy\"in g){c.remove();h.remove();b.unwrap();return}m(n,!1,!0)}}else if(!(e.isPlainObject(g)&&\"destroy\"in g)){a.height=\"auto\"==a.height?b.parent().height():a.height;n=e(\"<div></div>\").addClass(a.wrapperClass).css({position:\"relative\",overflow:\"hidden\",width:a.width,height:a.height});b.css({overflow:\"hidden\",width:a.width,height:a.height});var h=e(\"<div></div>\").addClass(a.railClass).css({width:a.size,\n    height:\"100%\",position:\"absolute\",top:0,display:a.alwaysVisible&&a.railVisible?\"block\":\"none\",\"border-radius\":a.railBorderRadius,background:a.railColor,opacity:a.railOpacity,zIndex:90}),c=e(\"<div></div>\").addClass(a.barClass).css({background:a.color,width:a.size,position:\"absolute\",top:0,opacity:a.opacity,display:a.alwaysVisible?\"block\":\"none\",\"border-radius\":a.borderRadius,BorderRadius:a.borderRadius,MozBorderRadius:a.borderRadius,WebkitBorderRadius:a.borderRadius,zIndex:99}),q=\"right\"==a.position?\n{right:a.distance}:{left:a.distance};h.css(q);c.css(q);b.wrap(n);b.parent().append(c);b.parent().append(h);a.railDraggable&&c.bind(\"mousedown\",function(a){var b=e(document);z=!0;t=parseFloat(c.css(\"top\"));pageY=a.pageY;b.bind(\"mousemove.slimscroll\",function(a){currTop=t+a.pageY-pageY;c.css(\"top\",currTop);m(0,c.position().top,!1)});b.bind(\"mouseup.slimscroll\",function(a){z=!1;p();b.unbind(\".slimscroll\")});return!1}).bind(\"selectstart.slimscroll\",function(a){a.stopPropagation();a.preventDefault();return!1});\n    h.hover(function(){w()},function(){p()});c.hover(function(){y=!0},function(){y=!1});b.hover(function(){r=!0;w();p()},function(){r=!1;p()});b.bind(\"touchstart\",function(a,b){a.originalEvent.touches.length&&(A=a.originalEvent.touches[0].pageY)});b.bind(\"touchmove\",function(b){k||b.originalEvent.preventDefault();b.originalEvent.touches.length&&(m((A-b.originalEvent.touches[0].pageY)/a.touchScrollStep,!0),A=b.originalEvent.touches[0].pageY)});x();\"bottom\"===a.start?(c.css({top:b.outerHeight()-c.outerHeight()}),\n        m(0,!0)):\"top\"!==a.start&&(m(e(a.start).position().top,null,!0),a.alwaysVisible||c.hide());window.addEventListener?(this.addEventListener(\"DOMMouseScroll\",v,!1),this.addEventListener(\"mousewheel\",v,!1)):document.attachEvent(\"onmousewheel\",v)}});return this}});e.fn.extend({slimscroll:e.fn.slimScroll})})(jQuery);","/*!\n Chosen, a Select Box Enhancer for jQuery and Prototype\n by Patrick Filler for Harvest, http://getharvest.com\n\n Version 1.1.0\n Full source at https://github.com/harvesthq/chosen\n Copyright (c) 2011 Harvest http://getharvest.com\n\n MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md\n This file is generated by `grunt build`, do not edit it by hand.\n */\n\n(function() {\n    var $, AbstractChosen, Chosen, SelectParser, _ref,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n    SelectParser = (function() {\n        function SelectParser() {\n            this.options_index = 0;\n            this.parsed = [];\n        }\n\n        SelectParser.prototype.add_node = function(child) {\n            if (child.nodeName.toUpperCase() === \"OPTGROUP\") {\n                return this.add_group(child);\n            } else {\n                return this.add_option(child);\n            }\n        };\n\n        SelectParser.prototype.add_group = function(group) {\n            var group_position, option, _i, _len, _ref, _results;\n            group_position = this.parsed.length;\n            this.parsed.push({\n                array_index: group_position,\n                group: true,\n                label: this.escapeExpression(group.label),\n                children: 0,\n                disabled: group.disabled\n            });\n            _ref = group.childNodes;\n            _results = [];\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                option = _ref[_i];\n                _results.push(this.add_option(option, group_position, group.disabled));\n            }\n            return _results;\n        };\n\n        SelectParser.prototype.add_option = function(option, group_position, group_disabled) {\n            if (option.nodeName.toUpperCase() === \"OPTION\") {\n                if (option.text !== \"\") {\n                    if (group_position != null) {\n                        this.parsed[group_position].children += 1;\n                    }\n                    this.parsed.push({\n                        array_index: this.parsed.length,\n                        options_index: this.options_index,\n                        value: option.value,\n                        text: option.text,\n                        html: option.innerHTML,\n                        selected: option.selected,\n                        disabled: group_disabled === true ? group_disabled : option.disabled,\n                        group_array_index: group_position,\n                        classes: option.className,\n                        style: option.style.cssText\n                    });\n                } else {\n                    this.parsed.push({\n                        array_index: this.parsed.length,\n                        options_index: this.options_index,\n                        empty: true\n                    });\n                }\n                return this.options_index += 1;\n            }\n        };\n\n        SelectParser.prototype.escapeExpression = function(text) {\n            var map, unsafe_chars;\n            if ((text == null) || text === false) {\n                return \"\";\n            }\n            if (!/[\\&\\<\\>\\\"\\'\\`]/.test(text)) {\n                return text;\n            }\n            map = {\n                \"<\": \"&lt;\",\n                \">\": \"&gt;\",\n                '\"': \"&quot;\",\n                \"'\": \"&#x27;\",\n                \"`\": \"&#x60;\"\n            };\n            unsafe_chars = /&(?!\\w+;)|[\\<\\>\\\"\\'\\`]/g;\n            return text.replace(unsafe_chars, function(chr) {\n                return map[chr] || \"&amp;\";\n            });\n        };\n\n        return SelectParser;\n\n    })();\n\n    SelectParser.select_to_array = function(select) {\n        var child, parser, _i, _len, _ref;\n        parser = new SelectParser();\n        _ref = select.childNodes;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            child = _ref[_i];\n            parser.add_node(child);\n        }\n        return parser.parsed;\n    };\n\n    AbstractChosen = (function() {\n        function AbstractChosen(form_field, options) {\n            this.form_field = form_field;\n            this.options = options != null ? options : {};\n            if (!AbstractChosen.browser_is_supported()) {\n                return;\n            }\n            this.is_multiple = this.form_field.multiple;\n            this.set_default_text();\n            this.set_default_values();\n            this.setup();\n            this.set_up_html();\n            this.register_observers();\n        }\n\n        AbstractChosen.prototype.set_default_values = function() {\n            var _this = this;\n            this.click_test_action = function(evt) {\n                return _this.test_active_click(evt);\n            };\n            this.activate_action = function(evt) {\n                return _this.activate_field(evt);\n            };\n            this.active_field = false;\n            this.mouse_on_container = false;\n            this.results_showing = false;\n            this.result_highlighted = null;\n            this.allow_single_deselect = (this.options.allow_single_deselect != null) && (this.form_field.options[0] != null) && this.form_field.options[0].text === \"\" ? this.options.allow_single_deselect : false;\n            this.disable_search_threshold = this.options.disable_search_threshold || 0;\n            this.disable_search = this.options.disable_search || false;\n            this.enable_split_word_search = this.options.enable_split_word_search != null ? this.options.enable_split_word_search : true;\n            this.group_search = this.options.group_search != null ? this.options.group_search : true;\n            this.search_contains = this.options.search_contains || false;\n            this.single_backstroke_delete = this.options.single_backstroke_delete != null ? this.options.single_backstroke_delete : true;\n            this.max_selected_options = this.options.max_selected_options || Infinity;\n            this.inherit_select_classes = this.options.inherit_select_classes || false;\n            this.display_selected_options = this.options.display_selected_options != null ? this.options.display_selected_options : true;\n            return this.display_disabled_options = this.options.display_disabled_options != null ? this.options.display_disabled_options : true;\n        };\n\n        AbstractChosen.prototype.set_default_text = function() {\n            if (this.form_field.getAttribute(\"data-placeholder\")) {\n                this.default_text = this.form_field.getAttribute(\"data-placeholder\");\n            } else if (this.is_multiple) {\n                this.default_text = this.options.placeholder_text_multiple || this.options.placeholder_text || AbstractChosen.default_multiple_text;\n            } else {\n                this.default_text = this.options.placeholder_text_single || this.options.placeholder_text || AbstractChosen.default_single_text;\n            }\n            return this.results_none_found = this.form_field.getAttribute(\"data-no_results_text\") || this.options.no_results_text || AbstractChosen.default_no_result_text;\n        };\n\n        AbstractChosen.prototype.mouse_enter = function() {\n            return this.mouse_on_container = true;\n        };\n\n        AbstractChosen.prototype.mouse_leave = function() {\n            return this.mouse_on_container = false;\n        };\n\n        AbstractChosen.prototype.input_focus = function(evt) {\n            var _this = this;\n            if (this.is_multiple) {\n                if (!this.active_field) {\n                    return setTimeout((function() {\n                        return _this.container_mousedown();\n                    }), 50);\n                }\n            } else {\n                if (!this.active_field) {\n                    return this.activate_field();\n                }\n            }\n        };\n\n        AbstractChosen.prototype.input_blur = function(evt) {\n            var _this = this;\n            if (!this.mouse_on_container) {\n                this.active_field = false;\n                return setTimeout((function() {\n                    return _this.blur_test();\n                }), 100);\n            }\n        };\n\n        AbstractChosen.prototype.results_option_build = function(options) {\n            var content, data, _i, _len, _ref;\n            content = '';\n            _ref = this.results_data;\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                data = _ref[_i];\n                if (data.group) {\n                    content += this.result_add_group(data);\n                } else {\n                    content += this.result_add_option(data);\n                }\n                if (options != null ? options.first : void 0) {\n                    if (data.selected && this.is_multiple) {\n                        this.choice_build(data);\n                    } else if (data.selected && !this.is_multiple) {\n                        this.single_set_selected_text(data.text);\n                    }\n                }\n            }\n            return content;\n        };\n\n        AbstractChosen.prototype.result_add_option = function(option) {\n            var classes, option_el;\n            if (!option.search_match) {\n                return '';\n            }\n            if (!this.include_option_in_results(option)) {\n                return '';\n            }\n            classes = [];\n            if (!option.disabled && !(option.selected && this.is_multiple)) {\n                classes.push(\"active-result\");\n            }\n            if (option.disabled && !(option.selected && this.is_multiple)) {\n                classes.push(\"disabled-result\");\n            }\n            if (option.selected) {\n                classes.push(\"result-selected\");\n            }\n            if (option.group_array_index != null) {\n                classes.push(\"group-option\");\n            }\n            if (option.classes !== \"\") {\n                classes.push(option.classes);\n            }\n            option_el = document.createElement(\"li\");\n            option_el.className = classes.join(\" \");\n            option_el.style.cssText = option.style;\n            option_el.setAttribute(\"data-option-array-index\", option.array_index);\n            option_el.innerHTML = option.search_text;\n            return this.outerHTML(option_el);\n        };\n\n        AbstractChosen.prototype.result_add_group = function(group) {\n            var group_el;\n            if (!(group.search_match || group.group_match)) {\n                return '';\n            }\n            if (!(group.active_options > 0)) {\n                return '';\n            }\n            group_el = document.createElement(\"li\");\n            group_el.className = \"group-result\";\n            group_el.innerHTML = group.search_text;\n            return this.outerHTML(group_el);\n        };\n\n        AbstractChosen.prototype.results_update_field = function() {\n            this.set_default_text();\n            if (!this.is_multiple) {\n                this.results_reset_cleanup();\n            }\n            this.result_clear_highlight();\n            this.results_build();\n            if (this.results_showing) {\n                return this.winnow_results();\n            }\n        };\n\n        AbstractChosen.prototype.reset_single_select_options = function() {\n            var result, _i, _len, _ref, _results;\n            _ref = this.results_data;\n            _results = [];\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                result = _ref[_i];\n                if (result.selected) {\n                    _results.push(result.selected = false);\n                } else {\n                    _results.push(void 0);\n                }\n            }\n            return _results;\n        };\n\n        AbstractChosen.prototype.results_toggle = function() {\n            if (this.results_showing) {\n                return this.results_hide();\n            } else {\n                return this.results_show();\n            }\n        };\n\n        AbstractChosen.prototype.results_search = function(evt) {\n            if (this.results_showing) {\n                return this.winnow_results();\n            } else {\n                return this.results_show();\n            }\n        };\n\n        AbstractChosen.prototype.winnow_results = function() {\n            var escapedSearchText, option, regex, regexAnchor, results, results_group, searchText, startpos, text, zregex, _i, _len, _ref;\n            this.no_results_clear();\n            results = 0;\n            searchText = this.get_search_text();\n            escapedSearchText = searchText.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n            regexAnchor = this.search_contains ? \"\" : \"^\";\n            regex = new RegExp(regexAnchor + escapedSearchText, 'i');\n            zregex = new RegExp(escapedSearchText, 'i');\n            _ref = this.results_data;\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                option = _ref[_i];\n                option.search_match = false;\n                results_group = null;\n                if (this.include_option_in_results(option)) {\n                    if (option.group) {\n                        option.group_match = false;\n                        option.active_options = 0;\n                    }\n                    if ((option.group_array_index != null) && this.results_data[option.group_array_index]) {\n                        results_group = this.results_data[option.group_array_index];\n                        if (results_group.active_options === 0 && results_group.search_match) {\n                            results += 1;\n                        }\n                        results_group.active_options += 1;\n                    }\n                    if (!(option.group && !this.group_search)) {\n                        option.search_text = option.group ? option.label : option.html;\n                        option.search_match = this.search_string_match(option.search_text, regex);\n                        if (option.search_match && !option.group) {\n                            results += 1;\n                        }\n                        if (option.search_match) {\n                            if (searchText.length) {\n                                startpos = option.search_text.search(zregex);\n                                text = option.search_text.substr(0, startpos + searchText.length) + '</em>' + option.search_text.substr(startpos + searchText.length);\n                                option.search_text = text.substr(0, startpos) + '<em>' + text.substr(startpos);\n                            }\n                            if (results_group != null) {\n                                results_group.group_match = true;\n                            }\n                        } else if ((option.group_array_index != null) && this.results_data[option.group_array_index].search_match) {\n                            option.search_match = true;\n                        }\n                    }\n                }\n            }\n            this.result_clear_highlight();\n            if (results < 1 && searchText.length) {\n                this.update_results_content(\"\");\n                return this.no_results(searchText);\n            } else {\n                this.update_results_content(this.results_option_build());\n                return this.winnow_results_set_highlight();\n            }\n        };\n\n        AbstractChosen.prototype.search_string_match = function(search_string, regex) {\n            var part, parts, _i, _len;\n            if (regex.test(search_string)) {\n                return true;\n            } else if (this.enable_split_word_search && (search_string.indexOf(\" \") >= 0 || search_string.indexOf(\"[\") === 0)) {\n                parts = search_string.replace(/\\[|\\]/g, \"\").split(\" \");\n                if (parts.length) {\n                    for (_i = 0, _len = parts.length; _i < _len; _i++) {\n                        part = parts[_i];\n                        if (regex.test(part)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        };\n\n        AbstractChosen.prototype.choices_count = function() {\n            var option, _i, _len, _ref;\n            if (this.selected_option_count != null) {\n                return this.selected_option_count;\n            }\n            this.selected_option_count = 0;\n            _ref = this.form_field.options;\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                option = _ref[_i];\n                if (option.selected) {\n                    this.selected_option_count += 1;\n                }\n            }\n            return this.selected_option_count;\n        };\n\n        AbstractChosen.prototype.choices_click = function(evt) {\n            evt.preventDefault();\n            if (!(this.results_showing || this.is_disabled)) {\n                return this.results_show();\n            }\n        };\n\n        AbstractChosen.prototype.keyup_checker = function(evt) {\n            var stroke, _ref;\n            stroke = (_ref = evt.which) != null ? _ref : evt.keyCode;\n            this.search_field_scale();\n            switch (stroke) {\n                case 8:\n                    if (this.is_multiple && this.backstroke_length < 1 && this.choices_count() > 0) {\n                        return this.keydown_backstroke();\n                    } else if (!this.pending_backstroke) {\n                        this.result_clear_highlight();\n                        return this.results_search();\n                    }\n                    break;\n                case 13:\n                    evt.preventDefault();\n                    if (this.results_showing) {\n                        return this.result_select(evt);\n                    }\n                    break;\n                case 27:\n                    if (this.results_showing) {\n                        this.results_hide();\n                    }\n                    return true;\n                case 9:\n                case 38:\n                case 40:\n                case 16:\n                case 91:\n                case 17:\n                    break;\n                default:\n                    return this.results_search();\n            }\n        };\n\n        AbstractChosen.prototype.clipboard_event_checker = function(evt) {\n            var _this = this;\n            return setTimeout((function() {\n                return _this.results_search();\n            }), 50);\n        };\n\n        AbstractChosen.prototype.container_width = function() {\n            if (this.options.width != null) {\n                return this.options.width;\n            } else {\n                return \"\" + this.form_field.offsetWidth + \"px\";\n            }\n        };\n\n        AbstractChosen.prototype.include_option_in_results = function(option) {\n            if (this.is_multiple && (!this.display_selected_options && option.selected)) {\n                return false;\n            }\n            if (!this.display_disabled_options && option.disabled) {\n                return false;\n            }\n            if (option.empty) {\n                return false;\n            }\n            return true;\n        };\n\n        AbstractChosen.prototype.search_results_touchstart = function(evt) {\n            this.touch_started = true;\n            return this.search_results_mouseover(evt);\n        };\n\n        AbstractChosen.prototype.search_results_touchmove = function(evt) {\n            this.touch_started = false;\n            return this.search_results_mouseout(evt);\n        };\n\n        AbstractChosen.prototype.search_results_touchend = function(evt) {\n            if (this.touch_started) {\n                return this.search_results_mouseup(evt);\n            }\n        };\n\n        AbstractChosen.prototype.outerHTML = function(element) {\n            var tmp;\n            if (element.outerHTML) {\n                return element.outerHTML;\n            }\n            tmp = document.createElement(\"div\");\n            tmp.appendChild(element);\n            return tmp.innerHTML;\n        };\n\n        AbstractChosen.browser_is_supported = function() {\n            if (window.navigator.appName === \"Microsoft Internet Explorer\") {\n                return document.documentMode >= 8;\n            }\n            if (/iP(od|hone)/i.test(window.navigator.userAgent)) {\n                return false;\n            }\n            if (/Android/i.test(window.navigator.userAgent)) {\n                if (/Mobile/i.test(window.navigator.userAgent)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        AbstractChosen.default_multiple_text = \"Select Some Options\";\n\n        AbstractChosen.default_single_text = \"Select an Option\";\n\n        AbstractChosen.default_no_result_text = \"No results match\";\n\n        return AbstractChosen;\n\n    })();\n\n    $ = jQuery;\n\n    $.fn.extend({\n        chosen: function(options) {\n            if (!AbstractChosen.browser_is_supported()) {\n                return this;\n            }\n            return this.each(function(input_field) {\n                var $this, chosen;\n                $this = $(this);\n                chosen = $this.data('chosen');\n                if (options === 'destroy' && chosen) {\n                    chosen.destroy();\n                } else if (!chosen) {\n                    $this.data('chosen', new Chosen(this, options));\n                }\n            });\n        }\n    });\n\n    Chosen = (function(_super) {\n        __extends(Chosen, _super);\n\n        function Chosen() {\n            _ref = Chosen.__super__.constructor.apply(this, arguments);\n            return _ref;\n        }\n\n        Chosen.prototype.setup = function() {\n            this.form_field_jq = $(this.form_field);\n            this.current_selectedIndex = this.form_field.selectedIndex;\n            return this.is_rtl = this.form_field_jq.hasClass(\"chosen-rtl\");\n        };\n\n        Chosen.prototype.set_up_html = function() {\n            var container_classes, container_props;\n            container_classes = [\"chosen-container\"];\n            container_classes.push(\"chosen-container-\" + (this.is_multiple ? \"multi\" : \"single\"));\n            if (this.inherit_select_classes && this.form_field.className) {\n                container_classes.push(this.form_field.className);\n            }\n            if (this.is_rtl) {\n                container_classes.push(\"chosen-rtl\");\n            }\n            container_props = {\n                'class': container_classes.join(' '),\n                'style': \"width: \" + (this.container_width()) + \";\",\n                'title': this.form_field.title\n            };\n            if (this.form_field.id.length) {\n                container_props.id = this.form_field.id.replace(/[^\\w]/g, '_') + \"_chosen\";\n            }\n            this.container = $(\"<div />\", container_props);\n            if (this.is_multiple) {\n                this.container.html('<ul class=\"chosen-choices\"><li class=\"search-field\"><input type=\"text\" value=\"' + this.default_text + '\" class=\"default\" autocomplete=\"off\" style=\"width:25px;\" /></li></ul><div class=\"chosen-drop\"><ul class=\"chosen-results\"></ul></div>');\n            } else {\n                this.container.html('<a class=\"chosen-single chosen-default\" tabindex=\"-1\"><span>' + this.default_text + '</span><div><b></b></div></a><div class=\"chosen-drop\"><div class=\"chosen-search\"><input type=\"text\" autocomplete=\"off\" /></div><ul class=\"chosen-results\"></ul></div>');\n            }\n            this.form_field_jq.hide().after(this.container);\n            this.dropdown = this.container.find('div.chosen-drop').first();\n            this.search_field = this.container.find('input').first();\n            this.search_results = this.container.find('ul.chosen-results').first();\n            this.search_field_scale();\n            this.search_no_results = this.container.find('li.no-results').first();\n            if (this.is_multiple) {\n                this.search_choices = this.container.find('ul.chosen-choices').first();\n                this.search_container = this.container.find('li.search-field').first();\n            } else {\n                this.search_container = this.container.find('div.chosen-search').first();\n                this.selected_item = this.container.find('.chosen-single').first();\n            }\n            this.results_build();\n            this.set_tab_index();\n            this.set_label_behavior();\n            return this.form_field_jq.trigger(\"chosen:ready\", {\n                chosen: this\n            });\n        };\n\n        Chosen.prototype.register_observers = function() {\n            var _this = this;\n            this.container.bind('mousedown.chosen', function(evt) {\n                _this.container_mousedown(evt);\n            });\n            this.container.bind('mouseup.chosen', function(evt) {\n                _this.container_mouseup(evt);\n            });\n            this.container.bind('mouseenter.chosen', function(evt) {\n                _this.mouse_enter(evt);\n            });\n            this.container.bind('mouseleave.chosen', function(evt) {\n                _this.mouse_leave(evt);\n            });\n            this.search_results.bind('mouseup.chosen', function(evt) {\n                _this.search_results_mouseup(evt);\n            });\n            this.search_results.bind('mouseover.chosen', function(evt) {\n                _this.search_results_mouseover(evt);\n            });\n            this.search_results.bind('mouseout.chosen', function(evt) {\n                _this.search_results_mouseout(evt);\n            });\n            this.search_results.bind('mousewheel.chosen DOMMouseScroll.chosen', function(evt) {\n                _this.search_results_mousewheel(evt);\n            });\n            this.search_results.bind('touchstart.chosen', function(evt) {\n                _this.search_results_touchstart(evt);\n            });\n            this.search_results.bind('touchmove.chosen', function(evt) {\n                _this.search_results_touchmove(evt);\n            });\n            this.search_results.bind('touchend.chosen', function(evt) {\n                _this.search_results_touchend(evt);\n            });\n            this.form_field_jq.bind(\"chosen:updated.chosen\", function(evt) {\n                _this.results_update_field(evt);\n            });\n            this.form_field_jq.bind(\"chosen:activate.chosen\", function(evt) {\n                _this.activate_field(evt);\n            });\n            this.form_field_jq.bind(\"chosen:open.chosen\", function(evt) {\n                _this.container_mousedown(evt);\n            });\n            this.form_field_jq.bind(\"chosen:close.chosen\", function(evt) {\n                _this.input_blur(evt);\n            });\n            this.search_field.bind('blur.chosen', function(evt) {\n                _this.input_blur(evt);\n            });\n            this.search_field.bind('keyup.chosen', function(evt) {\n                _this.keyup_checker(evt);\n            });\n            this.search_field.bind('keydown.chosen', function(evt) {\n                _this.keydown_checker(evt);\n            });\n            this.search_field.bind('focus.chosen', function(evt) {\n                _this.input_focus(evt);\n            });\n            this.search_field.bind('cut.chosen', function(evt) {\n                _this.clipboard_event_checker(evt);\n            });\n            this.search_field.bind('paste.chosen', function(evt) {\n                _this.clipboard_event_checker(evt);\n            });\n            if (this.is_multiple) {\n                return this.search_choices.bind('click.chosen', function(evt) {\n                    _this.choices_click(evt);\n                });\n            } else {\n                return this.container.bind('click.chosen', function(evt) {\n                    evt.preventDefault();\n                });\n            }\n        };\n\n        Chosen.prototype.destroy = function() {\n            $(this.container[0].ownerDocument).unbind(\"click.chosen\", this.click_test_action);\n            if (this.search_field[0].tabIndex) {\n                this.form_field_jq[0].tabIndex = this.search_field[0].tabIndex;\n            }\n            this.container.remove();\n            this.form_field_jq.removeData('chosen');\n            return this.form_field_jq.show();\n        };\n\n        Chosen.prototype.search_field_disabled = function() {\n            this.is_disabled = this.form_field_jq[0].disabled;\n            if (this.is_disabled) {\n                this.container.addClass('chosen-disabled');\n                this.search_field[0].disabled = true;\n                if (!this.is_multiple) {\n                    this.selected_item.unbind(\"focus.chosen\", this.activate_action);\n                }\n                return this.close_field();\n            } else {\n                this.container.removeClass('chosen-disabled');\n                this.search_field[0].disabled = false;\n                if (!this.is_multiple) {\n                    return this.selected_item.bind(\"focus.chosen\", this.activate_action);\n                }\n            }\n        };\n\n        Chosen.prototype.container_mousedown = function(evt) {\n            if (!this.is_disabled) {\n                if (evt && evt.type === \"mousedown\" && !this.results_showing) {\n                    evt.preventDefault();\n                }\n                if (!((evt != null) && ($(evt.target)).hasClass(\"search-choice-close\"))) {\n                    if (!this.active_field) {\n                        if (this.is_multiple) {\n                            this.search_field.val(\"\");\n                        }\n                        $(this.container[0].ownerDocument).bind('click.chosen', this.click_test_action);\n                        this.results_show();\n                    } else if (!this.is_multiple && evt && (($(evt.target)[0] === this.selected_item[0]) || $(evt.target).parents(\"a.chosen-single\").length)) {\n                        evt.preventDefault();\n                        this.results_toggle();\n                    }\n                    return this.activate_field();\n                }\n            }\n        };\n\n        Chosen.prototype.container_mouseup = function(evt) {\n            if (evt.target.nodeName === \"ABBR\" && !this.is_disabled) {\n                return this.results_reset(evt);\n            }\n        };\n\n        Chosen.prototype.search_results_mousewheel = function(evt) {\n            var delta;\n            if (evt.originalEvent) {\n                delta = -evt.originalEvent.wheelDelta || evt.originalEvent.detail;\n            }\n            if (delta != null) {\n                evt.preventDefault();\n                if (evt.type === 'DOMMouseScroll') {\n                    delta = delta * 40;\n                }\n                return this.search_results.scrollTop(delta + this.search_results.scrollTop());\n            }\n        };\n\n        Chosen.prototype.blur_test = function(evt) {\n            if (!this.active_field && this.container.hasClass(\"chosen-container-active\")) {\n                return this.close_field();\n            }\n        };\n\n        Chosen.prototype.close_field = function() {\n            $(this.container[0].ownerDocument).unbind(\"click.chosen\", this.click_test_action);\n            this.active_field = false;\n            this.results_hide();\n            this.container.removeClass(\"chosen-container-active\");\n            this.clear_backstroke();\n            this.show_search_field_default();\n            return this.search_field_scale();\n        };\n\n        Chosen.prototype.activate_field = function() {\n            this.container.addClass(\"chosen-container-active\");\n            this.active_field = true;\n            this.search_field.val(this.search_field.val());\n            return this.search_field.focus();\n        };\n\n        Chosen.prototype.test_active_click = function(evt) {\n            var active_container;\n            active_container = $(evt.target).closest('.chosen-container');\n            if (active_container.length && this.container[0] === active_container[0]) {\n                return this.active_field = true;\n            } else {\n                return this.close_field();\n            }\n        };\n\n        Chosen.prototype.results_build = function() {\n            this.parsing = true;\n            this.selected_option_count = null;\n            this.results_data = SelectParser.select_to_array(this.form_field);\n            if (this.is_multiple) {\n                this.search_choices.find(\"li.search-choice\").remove();\n            } else if (!this.is_multiple) {\n                this.single_set_selected_text();\n                if (this.disable_search || this.form_field.options.length <= this.disable_search_threshold) {\n                    this.search_field[0].readOnly = true;\n                    this.container.addClass(\"chosen-container-single-nosearch\");\n                } else {\n                    this.search_field[0].readOnly = false;\n                    this.container.removeClass(\"chosen-container-single-nosearch\");\n                }\n            }\n            this.update_results_content(this.results_option_build({\n                first: true\n            }));\n            this.search_field_disabled();\n            this.show_search_field_default();\n            this.search_field_scale();\n            return this.parsing = false;\n        };\n\n        Chosen.prototype.result_do_highlight = function(el) {\n            var high_bottom, high_top, maxHeight, visible_bottom, visible_top;\n            if (el.length) {\n                this.result_clear_highlight();\n                this.result_highlight = el;\n                this.result_highlight.addClass(\"highlighted\");\n                maxHeight = parseInt(this.search_results.css(\"maxHeight\"), 10);\n                visible_top = this.search_results.scrollTop();\n                visible_bottom = maxHeight + visible_top;\n                high_top = this.result_highlight.position().top + this.search_results.scrollTop();\n                high_bottom = high_top + this.result_highlight.outerHeight();\n                if (high_bottom >= visible_bottom) {\n                    return this.search_results.scrollTop((high_bottom - maxHeight) > 0 ? high_bottom - maxHeight : 0);\n                } else if (high_top < visible_top) {\n                    return this.search_results.scrollTop(high_top);\n                }\n            }\n        };\n\n        Chosen.prototype.result_clear_highlight = function() {\n            if (this.result_highlight) {\n                this.result_highlight.removeClass(\"highlighted\");\n            }\n            return this.result_highlight = null;\n        };\n\n        Chosen.prototype.results_show = function() {\n            if (this.is_multiple && this.max_selected_options <= this.choices_count()) {\n                this.form_field_jq.trigger(\"chosen:maxselected\", {\n                    chosen: this\n                });\n                return false;\n            }\n            this.container.addClass(\"chosen-with-drop\");\n            this.results_showing = true;\n            this.search_field.focus();\n            this.search_field.val(this.search_field.val());\n            this.winnow_results();\n            return this.form_field_jq.trigger(\"chosen:showing_dropdown\", {\n                chosen: this\n            });\n        };\n\n        Chosen.prototype.update_results_content = function(content) {\n            return this.search_results.html(content);\n        };\n\n        Chosen.prototype.results_hide = function() {\n            if (this.results_showing) {\n                this.result_clear_highlight();\n                this.container.removeClass(\"chosen-with-drop\");\n                this.form_field_jq.trigger(\"chosen:hiding_dropdown\", {\n                    chosen: this\n                });\n            }\n            return this.results_showing = false;\n        };\n\n        Chosen.prototype.set_tab_index = function(el) {\n            var ti;\n            if (this.form_field.tabIndex) {\n                ti = this.form_field.tabIndex;\n                this.form_field.tabIndex = -1;\n                return this.search_field[0].tabIndex = ti;\n            }\n        };\n\n        Chosen.prototype.set_label_behavior = function() {\n            var _this = this;\n            this.form_field_label = this.form_field_jq.parents(\"label\");\n            if (!this.form_field_label.length && this.form_field.id.length) {\n                this.form_field_label = $(\"label[for='\" + this.form_field.id + \"']\");\n            }\n            if (this.form_field_label.length > 0) {\n                return this.form_field_label.bind('click.chosen', function(evt) {\n                    if (_this.is_multiple) {\n                        return _this.container_mousedown(evt);\n                    } else {\n                        return _this.activate_field();\n                    }\n                });\n            }\n        };\n\n        Chosen.prototype.show_search_field_default = function() {\n            if (this.is_multiple && this.choices_count() < 1 && !this.active_field) {\n                this.search_field.val(this.default_text);\n                return this.search_field.addClass(\"default\");\n            } else {\n                this.search_field.val(\"\");\n                return this.search_field.removeClass(\"default\");\n            }\n        };\n\n        Chosen.prototype.search_results_mouseup = function(evt) {\n            var target;\n            target = $(evt.target).hasClass(\"active-result\") ? $(evt.target) : $(evt.target).parents(\".active-result\").first();\n            if (target.length) {\n                this.result_highlight = target;\n                this.result_select(evt);\n                return this.search_field.focus();\n            }\n        };\n\n        Chosen.prototype.search_results_mouseover = function(evt) {\n            var target;\n            target = $(evt.target).hasClass(\"active-result\") ? $(evt.target) : $(evt.target).parents(\".active-result\").first();\n            if (target) {\n                return this.result_do_highlight(target);\n            }\n        };\n\n        Chosen.prototype.search_results_mouseout = function(evt) {\n            if ($(evt.target).hasClass(\"active-result\" || $(evt.target).parents('.active-result').first())) {\n                return this.result_clear_highlight();\n            }\n        };\n\n        Chosen.prototype.choice_build = function(item) {\n            var choice, close_link,\n                _this = this;\n            choice = $('<li />', {\n                \"class\": \"search-choice\"\n            }).html(\"<span>\" + item.html + \"</span>\");\n            if (item.disabled) {\n                choice.addClass('search-choice-disabled');\n            } else {\n                close_link = $('<a />', {\n                    \"class\": 'search-choice-close',\n                    'data-option-array-index': item.array_index\n                });\n                close_link.bind('click.chosen', function(evt) {\n                    return _this.choice_destroy_link_click(evt);\n                });\n                choice.append(close_link);\n            }\n            return this.search_container.before(choice);\n        };\n\n        Chosen.prototype.choice_destroy_link_click = function(evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            if (!this.is_disabled) {\n                return this.choice_destroy($(evt.target));\n            }\n        };\n\n        Chosen.prototype.choice_destroy = function(link) {\n            if (this.result_deselect(link[0].getAttribute(\"data-option-array-index\"))) {\n                this.show_search_field_default();\n                if (this.is_multiple && this.choices_count() > 0 && this.search_field.val().length < 1) {\n                    this.results_hide();\n                }\n                link.parents('li').first().remove();\n                return this.search_field_scale();\n            }\n        };\n\n        Chosen.prototype.results_reset = function() {\n            this.reset_single_select_options();\n            this.form_field.options[0].selected = true;\n            this.single_set_selected_text();\n            this.show_search_field_default();\n            this.results_reset_cleanup();\n            this.form_field_jq.trigger(\"change\");\n            if (this.active_field) {\n                return this.results_hide();\n            }\n        };\n\n        Chosen.prototype.results_reset_cleanup = function() {\n            this.current_selectedIndex = this.form_field.selectedIndex;\n            return this.selected_item.find(\"abbr\").remove();\n        };\n\n        Chosen.prototype.result_select = function(evt) {\n            var high, item;\n            if (this.result_highlight) {\n                high = this.result_highlight;\n                this.result_clear_highlight();\n                if (this.is_multiple && this.max_selected_options <= this.choices_count()) {\n                    this.form_field_jq.trigger(\"chosen:maxselected\", {\n                        chosen: this\n                    });\n                    return false;\n                }\n                if (this.is_multiple) {\n                    high.removeClass(\"active-result\");\n                } else {\n                    this.reset_single_select_options();\n                }\n                item = this.results_data[high[0].getAttribute(\"data-option-array-index\")];\n                item.selected = true;\n                this.form_field.options[item.options_index].selected = true;\n                this.selected_option_count = null;\n                if (this.is_multiple) {\n                    this.choice_build(item);\n                } else {\n                    this.single_set_selected_text(item.text);\n                }\n                if (!((evt.metaKey || evt.ctrlKey) && this.is_multiple)) {\n                    this.results_hide();\n                }\n                this.search_field.val(\"\");\n                if (this.is_multiple || this.form_field.selectedIndex !== this.current_selectedIndex) {\n                    this.form_field_jq.trigger(\"change\", {\n                        'selected': this.form_field.options[item.options_index].value\n                    });\n                }\n                this.current_selectedIndex = this.form_field.selectedIndex;\n                return this.search_field_scale();\n            }\n        };\n\n        Chosen.prototype.single_set_selected_text = function(text) {\n            if (text == null) {\n                text = this.default_text;\n            }\n            if (text === this.default_text) {\n                this.selected_item.addClass(\"chosen-default\");\n            } else {\n                this.single_deselect_control_build();\n                this.selected_item.removeClass(\"chosen-default\");\n            }\n            return this.selected_item.find(\"span\").text(text);\n        };\n\n        Chosen.prototype.result_deselect = function(pos) {\n            var result_data;\n            result_data = this.results_data[pos];\n            if (!this.form_field.options[result_data.options_index].disabled) {\n                result_data.selected = false;\n                this.form_field.options[result_data.options_index].selected = false;\n                this.selected_option_count = null;\n                this.result_clear_highlight();\n                if (this.results_showing) {\n                    this.winnow_results();\n                }\n                this.form_field_jq.trigger(\"change\", {\n                    deselected: this.form_field.options[result_data.options_index].value\n                });\n                this.search_field_scale();\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        Chosen.prototype.single_deselect_control_build = function() {\n            if (!this.allow_single_deselect) {\n                return;\n            }\n            if (!this.selected_item.find(\"abbr\").length) {\n                this.selected_item.find(\"span\").first().after(\"<abbr class=\\\"search-choice-close\\\"></abbr>\");\n            }\n            return this.selected_item.addClass(\"chosen-single-with-deselect\");\n        };\n\n        Chosen.prototype.get_search_text = function() {\n            if (this.search_field.val() === this.default_text) {\n                return \"\";\n            } else {\n                return $('<div/>').text($.trim(this.search_field.val())).html();\n            }\n        };\n\n        Chosen.prototype.winnow_results_set_highlight = function() {\n            var do_high, selected_results;\n            selected_results = !this.is_multiple ? this.search_results.find(\".result-selected.active-result\") : [];\n            do_high = selected_results.length ? selected_results.first() : this.search_results.find(\".active-result\").first();\n            if (do_high != null) {\n                return this.result_do_highlight(do_high);\n            }\n        };\n\n        Chosen.prototype.no_results = function(terms) {\n            var no_results_html;\n            no_results_html = $('<li class=\"no-results\">' + this.results_none_found + ' \"<span></span>\"</li>');\n            no_results_html.find(\"span\").first().html(terms);\n            this.search_results.append(no_results_html);\n            return this.form_field_jq.trigger(\"chosen:no_results\", {\n                chosen: this\n            });\n        };\n\n        Chosen.prototype.no_results_clear = function() {\n            return this.search_results.find(\".no-results\").remove();\n        };\n\n        Chosen.prototype.keydown_arrow = function() {\n            var next_sib;\n            if (this.results_showing && this.result_highlight) {\n                next_sib = this.result_highlight.nextAll(\"li.active-result\").first();\n                if (next_sib) {\n                    return this.result_do_highlight(next_sib);\n                }\n            } else {\n                return this.results_show();\n            }\n        };\n\n        Chosen.prototype.keyup_arrow = function() {\n            var prev_sibs;\n            if (!this.results_showing && !this.is_multiple) {\n                return this.results_show();\n            } else if (this.result_highlight) {\n                prev_sibs = this.result_highlight.prevAll(\"li.active-result\");\n                if (prev_sibs.length) {\n                    return this.result_do_highlight(prev_sibs.first());\n                } else {\n                    if (this.choices_count() > 0) {\n                        this.results_hide();\n                    }\n                    return this.result_clear_highlight();\n                }\n            }\n        };\n\n        Chosen.prototype.keydown_backstroke = function() {\n            var next_available_destroy;\n            if (this.pending_backstroke) {\n                this.choice_destroy(this.pending_backstroke.find(\"a\").first());\n                return this.clear_backstroke();\n            } else {\n                next_available_destroy = this.search_container.siblings(\"li.search-choice\").last();\n                if (next_available_destroy.length && !next_available_destroy.hasClass(\"search-choice-disabled\")) {\n                    this.pending_backstroke = next_available_destroy;\n                    if (this.single_backstroke_delete) {\n                        return this.keydown_backstroke();\n                    } else {\n                        return this.pending_backstroke.addClass(\"search-choice-focus\");\n                    }\n                }\n            }\n        };\n\n        Chosen.prototype.clear_backstroke = function() {\n            if (this.pending_backstroke) {\n                this.pending_backstroke.removeClass(\"search-choice-focus\");\n            }\n            return this.pending_backstroke = null;\n        };\n\n        Chosen.prototype.keydown_checker = function(evt) {\n            var stroke, _ref1;\n            stroke = (_ref1 = evt.which) != null ? _ref1 : evt.keyCode;\n            this.search_field_scale();\n            if (stroke !== 8 && this.pending_backstroke) {\n                this.clear_backstroke();\n            }\n            switch (stroke) {\n                case 8:\n                    this.backstroke_length = this.search_field.val().length;\n                    break;\n                case 9:\n                    if (this.results_showing && !this.is_multiple) {\n                        this.result_select(evt);\n                    }\n                    this.mouse_on_container = false;\n                    break;\n                case 13:\n                    evt.preventDefault();\n                    break;\n                case 38:\n                    evt.preventDefault();\n                    this.keyup_arrow();\n                    break;\n                case 40:\n                    evt.preventDefault();\n                    this.keydown_arrow();\n                    break;\n            }\n        };\n\n        Chosen.prototype.search_field_scale = function() {\n            var div, f_width, h, style, style_block, styles, w, _i, _len;\n            if (this.is_multiple) {\n                h = 0;\n                w = 0;\n                style_block = \"position:absolute; left: -1000px; top: -1000px; display:none;\";\n                styles = ['font-size', 'font-style', 'font-weight', 'font-family', 'line-height', 'text-transform', 'letter-spacing'];\n                for (_i = 0, _len = styles.length; _i < _len; _i++) {\n                    style = styles[_i];\n                    style_block += style + \":\" + this.search_field.css(style) + \";\";\n                }\n                div = $('<div />', {\n                    'style': style_block\n                });\n                div.text(this.search_field.val());\n                $('body').append(div);\n                w = div.width() + 25;\n                div.remove();\n                f_width = this.container.outerWidth();\n                if (w > f_width - 10) {\n                    w = f_width - 10;\n                }\n                return this.search_field.css({\n                    'width': w + 'px'\n                });\n            }\n        };\n\n        return Chosen;\n\n    })(AbstractChosen);\n\n}).call(this);\n","/*! DataTables 1.10.4\n * ©2008-2014 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.4\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2008-2014 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnScrollingWidthAdjust,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnScrollBarWidth,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(/** @lends <global> */function (window, document, undefined) {\n\n    (function (factory) {\n        \"use strict\";\n\n        if (typeof define === 'function' && define.amd) {\n            // Define as an AMD module if possible\n            define('datatables', ['jquery.dataTables'], factory);\n        }\n        else if (typeof exports === 'object') {\n            // Node/CommonJS\n            factory(require('jquery'));\n        }\n        else if (jQuery && !jQuery.fn.dataTable) {\n            // Define using browser globals otherwise\n            // Prevent multiple instantiations if the script is loaded twice\n            factory(jQuery);\n        }\n    }\n    (/** @lends <global> */function ($) {\n        \"use strict\";\n\n        /**\n         * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n         * flexible tool, based upon the foundations of progressive enhancement,\n         * which will add advanced interaction controls to any HTML table. For a\n         * full list of features please refer to\n         * [DataTables.net](href=\"http://datatables.net).\n         *\n         * Note that the `DataTable` object is not a global variable but is aliased\n         * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n         * be  accessed.\n         *\n         *  @class\n         *  @param {object} [init={}] Configuration object for DataTables. Options\n         *    are defined by {@link DataTable.defaults}\n         *  @requires jQuery 1.7+\n         *\n         *  @example\n         *    // Basic initialisation\n         *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n         *\n         *  @example\n         *    // Initialisation with configuration options - in this case, disable\n         *    // pagination and sorting.\n         *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n         */\n        var DataTable;\n\n\n        /*\n         * It is useful to have variables which are scoped locally so only the\n         * DataTables functions can access them and they don't leak into global space.\n         * At the same time these functions are often useful over multiple files in the\n         * core and API, so we list, or at least document, all variables which are used\n         * by DataTables as private variables here. This also ensures that there is no\n         * clashing of variable names and that they can easily referenced for reuse.\n         */\n\n\n        // Defined else where\n        //  _selector_run\n        //  _selector_opts\n        //  _selector_first\n        //  _selector_row_indexes\n\n        var _ext; // DataTable.ext\n        var _Api; // DataTable.Api\n        var _api_register; // DataTable.Api.register\n        var _api_registerPlural; // DataTable.Api.registerPlural\n\n        var _re_dic = {};\n        var _re_new_lines = /[\\r\\n]/g;\n        var _re_html = /<.*?>/g;\n        var _re_date_start = /^[\\w\\+\\-]/;\n        var _re_date_end = /[\\w\\+\\-]$/;\n\n        // Escape regular expression special characters\n        var _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g');\n\n        // U+2009 is thin space and U+202F is narrow no-break space, both used in many\n        // standards as thousands separators\n        var _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F]/g;\n\n\n        var _empty = function (d) {\n            return !d || d === true || d === '-' ? true : false;\n        };\n\n\n        var _intVal = function (s) {\n            var integer = parseInt(s, 10);\n            return !isNaN(integer) && isFinite(s) ? integer : null;\n        };\n\n        // Convert from a formatted number with characters other than `.` as the\n        // decimal place, to a Javascript number\n        var _numToDecimal = function (num, decimalPoint) {\n            // Cache created regular expressions for speed as this function is called often\n            if (!_re_dic[decimalPoint]) {\n                _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n            }\n            return typeof num === 'string' && decimalPoint !== '.' ?\n                num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') :\n                num;\n        };\n\n\n        var _isNumber = function (d, decimalPoint, formatted) {\n            var strType = typeof d === 'string';\n\n            if (decimalPoint && strType) {\n                d = _numToDecimal(d, decimalPoint);\n            }\n\n            if (formatted && strType) {\n                d = d.replace(_re_formatted_numeric, '');\n            }\n\n            return _empty(d) || (!isNaN(parseFloat(d)) && isFinite(d));\n        };\n\n\n        // A string without HTML in it can be considered to be HTML still\n        var _isHtml = function (d) {\n            return _empty(d) || typeof d === 'string';\n        };\n\n\n        var _htmlNumeric = function (d, decimalPoint, formatted) {\n            if (_empty(d)) {\n                return true;\n            }\n\n            var html = _isHtml(d);\n            return !html ?\n                null :\n                _isNumber(_stripHtml(d), decimalPoint, formatted) ?\n                    true :\n                    null;\n        };\n\n\n        var _pluck = function (a, prop, prop2) {\n            var out = [];\n            var i = 0, ien = a.length;\n\n            // Could have the test in the loop for slightly smaller code, but speed\n            // is essential here\n            if (prop2 !== undefined) {\n                for (; i < ien; i++) {\n                    if (a[i] && a[i][prop]) {\n                        out.push(a[i][prop][prop2]);\n                    }\n                }\n            }\n            else {\n                for (; i < ien; i++) {\n                    if (a[i]) {\n                        out.push(a[i][prop]);\n                    }\n                }\n            }\n\n            return out;\n        };\n\n\n        // Basically the same as _pluck, but rather than looping over `a` we use `order`\n        // as the indexes to pick from `a`\n        var _pluck_order = function (a, order, prop, prop2) {\n            var out = [];\n            var i = 0, ien = order.length;\n\n            // Could have the test in the loop for slightly smaller code, but speed\n            // is essential here\n            if (prop2 !== undefined) {\n                for (; i < ien; i++) {\n                    if (a[order[i]][prop]) {\n                        out.push(a[order[i]][prop][prop2]);\n                    }\n                }\n            }\n            else {\n                for (; i < ien; i++) {\n                    out.push(a[order[i]][prop]);\n                }\n            }\n\n            return out;\n        };\n\n\n        var _range = function (len, start) {\n            var out = [];\n            var end;\n\n            if (start === undefined) {\n                start = 0;\n                end = len;\n            }\n            else {\n                end = start;\n                start = len;\n            }\n\n            for (var i = start; i < end; i++) {\n                out.push(i);\n            }\n\n            return out;\n        };\n\n\n        var _removeEmpty = function (a) {\n            var out = [];\n\n            for (var i = 0, ien = a.length; i < ien; i++) {\n                if (a[i]) { // careful - will remove all falsy values!\n                    out.push(a[i]);\n                }\n            }\n\n            return out;\n        };\n\n\n        var _stripHtml = function (d) {\n            return d.replace(_re_html, '');\n        };\n\n\n        /**\n         * Find the unique elements in a source array.\n         *\n         * @param  {array} src Source array\n         * @return {array} Array of unique items\n         * @ignore\n         */\n        var _unique = function (src) {\n            // A faster unique method is to use object keys to identify used values,\n            // but this doesn't work with arrays or objects, which we must also\n            // consider. See jsperf.com/compare-array-unique-versions/4 for more\n            // information.\n            var\n                out = [],\n                val,\n                i, ien = src.length,\n                j, k = 0;\n\n            again: for (i = 0; i < ien; i++) {\n                val = src[i];\n\n                for (j = 0; j < k; j++) {\n                    if (out[j] === val) {\n                        continue again;\n                    }\n                }\n\n                out.push(val);\n                k++;\n            }\n\n            return out;\n        };\n\n\n        /**\n         * Create a mapping object that allows camel case parameters to be looked up\n         * for their Hungarian counterparts. The mapping is stored in a private\n         * parameter called `_hungarianMap` which can be accessed on the source object.\n         *  @param {object} o\n         *  @memberof DataTable#oApi\n         */\n        function _fnHungarianMap(o) {\n            var\n                hungarian = 'a aa ai ao as b fn i m o s ',\n                match,\n                newKey,\n                map = {};\n\n            $.each(o, function (key, val) {\n                match = key.match(/^([^A-Z]+?)([A-Z])/);\n\n                if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n                    newKey = key.replace(match[0], match[2].toLowerCase());\n                    map[newKey] = key;\n\n                    if (match[1] === 'o') {\n                        _fnHungarianMap(o[key]);\n                    }\n                }\n            });\n\n            o._hungarianMap = map;\n        }\n\n\n        /**\n         * Convert from camel case parameters to Hungarian, based on a Hungarian map\n         * created by _fnHungarianMap.\n         *  @param {object} src The model object which holds all parameters that can be\n         *    mapped.\n         *  @param {object} user The object to convert from camel case to Hungarian.\n         *  @param {boolean} force When set to `true`, properties which already have a\n         *    Hungarian value in the `user` object will be overwritten. Otherwise they\n         *    won't be.\n         *  @memberof DataTable#oApi\n         */\n        function _fnCamelToHungarian(src, user, force) {\n            if (!src._hungarianMap) {\n                _fnHungarianMap(src);\n            }\n\n            var hungarianKey;\n\n            $.each(user, function (key, val) {\n                hungarianKey = src._hungarianMap[key];\n\n                if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n                    // For objects, we need to buzz down into the object to copy parameters\n                    if (hungarianKey.charAt(0) === 'o') {\n                        // Copy the camelCase options over to the hungarian\n                        if (!user[hungarianKey]) {\n                            user[hungarianKey] = {};\n                        }\n                        $.extend(true, user[hungarianKey], user[key]);\n\n                        _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n                    }\n                    else {\n                        user[hungarianKey] = user[key];\n                    }\n                }\n            });\n        }\n\n\n        /**\n         * Language compatibility - when certain options are given, and others aren't, we\n         * need to duplicate the values over, in order to provide backwards compatibility\n         * with older language files.\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnLanguageCompat(lang) {\n            var defaults = DataTable.defaults.oLanguage;\n            var zeroRecords = lang.sZeroRecords;\n\n            /* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n             * sZeroRecords - assuming that is given.\n             */\n            if (!lang.sEmptyTable && zeroRecords &&\n                defaults.sEmptyTable === \"No data available in table\") {\n                _fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable');\n            }\n\n            /* Likewise with loading records */\n            if (!lang.sLoadingRecords && zeroRecords &&\n                defaults.sLoadingRecords === \"Loading...\") {\n                _fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords');\n            }\n\n            // Old parameter name of the thousands separator mapped onto the new\n            if (lang.sInfoThousands) {\n                lang.sThousands = lang.sInfoThousands;\n            }\n\n            var decimal = lang.sDecimal;\n            if (decimal) {\n                _addNumericSort(decimal);\n            }\n        }\n\n\n        /**\n         * Map one parameter onto another\n         *  @param {object} o Object to map\n         *  @param {*} knew The new parameter name\n         *  @param {*} old The old parameter name\n         */\n        var _fnCompatMap = function (o, knew, old) {\n            if (o[knew] !== undefined) {\n                o[old] = o[knew];\n            }\n        };\n\n\n        /**\n         * Provide backwards compatibility for the main DT options. Note that the new\n         * options are mapped onto the old parameters, so this is an external interface\n         * change only.\n         *  @param {object} init Object to map\n         */\n        function _fnCompatOpts(init) {\n            _fnCompatMap(init, 'ordering', 'bSort');\n            _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n            _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n            _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n            _fnCompatMap(init, 'order', 'aaSorting');\n            _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n            _fnCompatMap(init, 'paging', 'bPaginate');\n            _fnCompatMap(init, 'pagingType', 'sPaginationType');\n            _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n            _fnCompatMap(init, 'searching', 'bFilter');\n\n            // Column search objects are in an array, so it needs to be converted\n            // element by element\n            var searchCols = init.aoSearchCols;\n\n            if (searchCols) {\n                for (var i = 0, ien = searchCols.length; i < ien; i++) {\n                    if (searchCols[i]) {\n                        _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n                    }\n                }\n            }\n        }\n\n\n        /**\n         * Provide backwards compatibility for column options. Note that the new options\n         * are mapped onto the old parameters, so this is an external interface change\n         * only.\n         *  @param {object} init Object to map\n         */\n        function _fnCompatCols(init) {\n            _fnCompatMap(init, 'orderable', 'bSortable');\n            _fnCompatMap(init, 'orderData', 'aDataSort');\n            _fnCompatMap(init, 'orderSequence', 'asSorting');\n            _fnCompatMap(init, 'orderDataType', 'sortDataType');\n        }\n\n\n        /**\n         * Browser feature detection for capabilities, quirks\n         *  @param {object} settings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnBrowserDetect(settings) {\n            var browser = settings.oBrowser;\n\n            // Scrolling feature / quirks detection\n            var n = $('<div/>')\n                .css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    height: 1,\n                    width: 1,\n                    overflow: 'hidden'\n                })\n                .append(\n                $('<div/>')\n                    .css({\n                        position: 'absolute',\n                        top: 1,\n                        left: 1,\n                        width: 100,\n                        overflow: 'scroll'\n                    })\n                    .append(\n                    $('<div class=\"test\"/>')\n                        .css({\n                            width: '100%',\n                            height: 10\n                        })\n                )\n            )\n                .appendTo('body');\n\n            var test = n.find('.test');\n\n            // IE6/7 will oversize a width 100% element inside a scrolling element, to\n            // include the width of the scrollbar, while other browsers ensure the inner\n            // element is contained without forcing scrolling\n            browser.bScrollOversize = test[0].offsetWidth === 100;\n\n            // In rtl text layout, some browsers (most, but not all) will place the\n            // scrollbar on the left, rather than the right.\n            browser.bScrollbarLeft = test.offset().left !== 1;\n\n            n.remove();\n        }\n\n\n        /**\n         * Array.prototype reduce[Right] method, used for browsers which don't support\n         * JS 1.6. Done this way to reduce code size, since we iterate either way\n         *  @param {object} settings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnReduce(that, fn, init, start, end, inc) {\n            var\n                i = start,\n                value,\n                isSet = false;\n\n            if (init !== undefined) {\n                value = init;\n                isSet = true;\n            }\n\n            while (i !== end) {\n                if (!that.hasOwnProperty(i)) {\n                    continue;\n                }\n\n                value = isSet ?\n                    fn(value, that[i], i, that) :\n                    that[i];\n\n                isSet = true;\n                i += inc;\n            }\n\n            return value;\n        }\n\n        /**\n         * Add a column to the list used for the table with default values\n         *  @param {object} oSettings dataTables settings object\n         *  @param {node} nTh The th element for this column\n         *  @memberof DataTable#oApi\n         */\n        function _fnAddColumn(oSettings, nTh) {\n            // Add column to aoColumns array\n            var oDefaults = DataTable.defaults.column;\n            var iCol = oSettings.aoColumns.length;\n            var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n                \"nTh\": nTh ? nTh : document.createElement('th'),\n                \"sTitle\": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',\n                \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n                \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n                idx: iCol\n            });\n            oSettings.aoColumns.push(oCol);\n\n            // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n            // passed into extend can be undefined. This allows the user to give a default\n            // with only some of the parameters defined, and also not give a default\n            var searchCols = oSettings.aoPreSearchCols;\n            searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);\n\n            // Use the default column options function to initialise classes etc\n            _fnColumnOptions(oSettings, iCol, null);\n        }\n\n\n        /**\n         * Apply options for a column\n         *  @param {object} oSettings dataTables settings object\n         *  @param {int} iCol column index to consider\n         *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n         *  @memberof DataTable#oApi\n         */\n        function _fnColumnOptions(oSettings, iCol, oOptions) {\n            var oCol = oSettings.aoColumns[iCol];\n            var oClasses = oSettings.oClasses;\n            var th = $(oCol.nTh);\n\n            // Try to get width information from the DOM. We can't get it from CSS\n            // as we'd need to parse the CSS stylesheet. `width` option can override\n            if (!oCol.sWidthOrig) {\n                // Width attribute\n                oCol.sWidthOrig = th.attr('width') || null;\n\n                // Style attribute\n                var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n                if (t) {\n                    oCol.sWidthOrig = t[1];\n                }\n            }\n\n            /* User specified column options */\n            if (oOptions !== undefined && oOptions !== null) {\n                // Backwards compatibility\n                _fnCompatCols(oOptions);\n\n                // Map camel case parameters to their Hungarian counterparts\n                _fnCamelToHungarian(DataTable.defaults.column, oOptions);\n\n                /* Backwards compatibility for mDataProp */\n                if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n                    oOptions.mData = oOptions.mDataProp;\n                }\n\n                if (oOptions.sType) {\n                    oCol._sManualType = oOptions.sType;\n                }\n\n                // `class` is a reserved word in Javascript, so we need to provide\n                // the ability to use a valid name for the camel case input\n                if (oOptions.className && !oOptions.sClass) {\n                    oOptions.sClass = oOptions.className;\n                }\n\n                $.extend(oCol, oOptions);\n                _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n                /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n                 * priority if defined\n                 */\n                if (typeof oOptions.iDataSort === 'number') {\n                    oCol.aDataSort = [oOptions.iDataSort];\n                }\n                _fnMap(oCol, oOptions, \"aDataSort\");\n            }\n\n            /* Cache the data get and set functions for speed */\n            var mDataSrc = oCol.mData;\n            var mData = _fnGetObjectDataFn(mDataSrc);\n            var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n\n            var attrTest = function (src) {\n                return typeof src === 'string' && src.indexOf('@') !== -1;\n            };\n            oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (\n                    attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n                );\n\n            oCol.fnGetData = function (rowData, type, meta) {\n                var innerData = mData(rowData, type, undefined, meta);\n\n                return mRender && type ?\n                    mRender(innerData, type, rowData, meta) :\n                    innerData;\n            };\n            oCol.fnSetData = function (rowData, val, meta) {\n                return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n            };\n\n            // Indicate if DataTables should read DOM data as an object or array\n            // Used in _fnGetRowElements\n            if (typeof mDataSrc !== 'number') {\n                oSettings._rowReadObject = true;\n            }\n\n            /* Feature sorting overrides column specific when off */\n            if (!oSettings.oFeatures.bSort) {\n                oCol.bSortable = false;\n                th.addClass(oClasses.sSortableNone); // Have to add class here as order event isn't called\n            }\n\n            /* Check that the class assignment is correct for sorting */\n            var bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n            var bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n            if (!oCol.bSortable || (!bAsc && !bDesc)) {\n                oCol.sSortingClass = oClasses.sSortableNone;\n                oCol.sSortingClassJUI = \"\";\n            }\n            else if (bAsc && !bDesc) {\n                oCol.sSortingClass = oClasses.sSortableAsc;\n                oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n            }\n            else if (!bAsc && bDesc) {\n                oCol.sSortingClass = oClasses.sSortableDesc;\n                oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n            }\n            else {\n                oCol.sSortingClass = oClasses.sSortable;\n                oCol.sSortingClassJUI = oClasses.sSortJUI;\n            }\n        }\n\n\n        /**\n         * Adjust the table column widths for new data. Note: you would probably want to\n         * do a redraw after calling this function!\n         *  @param {object} settings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnAdjustColumnSizing(settings) {\n            /* Not interested in doing column width calculation if auto-width is disabled */\n            if (settings.oFeatures.bAutoWidth !== false) {\n                var columns = settings.aoColumns;\n\n                _fnCalculateColumnWidths(settings);\n                for (var i = 0, iLen = columns.length; i < iLen; i++) {\n                    columns[i].nTh.style.width = columns[i].sWidth;\n                }\n            }\n\n            var scroll = settings.oScroll;\n            if (scroll.sY !== '' || scroll.sX !== '') {\n                _fnScrollDraw(settings);\n            }\n\n            _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n        }\n\n\n        /**\n         * Covert the index of a visible column to the index in the data array (take account\n         * of hidden columns)\n         *  @param {object} oSettings dataTables settings object\n         *  @param {int} iMatch Visible column index to lookup\n         *  @returns {int} i the data index\n         *  @memberof DataTable#oApi\n         */\n        function _fnVisibleToColumnIndex(oSettings, iMatch) {\n            var aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n            return typeof aiVis[iMatch] === 'number' ?\n                aiVis[iMatch] :\n                null;\n        }\n\n\n        /**\n         * Covert the index of an index in the data array and convert it to the visible\n         *   column index (take account of hidden columns)\n         *  @param {int} iMatch Column index to lookup\n         *  @param {object} oSettings dataTables settings object\n         *  @returns {int} i the data index\n         *  @memberof DataTable#oApi\n         */\n        function _fnColumnIndexToVisible(oSettings, iMatch) {\n            var aiVis = _fnGetColumns(oSettings, 'bVisible');\n            var iPos = $.inArray(iMatch, aiVis);\n\n            return iPos !== -1 ? iPos : null;\n        }\n\n\n        /**\n         * Get the number of visible columns\n         *  @param {object} oSettings dataTables settings object\n         *  @returns {int} i the number of visible columns\n         *  @memberof DataTable#oApi\n         */\n        function _fnVisbleColumns(oSettings) {\n            return _fnGetColumns(oSettings, 'bVisible').length;\n        }\n\n\n        /**\n         * Get an array of column indexes that match a given property\n         *  @param {object} oSettings dataTables settings object\n         *  @param {string} sParam Parameter in aoColumns to look for - typically\n         *    bVisible or bSearchable\n         *  @returns {array} Array of indexes with matched properties\n         *  @memberof DataTable#oApi\n         */\n        function _fnGetColumns(oSettings, sParam) {\n            var a = [];\n\n            $.map(oSettings.aoColumns, function (val, i) {\n                if (val[sParam]) {\n                    a.push(i);\n                }\n            });\n\n            return a;\n        }\n\n\n        /**\n         * Calculate the 'type' of a column\n         *  @param {object} settings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnColumnTypes(settings) {\n            var columns = settings.aoColumns;\n            var data = settings.aoData;\n            var types = DataTable.ext.type.detect;\n            var i, ien, j, jen, k, ken;\n            var col, cell, detectedType, cache;\n\n            // For each column, spin over the \n            for (i = 0, ien = columns.length; i < ien; i++) {\n                col = columns[i];\n                cache = [];\n\n                if (!col.sType && col._sManualType) {\n                    col.sType = col._sManualType;\n                }\n                else if (!col.sType) {\n                    for (j = 0, jen = types.length; j < jen; j++) {\n                        for (k = 0, ken = data.length; k < ken; k++) {\n                            // Use a cache array so we only need to get the type data\n                            // from the formatter once (when using multiple detectors)\n                            if (cache[k] === undefined) {\n                                cache[k] = _fnGetCellData(settings, k, i, 'type');\n                            }\n\n                            detectedType = types[j](cache[k], settings);\n\n                            // If null, then this type can't apply to this column, so\n                            // rather than testing all cells, break out. There is an\n                            // exception for the last type which is `html`. We need to\n                            // scan all rows since it is possible to mix string and HTML\n                            // types\n                            if (!detectedType && j !== types.length - 1) {\n                                break;\n                            }\n\n                            // Only a single match is needed for html type since it is\n                            // bottom of the pile and very similar to string\n                            if (detectedType === 'html') {\n                                break;\n                            }\n                        }\n\n                        // Type is valid for all data points in the column - use this\n                        // type\n                        if (detectedType) {\n                            col.sType = detectedType;\n                            break;\n                        }\n                    }\n\n                    // Fall back - if no type was detected, always use string\n                    if (!col.sType) {\n                        col.sType = 'string';\n                    }\n                }\n            }\n        }\n\n\n        /**\n         * Take the column definitions and static columns arrays and calculate how\n         * they relate to column indexes. The callback function will then apply the\n         * definition found for a column to a suitable configuration object.\n         *  @param {object} oSettings dataTables settings object\n         *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n         *  @param {array} aoCols The aoColumns array that defines columns individually\n         *  @param {function} fn Callback function - takes two parameters, the calculated\n         *    column index and the definition for that column.\n         *  @memberof DataTable#oApi\n         */\n        function _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn) {\n            var i, iLen, j, jLen, k, kLen, def;\n            var columns = oSettings.aoColumns;\n\n            // Column definitions with aTargets\n            if (aoColDefs) {\n                /* Loop over the definitions array - loop in reverse so first instance has priority */\n                for (i = aoColDefs.length - 1; i >= 0; i--) {\n                    def = aoColDefs[i];\n\n                    /* Each definition can target multiple columns, as it is an array */\n                    var aTargets = def.targets !== undefined ?\n                        def.targets :\n                        def.aTargets;\n\n                    if (!$.isArray(aTargets)) {\n                        aTargets = [aTargets];\n                    }\n\n                    for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n                        if (typeof aTargets[j] === 'number' && aTargets[j] >= 0) {\n                            /* Add columns that we don't yet know about */\n                            while (columns.length <= aTargets[j]) {\n                                _fnAddColumn(oSettings);\n                            }\n\n                            /* Integer, basic index */\n                            fn(aTargets[j], def);\n                        }\n                        else if (typeof aTargets[j] === 'number' && aTargets[j] < 0) {\n                            /* Negative integer, right to left column counting */\n                            fn(columns.length + aTargets[j], def);\n                        }\n                        else if (typeof aTargets[j] === 'string') {\n                            /* Class name matching on TH element */\n                            for (k = 0, kLen = columns.length; k < kLen; k++) {\n                                if (aTargets[j] == \"_all\" ||\n                                    $(columns[k].nTh).hasClass(aTargets[j])) {\n                                    fn(k, def);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Statically defined columns array\n            if (aoCols) {\n                for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n                    fn(i, aoCols[i]);\n                }\n            }\n        }\n\n        /**\n         * Add a data array to the table, creating DOM node etc. This is the parallel to\n         * _fnGatherData, but for adding rows from a Javascript source, rather than a\n         * DOM source.\n         *  @param {object} oSettings dataTables settings object\n         *  @param {array} aData data array to be added\n         *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n         *    DataTables will create a row automatically\n         *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n         *    if nTr is.\n         *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n         *  @memberof DataTable#oApi\n         */\n        function _fnAddData(oSettings, aDataIn, nTr, anTds) {\n            /* Create the object for storing information about this new row */\n            var iRow = oSettings.aoData.length;\n            var oData = $.extend(true, {}, DataTable.models.oRow, {\n                src: nTr ? 'dom' : 'data'\n            });\n\n            oData._aData = aDataIn;\n            oSettings.aoData.push(oData);\n\n            /* Create the cells */\n            var nTd, sThisType;\n            var columns = oSettings.aoColumns;\n            for (var i = 0, iLen = columns.length; i < iLen; i++) {\n                // When working with a row, the data source object must be populated. In\n                // all other cases, the data source object is already populated, so we\n                // don't overwrite it, which might break bindings etc\n                if (nTr) {\n                    _fnSetCellData(oSettings, iRow, i, _fnGetCellData(oSettings, iRow, i));\n                }\n                columns[i].sType = null;\n            }\n\n            /* Add to the display array */\n            oSettings.aiDisplayMaster.push(iRow);\n\n            /* Create the DOM information, or register it if already present */\n            if (nTr || !oSettings.oFeatures.bDeferRender) {\n                _fnCreateTr(oSettings, iRow, nTr, anTds);\n            }\n\n            return iRow;\n        }\n\n\n        /**\n         * Add one or more TR elements to the table. Generally we'd expect to\n         * use this for reading data from a DOM sourced table, but it could be\n         * used for an TR element. Note that if a TR is given, it is used (i.e.\n         * it is not cloned).\n         *  @param {object} settings dataTables settings object\n         *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n         *  @returns {array} Array of indexes for the added rows\n         *  @memberof DataTable#oApi\n         */\n        function _fnAddTr(settings, trs) {\n            var row;\n\n            // Allow an individual node to be passed in\n            if (!(trs instanceof $)) {\n                trs = $(trs);\n            }\n\n            return trs.map(function (i, el) {\n                row = _fnGetRowElements(settings, el);\n                return _fnAddData(settings, row.data, el, row.cells);\n            });\n        }\n\n\n        /**\n         * Take a TR element and convert it to an index in aoData\n         *  @param {object} oSettings dataTables settings object\n         *  @param {node} n the TR element to find\n         *  @returns {int} index if the node is found, null if not\n         *  @memberof DataTable#oApi\n         */\n        function _fnNodeToDataIndex(oSettings, n) {\n            return (n._DT_RowIndex !== undefined) ? n._DT_RowIndex : null;\n        }\n\n\n        /**\n         * Take a TD element and convert it into a column data index (not the visible index)\n         *  @param {object} oSettings dataTables settings object\n         *  @param {int} iRow The row number the TD/TH can be found in\n         *  @param {node} n The TD/TH element to find\n         *  @returns {int} index if the node is found, -1 if not\n         *  @memberof DataTable#oApi\n         */\n        function _fnNodeToColumnIndex(oSettings, iRow, n) {\n            return $.inArray(n, oSettings.aoData[iRow].anCells);\n        }\n\n\n        /**\n         * Get the data for a given cell from the internal cache, taking into account data mapping\n         *  @param {object} settings dataTables settings object\n         *  @param {int} rowIdx aoData row id\n         *  @param {int} colIdx Column index\n         *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n         *  @returns {*} Cell data\n         *  @memberof DataTable#oApi\n         */\n        function _fnGetCellData(settings, rowIdx, colIdx, type) {\n            var draw = settings.iDraw;\n            var col = settings.aoColumns[colIdx];\n            var rowData = settings.aoData[rowIdx]._aData;\n            var defaultContent = col.sDefaultContent;\n            var cellData = col.fnGetData(rowData, type, {\n                settings: settings,\n                row: rowIdx,\n                col: colIdx\n            });\n\n            if (cellData === undefined) {\n                if (settings.iDrawError != draw && defaultContent === null) {\n                    _fnLog(settings, 0, \"Requested unknown parameter \" +\n                        (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") +\n                        \" for row \" + rowIdx, 4);\n                    settings.iDrawError = draw;\n                }\n                return defaultContent;\n            }\n\n            /* When the data source is null, we can use default column data */\n            if ((cellData === rowData || cellData === null) && defaultContent !== null) {\n                cellData = defaultContent;\n            }\n            else if (typeof cellData === 'function') {\n                // If the data source is a function, then we run it and use the return,\n                // executing in the scope of the data object (for instances)\n                return cellData.call(rowData);\n            }\n\n            if (cellData === null && type == 'display') {\n                return '';\n            }\n            return cellData;\n        }\n\n\n        /**\n         * Set the value for a specific cell, into the internal data cache\n         *  @param {object} settings dataTables settings object\n         *  @param {int} rowIdx aoData row id\n         *  @param {int} colIdx Column index\n         *  @param {*} val Value to set\n         *  @memberof DataTable#oApi\n         */\n        function _fnSetCellData(settings, rowIdx, colIdx, val) {\n            var col = settings.aoColumns[colIdx];\n            var rowData = settings.aoData[rowIdx]._aData;\n\n            col.fnSetData(rowData, val, {\n                settings: settings,\n                row: rowIdx,\n                col: colIdx\n            });\n        }\n\n\n        // Private variable that is used to match action syntax in the data property object\n        var __reArray = /\\[.*?\\]$/;\n        var __reFn = /\\(\\)$/;\n\n        /**\n         * Split string on periods, taking into account escaped periods\n         * @param  {string} str String to split\n         * @return {array} Split string\n         */\n        function _fnSplitObjNotation(str) {\n            return $.map(str.match(/(\\\\.|[^\\.])+/g), function (s) {\n                return s.replace(/\\\\./g, '.');\n            });\n        }\n\n\n        /**\n         * Return a function that can be used to get data from a source object, taking\n         * into account the ability to use nested objects as a source\n         *  @param {string|int|function} mSource The data source for the object\n         *  @returns {function} Data get function\n         *  @memberof DataTable#oApi\n         */\n        function _fnGetObjectDataFn(mSource) {\n            if ($.isPlainObject(mSource)) {\n                /* Build an object of get functions, and wrap them in a single call */\n                var o = {};\n                $.each(mSource, function (key, val) {\n                    if (val) {\n                        o[key] = _fnGetObjectDataFn(val);\n                    }\n                });\n\n                return function (data, type, row, meta) {\n                    var t = o[type] || o._;\n                    return t !== undefined ?\n                        t(data, type, row, meta) :\n                        data;\n                };\n            }\n            else if (mSource === null) {\n                /* Give an empty string for rendering / sorting etc */\n                return function (data) { // type, row and meta also passed, but not used\n                    return data;\n                };\n            }\n            else if (typeof mSource === 'function') {\n                return function (data, type, row, meta) {\n                    return mSource(data, type, row, meta);\n                };\n            }\n            else if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n                mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1)) {\n                /* If there is a . in the source string then the data source is in a\n                 * nested object so we loop over the data for each level to get the next\n                 * level down. On each loop we test for undefined, and if found immediately\n                 * return. This allows entire objects to be missing and sDefaultContent to\n                 * be used if defined, rather than throwing an error\n                 */\n                var fetchData = function (data, type, src) {\n                    var arrayNotation, funcNotation, out, innerSrc;\n\n                    if (src !== \"\") {\n                        var a = _fnSplitObjNotation(src);\n\n                        for (var i = 0, iLen = a.length; i < iLen; i++) {\n                            // Check if we are dealing with special notation\n                            arrayNotation = a[i].match(__reArray);\n                            funcNotation = a[i].match(__reFn);\n\n                            if (arrayNotation) {\n                                // Array notation\n                                a[i] = a[i].replace(__reArray, '');\n\n                                // Condition allows simply [] to be passed in\n                                if (a[i] !== \"\") {\n                                    data = data[a[i]];\n                                }\n                                out = [];\n\n                                // Get the remainder of the nested object to get\n                                a.splice(0, i + 1);\n                                innerSrc = a.join('.');\n\n                                // Traverse each entry in the array getting the properties requested\n                                for (var j = 0, jLen = data.length; j < jLen; j++) {\n                                    out.push(fetchData(data[j], type, innerSrc));\n                                }\n\n                                // If a string is given in between the array notation indicators, that\n                                // is used to join the strings together, otherwise an array is returned\n                                var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n                                data = (join === \"\") ? out : out.join(join);\n\n                                // The inner call to fetchData has already traversed through the remainder\n                                // of the source requested, so we exit from the loop\n                                break;\n                            }\n                            else if (funcNotation) {\n                                // Function call\n                                a[i] = a[i].replace(__reFn, '');\n                                data = data[a[i]]();\n                                continue;\n                            }\n\n                            if (data === null || data[a[i]] === undefined) {\n                                return undefined;\n                            }\n                            data = data[a[i]];\n                        }\n                    }\n\n                    return data;\n                };\n\n                return function (data, type) { // row and meta also passed, but not used\n                    return fetchData(data, type, mSource);\n                };\n            }\n            else {\n                /* Array or flat object mapping */\n                return function (data, type) { // row and meta also passed, but not used\n                    return data[mSource];\n                };\n            }\n        }\n\n\n        /**\n         * Return a function that can be used to set data from a source object, taking\n         * into account the ability to use nested objects as a source\n         *  @param {string|int|function} mSource The data source for the object\n         *  @returns {function} Data set function\n         *  @memberof DataTable#oApi\n         */\n        function _fnSetObjectDataFn(mSource) {\n            if ($.isPlainObject(mSource)) {\n                /* Unlike get, only the underscore (global) option is used for for\n                 * setting data since we don't know the type here. This is why an object\n                 * option is not documented for `mData` (which is read/write), but it is\n                 * for `mRender` which is read only.\n                 */\n                return _fnSetObjectDataFn(mSource._);\n            }\n            else if (mSource === null) {\n                /* Nothing to do when the data source is null */\n                return function () {\n                };\n            }\n            else if (typeof mSource === 'function') {\n                return function (data, val, meta) {\n                    mSource(data, 'set', val, meta);\n                };\n            }\n            else if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n                mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1)) {\n                /* Like the get, we need to get data from a nested object */\n                var setData = function (data, val, src) {\n                    var a = _fnSplitObjNotation(src), b;\n                    var aLast = a[a.length - 1];\n                    var arrayNotation, funcNotation, o, innerSrc;\n\n                    for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n                        // Check if we are dealing with an array notation request\n                        arrayNotation = a[i].match(__reArray);\n                        funcNotation = a[i].match(__reFn);\n\n                        if (arrayNotation) {\n                            a[i] = a[i].replace(__reArray, '');\n                            data[a[i]] = [];\n\n                            // Get the remainder of the nested object to set so we can recurse\n                            b = a.slice();\n                            b.splice(0, i + 1);\n                            innerSrc = b.join('.');\n\n                            // Traverse each entry in the array setting the properties requested\n                            for (var j = 0, jLen = val.length; j < jLen; j++) {\n                                o = {};\n                                setData(o, val[j], innerSrc);\n                                data[a[i]].push(o);\n                            }\n\n                            // The inner call to setData has already traversed through the remainder\n                            // of the source and has set the data, thus we can exit here\n                            return;\n                        }\n                        else if (funcNotation) {\n                            // Function call\n                            a[i] = a[i].replace(__reFn, '');\n                            data = data[a[i]](val);\n                        }\n\n                        // If the nested object doesn't currently exist - since we are\n                        // trying to set the value - create it\n                        if (data[a[i]] === null || data[a[i]] === undefined) {\n                            data[a[i]] = {};\n                        }\n                        data = data[a[i]];\n                    }\n\n                    // Last item in the input - i.e, the actual set\n                    if (aLast.match(__reFn)) {\n                        // Function call\n                        data = data[aLast.replace(__reFn, '')](val);\n                    }\n                    else {\n                        // If array notation is used, we just want to strip it and use the property name\n                        // and assign the value. If it isn't used, then we get the result we want anyway\n                        data[aLast.replace(__reArray, '')] = val;\n                    }\n                };\n\n                return function (data, val) { // meta is also passed in, but not used\n                    return setData(data, val, mSource);\n                };\n            }\n            else {\n                /* Array or flat object mapping */\n                return function (data, val) { // meta is also passed in, but not used\n                    data[mSource] = val;\n                };\n            }\n        }\n\n\n        /**\n         * Return an array with the full table data\n         *  @param {object} oSettings dataTables settings object\n         *  @returns array {array} aData Master data array\n         *  @memberof DataTable#oApi\n         */\n        function _fnGetDataMaster(settings) {\n            return _pluck(settings.aoData, '_aData');\n        }\n\n\n        /**\n         * Nuke the table\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnClearTable(settings) {\n            settings.aoData.length = 0;\n            settings.aiDisplayMaster.length = 0;\n            settings.aiDisplay.length = 0;\n        }\n\n\n        /**\n         * Take an array of integers (index array) and remove a target integer (value - not\n         * the key!)\n         *  @param {array} a Index array to target\n         *  @param {int} iTarget value to find\n         *  @memberof DataTable#oApi\n         */\n        function _fnDeleteIndex(a, iTarget, splice) {\n            var iTargetIndex = -1;\n\n            for (var i = 0, iLen = a.length; i < iLen; i++) {\n                if (a[i] == iTarget) {\n                    iTargetIndex = i;\n                }\n                else if (a[i] > iTarget) {\n                    a[i]--;\n                }\n            }\n\n            if (iTargetIndex != -1 && splice === undefined) {\n                a.splice(iTargetIndex, 1);\n            }\n        }\n\n\n        /**\n         * Mark cached data as invalid such that a re-read of the data will occur when\n         * the cached data is next requested. Also update from the data source object.\n         *\n         * @param {object} settings DataTables settings object\n         * @param {int}    rowIdx   Row index to invalidate\n         * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n         *     or 'data'\n         * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n         *     row will be invalidated\n         * @memberof DataTable#oApi\n         *\n         * @todo For the modularisation of v1.11 this will need to become a callback, so\n         *   the sort and filter methods can subscribe to it. That will required\n         *   initialisation options for sorting, which is why it is not already baked in\n         */\n        function _fnInvalidate(settings, rowIdx, src, colIdx) {\n            var row = settings.aoData[rowIdx];\n            var i, ien;\n            var cellWrite = function (cell, col) {\n                // This is very frustrating, but in IE if you just write directly\n                // to innerHTML, and elements that are overwritten are GC'ed,\n                // even if there is a reference to them elsewhere\n                while (cell.childNodes.length) {\n                    cell.removeChild(cell.firstChild);\n                }\n\n                cell.innerHTML = _fnGetCellData(settings, rowIdx, col, 'display');\n            };\n\n            // Are we reading last data from DOM or the data object?\n            if (src === 'dom' || ((!src || src === 'auto') && row.src === 'dom')) {\n                // Read the data from the DOM\n                row._aData = _fnGetRowElements(\n                    settings, row, colIdx, colIdx === undefined ? undefined : row._aData\n                )\n                    .data;\n            }\n            else {\n                // Reading from data object, update the DOM\n                var cells = row.anCells;\n\n                if (cells) {\n                    if (colIdx !== undefined) {\n                        cellWrite(cells[colIdx], colIdx);\n                    }\n                    else {\n                        for (i = 0, ien = cells.length; i < ien; i++) {\n                            cellWrite(cells[i], i);\n                        }\n                    }\n                }\n            }\n\n            // For both row and cell invalidation, the cached data for sorting and\n            // filtering is nulled out\n            row._aSortData = null;\n            row._aFilterData = null;\n\n            // Invalidate the type for a specific column (if given) or all columns since\n            // the data might have changed\n            var cols = settings.aoColumns;\n            if (colIdx !== undefined) {\n                cols[colIdx].sType = null;\n            }\n            else {\n                for (i = 0, ien = cols.length; i < ien; i++) {\n                    cols[i].sType = null;\n                }\n\n                // Update DataTables special `DT_*` attributes for the row\n                _fnRowAttributes(row);\n            }\n        }\n\n\n        /**\n         * Build a data source object from an HTML row, reading the contents of the\n         * cells that are in the row.\n         *\n         * @param {object} settings DataTables settings object\n         * @param {node|object} TR element from which to read data or existing row\n         *   object from which to re-read the data from the cells\n         * @param {int} [colIdx] Optional column index\n         * @param {array|object} [d] Data source object. If `colIdx` is given then this\n         *   parameter should also be given and will be used to write the data into.\n         *   Only the column in question will be written\n         * @returns {object} Object with two parameters: `data` the data read, in\n         *   document order, and `cells` and array of nodes (they can be useful to the\n         *   caller, so rather than needing a second traversal to get them, just return\n         *   them from here).\n         * @memberof DataTable#oApi\n         */\n        function _fnGetRowElements(settings, row, colIdx, d) {\n            var\n                tds = [],\n                td = row.firstChild,\n                name, col, o, i = 0, contents,\n                columns = settings.aoColumns,\n                objectRead = settings._rowReadObject;\n\n            // Allow the data object to be passed in, or construct\n            d = d || objectRead ? {} : [];\n\n            var attr = function (str, td) {\n                if (typeof str === 'string') {\n                    var idx = str.indexOf('@');\n\n                    if (idx !== -1) {\n                        var attr = str.substring(idx + 1);\n                        var setter = _fnSetObjectDataFn(str);\n                        setter(d, td.getAttribute(attr));\n                    }\n                }\n            };\n\n            // Read data from a cell and store into the data object\n            var cellProcess = function (cell) {\n                if (colIdx === undefined || colIdx === i) {\n                    col = columns[i];\n                    contents = $.trim(cell.innerHTML);\n\n                    if (col && col._bAttrSrc) {\n                        var setter = _fnSetObjectDataFn(col.mData._);\n                        setter(d, contents);\n\n                        attr(col.mData.sort, cell);\n                        attr(col.mData.type, cell);\n                        attr(col.mData.filter, cell);\n                    }\n                    else {\n                        // Depending on the `data` option for the columns the data can\n                        // be read to either an object or an array.\n                        if (objectRead) {\n                            if (!col._setter) {\n                                // Cache the setter function\n                                col._setter = _fnSetObjectDataFn(col.mData);\n                            }\n                            col._setter(d, contents);\n                        }\n                        else {\n                            d[i] = contents;\n                        }\n                    }\n                }\n\n                i++;\n            };\n\n            if (td) {\n                // `tr` element was passed in\n                while (td) {\n                    name = td.nodeName.toUpperCase();\n\n                    if (name == \"TD\" || name == \"TH\") {\n                        cellProcess(td);\n                        tds.push(td);\n                    }\n\n                    td = td.nextSibling;\n                }\n            }\n            else {\n                // Existing row object passed in\n                tds = row.anCells;\n\n                for (var j = 0, jen = tds.length; j < jen; j++) {\n                    cellProcess(tds[j]);\n                }\n            }\n\n            return {\n                data: d,\n                cells: tds\n            };\n        }\n\n        /**\n         * Create a new TR element (and it's TD children) for a row\n         *  @param {object} oSettings dataTables settings object\n         *  @param {int} iRow Row to consider\n         *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n         *    DataTables will create a row automatically\n         *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n         *    if nTr is.\n         *  @memberof DataTable#oApi\n         */\n        function _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n            var\n                row = oSettings.aoData[iRow],\n                rowData = row._aData,\n                cells = [],\n                nTr, nTd, oCol,\n                i, iLen;\n\n            if (row.nTr === null) {\n                nTr = nTrIn || document.createElement('tr');\n\n                row.nTr = nTr;\n                row.anCells = cells;\n\n                /* Use a private property on the node to allow reserve mapping from the node\n                 * to the aoData array for fast look up\n                 */\n                nTr._DT_RowIndex = iRow;\n\n                /* Special parameters can be given by the data source to be used on the row */\n                _fnRowAttributes(row);\n\n                /* Process each column */\n                for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n                    oCol = oSettings.aoColumns[i];\n\n                    nTd = nTrIn ? anTds[i] : document.createElement(oCol.sCellType);\n                    cells.push(nTd);\n\n                    // Need to create the HTML if new, or if a rendering function is defined\n                    if (!nTrIn || oCol.mRender || oCol.mData !== i) {\n                        nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display');\n                    }\n\n                    /* Add user defined class */\n                    if (oCol.sClass) {\n                        nTd.className += ' ' + oCol.sClass;\n                    }\n\n                    // Visibility - add or remove as required\n                    if (oCol.bVisible && !nTrIn) {\n                        nTr.appendChild(nTd);\n                    }\n                    else if (!oCol.bVisible && nTrIn) {\n                        nTd.parentNode.removeChild(nTd);\n                    }\n\n                    if (oCol.fnCreatedCell) {\n                        oCol.fnCreatedCell.call(oSettings.oInstance,\n                            nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i\n                        );\n                    }\n                }\n\n                _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow]);\n            }\n\n            // Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n            // and deployed\n            row.nTr.setAttribute('role', 'row');\n        }\n\n\n        /**\n         * Add attributes to a row based on the special `DT_*` parameters in a data\n         * source object.\n         *  @param {object} DataTables row object for the row to be modified\n         *  @memberof DataTable#oApi\n         */\n        function _fnRowAttributes(row) {\n            var tr = row.nTr;\n            var data = row._aData;\n\n            if (tr) {\n                if (data.DT_RowId) {\n                    tr.id = data.DT_RowId;\n                }\n\n                if (data.DT_RowClass) {\n                    // Remove any classes added by DT_RowClass before\n                    var a = data.DT_RowClass.split(' ');\n                    row.__rowc = row.__rowc ?\n                        _unique(row.__rowc.concat(a)) :\n                        a;\n\n                    $(tr)\n                        .removeClass(row.__rowc.join(' '))\n                        .addClass(data.DT_RowClass);\n                }\n\n                if (data.DT_RowData) {\n                    $(tr).data(data.DT_RowData);\n                }\n            }\n        }\n\n\n        /**\n         * Create the HTML header for the table\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnBuildHead(oSettings) {\n            var i, ien, cell, row, column;\n            var thead = oSettings.nTHead;\n            var tfoot = oSettings.nTFoot;\n            var createHeader = $('th, td', thead).length === 0;\n            var classes = oSettings.oClasses;\n            var columns = oSettings.aoColumns;\n\n            if (createHeader) {\n                row = $('<tr/>').appendTo(thead);\n            }\n\n            for (i = 0, ien = columns.length; i < ien; i++) {\n                column = columns[i];\n                cell = $(column.nTh).addClass(column.sClass);\n\n                if (createHeader) {\n                    cell.appendTo(row);\n                }\n\n                // 1.11 move into sorting\n                if (oSettings.oFeatures.bSort) {\n                    cell.addClass(column.sSortingClass);\n\n                    if (column.bSortable !== false) {\n                        cell\n                            .attr('tabindex', oSettings.iTabIndex)\n                            .attr('aria-controls', oSettings.sTableId);\n\n                        _fnSortAttachListener(oSettings, column.nTh, i);\n                    }\n                }\n\n                if (column.sTitle != cell.html()) {\n                    cell.html(column.sTitle);\n                }\n\n                _fnRenderer(oSettings, 'header')(\n                    oSettings, cell, column, classes\n                );\n            }\n\n            if (createHeader) {\n                _fnDetectHeader(oSettings.aoHeader, thead);\n            }\n\n            /* ARIA role for the rows */\n            $(thead).find('>tr').attr('role', 'row');\n\n            /* Deal with the footer - add classes if required */\n            $(thead).find('>tr>th, >tr>td').addClass(classes.sHeaderTH);\n            $(tfoot).find('>tr>th, >tr>td').addClass(classes.sFooterTH);\n\n            // Cache the footer cells. Note that we only take the cells from the first\n            // row in the footer. If there is more than one row the user wants to\n            // interact with, they need to use the table().foot() method. Note also this\n            // allows cells to be used for multiple columns using colspan\n            if (tfoot !== null) {\n                var cells = oSettings.aoFooter[0];\n\n                for (i = 0, ien = cells.length; i < ien; i++) {\n                    column = columns[i];\n                    column.nTf = cells[i].cell;\n\n                    if (column.sClass) {\n                        $(column.nTf).addClass(column.sClass);\n                    }\n                }\n            }\n        }\n\n\n        /**\n         * Draw the header (or footer) element based on the column visibility states. The\n         * methodology here is to use the layout array from _fnDetectHeader, modified for\n         * the instantaneous column visibility, to construct the new layout. The grid is\n         * traversed over cell at a time in a rows x columns grid fashion, although each\n         * cell insert can cover multiple elements in the grid - which is tracks using the\n         * aApplied array. Cell inserts in the grid will only occur where there isn't\n         * already a cell in that position.\n         *  @param {object} oSettings dataTables settings object\n         *  @param array {objects} aoSource Layout array from _fnDetectHeader\n         *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n         *  @memberof DataTable#oApi\n         */\n        function _fnDrawHead(oSettings, aoSource, bIncludeHidden) {\n            var i, iLen, j, jLen, k, kLen, n, nLocalTr;\n            var aoLocal = [];\n            var aApplied = [];\n            var iColumns = oSettings.aoColumns.length;\n            var iRowspan, iColspan;\n\n            if (!aoSource) {\n                return;\n            }\n\n            if (bIncludeHidden === undefined) {\n                bIncludeHidden = false;\n            }\n\n            /* Make a copy of the master layout array, but without the visible columns in it */\n            for (i = 0, iLen = aoSource.length; i < iLen; i++) {\n                aoLocal[i] = aoSource[i].slice();\n                aoLocal[i].nTr = aoSource[i].nTr;\n\n                /* Remove any columns which are currently hidden */\n                for (j = iColumns - 1; j >= 0; j--) {\n                    if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden) {\n                        aoLocal[i].splice(j, 1);\n                    }\n                }\n\n                /* Prep the applied array - it needs an element for each row */\n                aApplied.push([]);\n            }\n\n            for (i = 0, iLen = aoLocal.length; i < iLen; i++) {\n                nLocalTr = aoLocal[i].nTr;\n\n                /* All cells are going to be replaced, so empty out the row */\n                if (nLocalTr) {\n                    while ((n = nLocalTr.firstChild)) {\n                        nLocalTr.removeChild(n);\n                    }\n                }\n\n                for (j = 0, jLen = aoLocal[i].length; j < jLen; j++) {\n                    iRowspan = 1;\n                    iColspan = 1;\n\n                    /* Check to see if there is already a cell (row/colspan) covering our target\n                     * insert point. If there is, then there is nothing to do.\n                     */\n                    if (aApplied[i][j] === undefined) {\n                        nLocalTr.appendChild(aoLocal[i][j].cell);\n                        aApplied[i][j] = 1;\n\n                        /* Expand the cell to cover as many rows as needed */\n                        while (aoLocal[i + iRowspan] !== undefined &&\n                        aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell) {\n                            aApplied[i + iRowspan][j] = 1;\n                            iRowspan++;\n                        }\n\n                        /* Expand the cell to cover as many columns as needed */\n                        while (aoLocal[i][j + iColspan] !== undefined &&\n                        aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell) {\n                            /* Must update the applied array over the rows for the columns */\n                            for (k = 0; k < iRowspan; k++) {\n                                aApplied[i + k][j + iColspan] = 1;\n                            }\n                            iColspan++;\n                        }\n\n                        /* Do the actual expansion in the DOM */\n                        $(aoLocal[i][j].cell)\n                            .attr('rowspan', iRowspan)\n                            .attr('colspan', iColspan);\n                    }\n                }\n            }\n        }\n\n\n        /**\n         * Insert the required TR nodes into the table for display\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnDraw(oSettings) {\n            /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n            var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n            if ($.inArray(false, aPreDraw) !== -1) {\n                _fnProcessingDisplay(oSettings, false);\n                return;\n            }\n\n            var i, iLen, n;\n            var anRows = [];\n            var iRowCount = 0;\n            var asStripeClasses = oSettings.asStripeClasses;\n            var iStripes = asStripeClasses.length;\n            var iOpenRows = oSettings.aoOpenRows.length;\n            var oLang = oSettings.oLanguage;\n            var iInitDisplayStart = oSettings.iInitDisplayStart;\n            var bServerSide = _fnDataSource(oSettings) == 'ssp';\n            var aiDisplay = oSettings.aiDisplay;\n\n            oSettings.bDrawing = true;\n\n            /* Check and see if we have an initial draw position from state saving */\n            if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n                oSettings._iDisplayStart = bServerSide ?\n                    iInitDisplayStart :\n                    iInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n                        0 :\n                        iInitDisplayStart;\n\n                oSettings.iInitDisplayStart = -1;\n            }\n\n            var iDisplayStart = oSettings._iDisplayStart;\n            var iDisplayEnd = oSettings.fnDisplayEnd();\n\n            /* Server-side processing draw intercept */\n            if (oSettings.bDeferLoading) {\n                oSettings.bDeferLoading = false;\n                oSettings.iDraw++;\n                _fnProcessingDisplay(oSettings, false);\n            }\n            else if (!bServerSide) {\n                oSettings.iDraw++;\n            }\n            else if (!oSettings.bDestroying && !_fnAjaxUpdate(oSettings)) {\n                return;\n            }\n\n            if (aiDisplay.length !== 0) {\n                var iStart = bServerSide ? 0 : iDisplayStart;\n                var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n                for (var j = iStart; j < iEnd; j++) {\n                    var iDataIndex = aiDisplay[j];\n                    var aoData = oSettings.aoData[iDataIndex];\n                    if (aoData.nTr === null) {\n                        _fnCreateTr(oSettings, iDataIndex);\n                    }\n\n                    var nRow = aoData.nTr;\n\n                    /* Remove the old striping classes and then add the new one */\n                    if (iStripes !== 0) {\n                        var sStripe = asStripeClasses[iRowCount % iStripes];\n                        if (aoData._sRowStripe != sStripe) {\n                            $(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);\n                            aoData._sRowStripe = sStripe;\n                        }\n                    }\n\n                    // Row callback functions - might want to manipulate the row\n                    // iRowCount and j are not currently documented. Are they at all\n                    // useful?\n                    _fnCallbackFire(oSettings, 'aoRowCallback', null,\n                        [nRow, aoData._aData, iRowCount, j]);\n\n                    anRows.push(nRow);\n                    iRowCount++;\n                }\n            }\n            else {\n                /* Table is empty - create a row with an empty message in it */\n                var sZero = oLang.sZeroRecords;\n                if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax') {\n                    sZero = oLang.sLoadingRecords;\n                }\n                else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0) {\n                    sZero = oLang.sEmptyTable;\n                }\n\n                anRows[0] = $('<tr/>', {'class': iStripes ? asStripeClasses[0] : ''})\n                    .append($('<td />', {\n                        'valign': 'top',\n                        'colSpan': _fnVisbleColumns(oSettings),\n                        'class': oSettings.oClasses.sRowEmpty\n                    }).html(sZero))[0];\n            }\n\n            /* Header and footer callbacks */\n            _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0],\n                _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n            _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0],\n                _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n            var body = $(oSettings.nTBody);\n\n            body.children().detach();\n            body.append($(anRows));\n\n            /* Call all required callback functions for the end of a draw */\n            _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);\n\n            /* Draw is complete, sorting and filtering must be as well */\n            oSettings.bSorted = false;\n            oSettings.bFiltered = false;\n            oSettings.bDrawing = false;\n        }\n\n\n        /**\n         * Redraw the table - taking account of the various features which are enabled\n         *  @param {object} oSettings dataTables settings object\n         *  @param {boolean} [holdPosition] Keep the current paging position. By default\n         *    the paging is reset to the first page\n         *  @memberof DataTable#oApi\n         */\n        function _fnReDraw(settings, holdPosition) {\n            var\n                features = settings.oFeatures,\n                sort = features.bSort,\n                filter = features.bFilter;\n\n            if (sort) {\n                _fnSort(settings);\n            }\n\n            if (filter) {\n                _fnFilterComplete(settings, settings.oPreviousSearch);\n            }\n            else {\n                // No filtering, so we want to just use the display master\n                settings.aiDisplay = settings.aiDisplayMaster.slice();\n            }\n\n            if (holdPosition !== true) {\n                settings._iDisplayStart = 0;\n            }\n\n            // Let any modules know about the draw hold position state (used by\n            // scrolling internally)\n            settings._drawHold = holdPosition;\n\n            _fnDraw(settings);\n\n            settings._drawHold = false;\n        }\n\n\n        /**\n         * Add the options to the page HTML for the table\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnAddOptionsHtml(oSettings) {\n            var classes = oSettings.oClasses;\n            var table = $(oSettings.nTable);\n            var holding = $('<div/>').insertBefore(table); // Holding element for speed\n            var features = oSettings.oFeatures;\n\n            // All DataTables are wrapped in a div\n            var insert = $('<div/>', {\n                id: oSettings.sTableId + '_wrapper',\n                'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)\n            });\n\n            oSettings.nHolding = holding[0];\n            oSettings.nTableWrapper = insert[0];\n            oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n            /* Loop over the user set positioning and place the elements as needed */\n            var aDom = oSettings.sDom.split('');\n            var featureNode, cOption, nNewNode, cNext, sAttr, j;\n            for (var i = 0; i < aDom.length; i++) {\n                featureNode = null;\n                cOption = aDom[i];\n\n                if (cOption == '<') {\n                    /* New container div */\n                    nNewNode = $('<div/>')[0];\n\n                    /* Check to see if we should append an id and/or a class name to the container */\n                    cNext = aDom[i + 1];\n                    if (cNext == \"'\" || cNext == '\"') {\n                        sAttr = \"\";\n                        j = 2;\n                        while (aDom[i + j] != cNext) {\n                            sAttr += aDom[i + j];\n                            j++;\n                        }\n\n                        /* Replace jQuery UI constants @todo depreciated */\n                        if (sAttr == \"H\") {\n                            sAttr = classes.sJUIHeader;\n                        }\n                        else if (sAttr == \"F\") {\n                            sAttr = classes.sJUIFooter;\n                        }\n\n                        /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n                         * breaks the string into parts and applies them as needed\n                         */\n                        if (sAttr.indexOf('.') != -1) {\n                            var aSplit = sAttr.split('.');\n                            nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);\n                            nNewNode.className = aSplit[1];\n                        }\n                        else if (sAttr.charAt(0) == \"#\") {\n                            nNewNode.id = sAttr.substr(1, sAttr.length - 1);\n                        }\n                        else {\n                            nNewNode.className = sAttr;\n                        }\n\n                        i += j;\n                        /* Move along the position array */\n                    }\n\n                    insert.append(nNewNode);\n                    insert = $(nNewNode);\n                }\n                else if (cOption == '>') {\n                    /* End container div */\n                    insert = insert.parent();\n                }\n                // @todo Move options into their own plugins?\n                else if (cOption == 'l' && features.bPaginate && features.bLengthChange) {\n                    /* Length */\n                    featureNode = _fnFeatureHtmlLength(oSettings);\n                }\n                else if (cOption == 'f' && features.bFilter) {\n                    /* Filter */\n                    featureNode = _fnFeatureHtmlFilter(oSettings);\n                }\n                else if (cOption == 'r' && features.bProcessing) {\n                    /* pRocessing */\n                    featureNode = _fnFeatureHtmlProcessing(oSettings);\n                }\n                else if (cOption == 't') {\n                    /* Table */\n                    featureNode = _fnFeatureHtmlTable(oSettings);\n                }\n                else if (cOption == 'i' && features.bInfo) {\n                    /* Info */\n                    featureNode = _fnFeatureHtmlInfo(oSettings);\n                }\n                else if (cOption == 'p' && features.bPaginate) {\n                    /* Pagination */\n                    featureNode = _fnFeatureHtmlPaginate(oSettings);\n                }\n                else if (DataTable.ext.feature.length !== 0) {\n                    /* Plug-in features */\n                    var aoFeatures = DataTable.ext.feature;\n                    for (var k = 0, kLen = aoFeatures.length; k < kLen; k++) {\n                        if (cOption == aoFeatures[k].cFeature) {\n                            featureNode = aoFeatures[k].fnInit(oSettings);\n                            break;\n                        }\n                    }\n                }\n\n                /* Add to the 2D features array */\n                if (featureNode) {\n                    var aanFeatures = oSettings.aanFeatures;\n\n                    if (!aanFeatures[cOption]) {\n                        aanFeatures[cOption] = [];\n                    }\n\n                    aanFeatures[cOption].push(featureNode);\n                    insert.append(featureNode);\n                }\n            }\n\n            /* Built our DOM structure - replace the holding div with what we want */\n            holding.replaceWith(insert);\n        }\n\n\n        /**\n         * Use the DOM source to create up an array of header cells. The idea here is to\n         * create a layout grid (array) of rows x columns, which contains a reference\n         * to the cell that that point in the grid (regardless of col/rowspan), such that\n         * any column / row could be removed and the new grid constructed\n         *  @param array {object} aLayout Array to store the calculated layout in\n         *  @param {node} nThead The header/footer element for the table\n         *  @memberof DataTable#oApi\n         */\n        function _fnDetectHeader(aLayout, nThead) {\n            var nTrs = $(nThead).children('tr');\n            var nTr, nCell;\n            var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n            var bUnique;\n            var fnShiftCol = function (a, i, j) {\n                var k = a[i];\n                while (k[j]) {\n                    j++;\n                }\n                return j;\n            };\n\n            aLayout.splice(0, aLayout.length);\n\n            /* We know how many rows there are in the layout - so prep it */\n            for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n                aLayout.push([]);\n            }\n\n            /* Calculate a layout array */\n            for (i = 0, iLen = nTrs.length; i < iLen; i++) {\n                nTr = nTrs[i];\n                iColumn = 0;\n\n                /* For every cell in the row... */\n                nCell = nTr.firstChild;\n                while (nCell) {\n                    if (nCell.nodeName.toUpperCase() == \"TD\" ||\n                        nCell.nodeName.toUpperCase() == \"TH\") {\n                        /* Get the col and rowspan attributes from the DOM and sanitise them */\n                        iColspan = nCell.getAttribute('colspan') * 1;\n                        iRowspan = nCell.getAttribute('rowspan') * 1;\n                        iColspan = (!iColspan || iColspan === 0 || iColspan === 1) ? 1 : iColspan;\n                        iRowspan = (!iRowspan || iRowspan === 0 || iRowspan === 1) ? 1 : iRowspan;\n\n                        /* There might be colspan cells already in this row, so shift our target\n                         * accordingly\n                         */\n                        iColShifted = fnShiftCol(aLayout, i, iColumn);\n\n                        /* Cache calculation for unique columns */\n                        bUnique = iColspan === 1 ? true : false;\n\n                        /* If there is col / rowspan, copy the information into the layout grid */\n                        for (l = 0; l < iColspan; l++) {\n                            for (k = 0; k < iRowspan; k++) {\n                                aLayout[i + k][iColShifted + l] = {\n                                    \"cell\": nCell,\n                                    \"unique\": bUnique\n                                };\n                                aLayout[i + k].nTr = nTr;\n                            }\n                        }\n                    }\n                    nCell = nCell.nextSibling;\n                }\n            }\n        }\n\n\n        /**\n         * Get an array of unique th elements, one for each column\n         *  @param {object} oSettings dataTables settings object\n         *  @param {node} nHeader automatically detect the layout from this node - optional\n         *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n         *  @returns array {node} aReturn list of unique th's\n         *  @memberof DataTable#oApi\n         */\n        function _fnGetUniqueThs(oSettings, nHeader, aLayout) {\n            var aReturn = [];\n            if (!aLayout) {\n                aLayout = oSettings.aoHeader;\n                if (nHeader) {\n                    aLayout = [];\n                    _fnDetectHeader(aLayout, nHeader);\n                }\n            }\n\n            for (var i = 0, iLen = aLayout.length; i < iLen; i++) {\n                for (var j = 0, jLen = aLayout[i].length; j < jLen; j++) {\n                    if (aLayout[i][j].unique &&\n                        (!aReturn[j] || !oSettings.bSortCellsTop)) {\n                        aReturn[j] = aLayout[i][j].cell;\n                    }\n                }\n            }\n\n            return aReturn;\n        }\n\n\n        /**\n         * Create an Ajax call based on the table's settings, taking into account that\n         * parameters can have multiple forms, and backwards compatibility.\n         *\n         * @param {object} oSettings dataTables settings object\n         * @param {array} data Data to send to the server, required by\n         *     DataTables - may be augmented by developer callbacks\n         * @param {function} fn Callback function to run when data is obtained\n         */\n        function _fnBuildAjax(oSettings, data, fn) {\n            // Compatibility with 1.9-, allow fnServerData and event to manipulate\n            _fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data]);\n\n            // Convert to object based for 1.10+ if using the old array scheme which can\n            // come from server-side processing or serverParams\n            if (data && $.isArray(data)) {\n                var tmp = {};\n                var rbracket = /(.*?)\\[\\]$/;\n\n                $.each(data, function (key, val) {\n                    var match = val.name.match(rbracket);\n\n                    if (match) {\n                        // Support for arrays\n                        var name = match[0];\n\n                        if (!tmp[name]) {\n                            tmp[name] = [];\n                        }\n                        tmp[name].push(val.value);\n                    }\n                    else {\n                        tmp[val.name] = val.value;\n                    }\n                });\n                data = tmp;\n            }\n\n            var ajaxData;\n            var ajax = oSettings.ajax;\n            var instance = oSettings.oInstance;\n\n            if ($.isPlainObject(ajax) && ajax.data) {\n                ajaxData = ajax.data;\n\n                var newData = $.isFunction(ajaxData) ?\n                    ajaxData(data) :  // fn can manipulate data or return an object\n                    ajaxData;           // object or array to merge\n\n                // If the function returned an object, use that alone\n                data = $.isFunction(ajaxData) && newData ?\n                    newData :\n                    $.extend(true, data, newData);\n\n                // Remove the data property as we've resolved it already and don't want\n                // jQuery to do it again (it is restored at the end of the function)\n                delete ajax.data;\n            }\n\n            var baseAjax = {\n                \"data\": data,\n                \"success\": function (json) {\n                    var error = json.error || json.sError;\n                    if (error) {\n                        oSettings.oApi._fnLog(oSettings, 0, error);\n                    }\n\n                    oSettings.json = json;\n                    _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json]);\n                    fn(json);\n                },\n                \"dataType\": \"json\",\n                \"cache\": false,\n                \"type\": oSettings.sServerMethod,\n                \"error\": function (xhr, error, thrown) {\n                    var log = oSettings.oApi._fnLog;\n\n                    if (error == \"parsererror\") {\n                        log(oSettings, 0, 'Invalid JSON response', 1);\n                    }\n                    else if (xhr.readyState === 4) {\n                        log(oSettings, 0, 'Ajax error', 7);\n                    }\n\n                    _fnProcessingDisplay(oSettings, false);\n                }\n            };\n\n            // Store the data submitted for the API\n            oSettings.oAjaxData = data;\n\n            // Allow plug-ins and external processes to modify the data\n            _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data]);\n\n            if (oSettings.fnServerData) {\n                // DataTables 1.9- compatibility\n                oSettings.fnServerData.call(instance,\n                    oSettings.sAjaxSource,\n                    $.map(data, function (val, key) { // Need to convert back to 1.9 trad format\n                        return {name: key, value: val};\n                    }),\n                    fn,\n                    oSettings\n                );\n            }\n            else if (oSettings.sAjaxSource || typeof ajax === 'string') {\n                // DataTables 1.9- compatibility\n                oSettings.jqXHR = $.ajax($.extend(baseAjax, {\n                    url: ajax || oSettings.sAjaxSource\n                }));\n            }\n            else if ($.isFunction(ajax)) {\n                // Is a function - let the caller define what needs to be done\n                oSettings.jqXHR = ajax.call(instance, data, fn, oSettings);\n            }\n            else {\n                // Object to extend the base settings\n                oSettings.jqXHR = $.ajax($.extend(baseAjax, ajax));\n\n                // Restore for next time around\n                ajax.data = ajaxData;\n            }\n        }\n\n\n        /**\n         * Update the table using an Ajax call\n         *  @param {object} settings dataTables settings object\n         *  @returns {boolean} Block the table drawing or not\n         *  @memberof DataTable#oApi\n         */\n        function _fnAjaxUpdate(settings) {\n            if (settings.bAjaxDataGet) {\n                settings.iDraw++;\n                _fnProcessingDisplay(settings, true);\n\n                _fnBuildAjax(\n                    settings,\n                    _fnAjaxParameters(settings),\n                    function (json) {\n                        _fnAjaxUpdateDraw(settings, json);\n                    }\n                );\n\n                return false;\n            }\n            return true;\n        }\n\n\n        /**\n         * Build up the parameters in an object needed for a server-side processing\n         * request. Note that this is basically done twice, is different ways - a modern\n         * method which is used by default in DataTables 1.10 which uses objects and\n         * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n         * the sAjaxSource option is used in the initialisation, or the legacyAjax\n         * option is set.\n         *  @param {object} oSettings dataTables settings object\n         *  @returns {bool} block the table drawing or not\n         *  @memberof DataTable#oApi\n         */\n        function _fnAjaxParameters(settings) {\n            var\n                columns = settings.aoColumns,\n                columnCount = columns.length,\n                features = settings.oFeatures,\n                preSearch = settings.oPreviousSearch,\n                preColSearch = settings.aoPreSearchCols,\n                i, data = [], dataProp, column, columnSearch,\n                sort = _fnSortFlatten(settings),\n                displayStart = settings._iDisplayStart,\n                displayLength = features.bPaginate !== false ?\n                    settings._iDisplayLength :\n                    -1;\n\n            var param = function (name, value) {\n                data.push({'name': name, 'value': value});\n            };\n\n            // DataTables 1.9- compatible method\n            param('sEcho', settings.iDraw);\n            param('iColumns', columnCount);\n            param('sColumns', _pluck(columns, 'sName').join(','));\n            param('iDisplayStart', displayStart);\n            param('iDisplayLength', displayLength);\n\n            // DataTables 1.10+ method\n            var d = {\n                draw: settings.iDraw,\n                columns: [],\n                order: [],\n                start: displayStart,\n                length: displayLength,\n                search: {\n                    value: preSearch.sSearch,\n                    regex: preSearch.bRegex\n                }\n            };\n\n            for (i = 0; i < columnCount; i++) {\n                column = columns[i];\n                columnSearch = preColSearch[i];\n                dataProp = typeof column.mData == \"function\" ? 'function' : column.mData;\n\n                d.columns.push({\n                    data: dataProp,\n                    name: column.sName,\n                    searchable: column.bSearchable,\n                    orderable: column.bSortable,\n                    search: {\n                        value: columnSearch.sSearch,\n                        regex: columnSearch.bRegex\n                    }\n                });\n\n                param(\"mDataProp_\" + i, dataProp);\n\n                if (features.bFilter) {\n                    param('sSearch_' + i, columnSearch.sSearch);\n                    param('bRegex_' + i, columnSearch.bRegex);\n                    param('bSearchable_' + i, column.bSearchable);\n                }\n\n                if (features.bSort) {\n                    param('bSortable_' + i, column.bSortable);\n                }\n            }\n\n            if (features.bFilter) {\n                param('sSearch', preSearch.sSearch);\n                param('bRegex', preSearch.bRegex);\n            }\n\n            if (features.bSort) {\n                $.each(sort, function (i, val) {\n                    d.order.push({column: val.col, dir: val.dir});\n\n                    param('iSortCol_' + i, val.col);\n                    param('sSortDir_' + i, val.dir);\n                });\n\n                param('iSortingCols', sort.length);\n            }\n\n            // If the legacy.ajax parameter is null, then we automatically decide which\n            // form to use, based on sAjaxSource\n            var legacy = DataTable.ext.legacy.ajax;\n            if (legacy === null) {\n                return settings.sAjaxSource ? data : d;\n            }\n\n            // Otherwise, if legacy has been specified then we use that to decide on the\n            // form\n            return legacy ? data : d;\n        }\n\n\n        /**\n         * Data the data from the server (nuking the old) and redraw the table\n         *  @param {object} oSettings dataTables settings object\n         *  @param {object} json json data return from the server.\n         *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n         *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n         *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n         *  @param {array} json.aaData The data to display on this page\n         *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n         *  @memberof DataTable#oApi\n         */\n        function _fnAjaxUpdateDraw(settings, json) {\n            // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n            // Support both\n            var compat = function (old, modern) {\n                return json[old] !== undefined ? json[old] : json[modern];\n            };\n\n            var draw = compat('sEcho', 'draw');\n            var recordsTotal = compat('iTotalRecords', 'recordsTotal');\n            var recordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered');\n\n            if (draw) {\n                // Protect against out of sequence returns\n                if (draw * 1 < settings.iDraw) {\n                    return;\n                }\n                settings.iDraw = draw * 1;\n            }\n\n            _fnClearTable(settings);\n            settings._iRecordsTotal = parseInt(recordsTotal, 10);\n            settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n            var data = _fnAjaxDataSrc(settings, json);\n            for (var i = 0, ien = data.length; i < ien; i++) {\n                _fnAddData(settings, data[i]);\n            }\n            settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n            settings.bAjaxDataGet = false;\n            _fnDraw(settings);\n\n            if (!settings._bInitComplete) {\n                _fnInitComplete(settings, json);\n            }\n\n            settings.bAjaxDataGet = true;\n            _fnProcessingDisplay(settings, false);\n        }\n\n\n        /**\n         * Get the data from the JSON data source to use for drawing a table. Using\n         * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n         * source object, or from a processing function.\n         *  @param {object} oSettings dataTables settings object\n         *  @param  {object} json Data source object / array from the server\n         *  @return {array} Array of data to use\n         */\n        function _fnAjaxDataSrc(oSettings, json) {\n            var dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ?\n                oSettings.ajax.dataSrc :\n                oSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n            // Compatibility with 1.9-. In order to read from aaData, check if the\n            // default has been changed, if not, check for aaData\n            if (dataSrc === 'data') {\n                return json.aaData || json[dataSrc];\n            }\n\n            return dataSrc !== \"\" ?\n                _fnGetObjectDataFn(dataSrc)(json) :\n                json;\n        }\n\n\n        /**\n         * Generate the node required for filtering text\n         *  @returns {node} Filter control element\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnFeatureHtmlFilter(settings) {\n            var classes = settings.oClasses;\n            var tableId = settings.sTableId;\n            var language = settings.oLanguage;\n            var previousSearch = settings.oPreviousSearch;\n            var features = settings.aanFeatures;\n            var input = '<input type=\"search\" class=\"' + classes.sFilterInput + '\"/>';\n\n            var str = language.sSearch;\n            str = str.match(/_INPUT_/) ?\n                str.replace('_INPUT_', input) :\n            str + input;\n\n            var filter = $('<div/>', {\n                'id': !features.f ? tableId + '_filter' : null,\n                'class': classes.sFilter\n            })\n                .append($('<label/>').append(str));\n\n            var searchFn = function () {\n                /* Update all other filter input elements for the new display */\n                var n = features.f;\n                var val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\n                /* Now do the filter */\n                if (val != previousSearch.sSearch) {\n                    _fnFilterComplete(settings, {\n                        \"sSearch\": val,\n                        \"bRegex\": previousSearch.bRegex,\n                        \"bSmart\": previousSearch.bSmart,\n                        \"bCaseInsensitive\": previousSearch.bCaseInsensitive\n                    });\n\n                    // Need to redraw, without resorting\n                    settings._iDisplayStart = 0;\n                    _fnDraw(settings);\n                }\n            };\n\n            var searchDelay = settings.searchDelay !== null ?\n                settings.searchDelay :\n                _fnDataSource(settings) === 'ssp' ?\n                    400 :\n                    0;\n\n            var jqFilter = $('input', filter)\n                .val(previousSearch.sSearch)\n                .attr('placeholder', language.sSearchPlaceholder)\n                .bind(\n                'keyup.DT search.DT input.DT paste.DT cut.DT',\n                searchDelay ?\n                    _fnThrottle(searchFn, searchDelay) :\n                    searchFn\n            )\n                .bind('keypress.DT', function (e) {\n                    /* Prevent form submission */\n                    if (e.keyCode == 13) {\n                        return false;\n                    }\n                })\n                .attr('aria-controls', tableId);\n\n            // Update the input elements whenever the table is filtered\n            $(settings.nTable).on('search.dt.DT', function (ev, s) {\n                if (settings === s) {\n                    // IE9 throws an 'unknown error' if document.activeElement is used\n                    // inside an iframe or frame...\n                    try {\n                        if (jqFilter[0] !== document.activeElement) {\n                            jqFilter.val(previousSearch.sSearch);\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n            });\n\n            return filter[0];\n        }\n\n\n        /**\n         * Filter the table using both the global filter and column based filtering\n         *  @param {object} oSettings dataTables settings object\n         *  @param {object} oSearch search information\n         *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n         *  @memberof DataTable#oApi\n         */\n        function _fnFilterComplete(oSettings, oInput, iForce) {\n            var oPrevSearch = oSettings.oPreviousSearch;\n            var aoPrevSearch = oSettings.aoPreSearchCols;\n            var fnSaveFilter = function (oFilter) {\n                /* Save the filtering values */\n                oPrevSearch.sSearch = oFilter.sSearch;\n                oPrevSearch.bRegex = oFilter.bRegex;\n                oPrevSearch.bSmart = oFilter.bSmart;\n                oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n            };\n            var fnRegex = function (o) {\n                // Backwards compatibility with the bEscapeRegex option\n                return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n            };\n\n            // Resolve any column types that are unknown due to addition or invalidation\n            // @todo As per sort - can this be moved into an event handler?\n            _fnColumnTypes(oSettings);\n\n            /* In server-side processing all filtering is done by the server, so no point hanging around here */\n            if (_fnDataSource(oSettings) != 'ssp') {\n                /* Global filter */\n                _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive);\n                fnSaveFilter(oInput);\n\n                /* Now do the individual column filter */\n                for (var i = 0; i < aoPrevSearch.length; i++) {\n                    _fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n                        aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);\n                }\n\n                /* Custom filtering */\n                _fnFilterCustom(oSettings);\n            }\n            else {\n                fnSaveFilter(oInput);\n            }\n\n            /* Tell the draw function we have been filtering */\n            oSettings.bFiltered = true;\n            _fnCallbackFire(oSettings, null, 'search', [oSettings]);\n        }\n\n\n        /**\n         * Apply custom filtering functions\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnFilterCustom(settings) {\n            var filters = DataTable.ext.search;\n            var displayRows = settings.aiDisplay;\n            var row, rowIdx;\n\n            for (var i = 0, ien = filters.length; i < ien; i++) {\n                var rows = [];\n\n                // Loop over each row and see if it should be included\n                for (var j = 0, jen = displayRows.length; j < jen; j++) {\n                    rowIdx = displayRows[j];\n                    row = settings.aoData[rowIdx];\n\n                    if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n                        rows.push(rowIdx);\n                    }\n                }\n\n                // So the array reference doesn't break set the results into the\n                // existing array\n                displayRows.length = 0;\n                displayRows.push.apply(displayRows, rows);\n            }\n        }\n\n\n        /**\n         * Filter the table on a per-column basis\n         *  @param {object} oSettings dataTables settings object\n         *  @param {string} sInput string to filter on\n         *  @param {int} iColumn column to filter\n         *  @param {bool} bRegex treat search string as a regular expression or not\n         *  @param {bool} bSmart use smart filtering or not\n         *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n         *  @memberof DataTable#oApi\n         */\n        function _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive) {\n            if (searchStr === '') {\n                return;\n            }\n\n            var data;\n            var display = settings.aiDisplay;\n            var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);\n\n            for (var i = display.length - 1; i >= 0; i--) {\n                data = settings.aoData[display[i]]._aFilterData[colIdx];\n\n                if (!rpSearch.test(data)) {\n                    display.splice(i, 1);\n                }\n            }\n        }\n\n\n        /**\n         * Filter the data table based on user input and draw the table\n         *  @param {object} settings dataTables settings object\n         *  @param {string} input string to filter on\n         *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n         *  @param {bool} regex treat as a regular expression or not\n         *  @param {bool} smart perform smart filtering or not\n         *  @param {bool} caseInsensitive Do case insenstive matching or not\n         *  @memberof DataTable#oApi\n         */\n        function _fnFilter(settings, input, force, regex, smart, caseInsensitive) {\n            var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);\n            var prevSearch = settings.oPreviousSearch.sSearch;\n            var displayMaster = settings.aiDisplayMaster;\n            var display, invalidated, i;\n\n            // Need to take account of custom filtering functions - always filter\n            if (DataTable.ext.search.length !== 0) {\n                force = true;\n            }\n\n            // Check if any of the rows were invalidated\n            invalidated = _fnFilterData(settings);\n\n            // If the input is blank - we just want the full data set\n            if (input.length <= 0) {\n                settings.aiDisplay = displayMaster.slice();\n            }\n            else {\n                // New search - start from the master array\n                if (invalidated ||\n                    force ||\n                    prevSearch.length > input.length ||\n                    input.indexOf(prevSearch) !== 0 ||\n                    settings.bSorted // On resort, the display master needs to be\n                                     // re-filtered since indexes will have changed\n                ) {\n                    settings.aiDisplay = displayMaster.slice();\n                }\n\n                // Search the display array\n                display = settings.aiDisplay;\n\n                for (i = display.length - 1; i >= 0; i--) {\n                    if (!rpSearch.test(settings.aoData[display[i]]._sFilterRow)) {\n                        display.splice(i, 1);\n                    }\n                }\n            }\n        }\n\n\n        /**\n         * Build a regular expression object suitable for searching a table\n         *  @param {string} sSearch string to search for\n         *  @param {bool} bRegex treat as a regular expression or not\n         *  @param {bool} bSmart perform smart filtering or not\n         *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n         *  @returns {RegExp} constructed object\n         *  @memberof DataTable#oApi\n         */\n        function _fnFilterCreateSearch(search, regex, smart, caseInsensitive) {\n            search = regex ?\n                search :\n                _fnEscapeRegex(search);\n\n            if (smart) {\n                /* For smart filtering we want to allow the search to work regardless of\n                 * word order. We also want double quoted text to be preserved, so word\n                 * order is important - a la google. So this is what we want to\n                 * generate:\n                 * \n                 * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n                 */\n                var a = $.map(search.match(/\"[^\"]+\"|[^ ]+/g) || '', function (word) {\n                    if (word.charAt(0) === '\"') {\n                        var m = word.match(/^\"(.*)\"$/);\n                        word = m ? m[1] : word;\n                    }\n\n                    return word.replace('\"', '');\n                });\n\n                search = '^(?=.*?' + a.join(')(?=.*?') + ').*$';\n            }\n\n            return new RegExp(search, caseInsensitive ? 'i' : '');\n        }\n\n\n        /**\n         * Escape a string such that it can be used in a regular expression\n         *  @param {string} sVal string to escape\n         *  @returns {string} escaped string\n         *  @memberof DataTable#oApi\n         */\n        function _fnEscapeRegex(sVal) {\n            return sVal.replace(_re_escape_regex, '\\\\$1');\n        }\n\n\n        var __filter_div = $('<div>')[0];\n        var __filter_div_textContent = __filter_div.textContent !== undefined;\n\n        // Update the filtering data for each row if needed (by invalidation or first run)\n        function _fnFilterData(settings) {\n            var columns = settings.aoColumns;\n            var column;\n            var i, j, ien, jen, filterData, cellData, row;\n            var fomatters = DataTable.ext.type.search;\n            var wasInvalidated = false;\n\n            for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n                row = settings.aoData[i];\n\n                if (!row._aFilterData) {\n                    filterData = [];\n\n                    for (j = 0, jen = columns.length; j < jen; j++) {\n                        column = columns[j];\n\n                        if (column.bSearchable) {\n                            cellData = _fnGetCellData(settings, i, j, 'filter');\n\n                            if (fomatters[column.sType]) {\n                                cellData = fomatters[column.sType](cellData);\n                            }\n\n                            // Search in DataTables 1.10 is string based. In 1.11 this\n                            // should be altered to also allow strict type checking.\n                            if (cellData === null) {\n                                cellData = '';\n                            }\n\n                            if (typeof cellData !== 'string' && cellData.toString) {\n                                cellData = cellData.toString();\n                            }\n                        }\n                        else {\n                            cellData = '';\n                        }\n\n                        // If it looks like there is an HTML entity in the string,\n                        // attempt to decode it so sorting works as expected. Note that\n                        // we could use a single line of jQuery to do this, but the DOM\n                        // method used here is much faster http://jsperf.com/html-decode\n                        if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n                            __filter_div.innerHTML = cellData;\n                            cellData = __filter_div_textContent ?\n                                __filter_div.textContent :\n                                __filter_div.innerText;\n                        }\n\n                        if (cellData.replace) {\n                            cellData = cellData.replace(/[\\r\\n]/g, '');\n                        }\n\n                        filterData.push(cellData);\n                    }\n\n                    row._aFilterData = filterData;\n                    row._sFilterRow = filterData.join('  ');\n                    wasInvalidated = true;\n                }\n            }\n\n            return wasInvalidated;\n        }\n\n\n        /**\n         * Convert from the internal Hungarian notation to camelCase for external\n         * interaction\n         *  @param {object} obj Object to convert\n         *  @returns {object} Inverted object\n         *  @memberof DataTable#oApi\n         */\n        function _fnSearchToCamel(obj) {\n            return {\n                search: obj.sSearch,\n                smart: obj.bSmart,\n                regex: obj.bRegex,\n                caseInsensitive: obj.bCaseInsensitive\n            };\n        }\n\n\n        /**\n         * Convert from camelCase notation to the internal Hungarian. We could use the\n         * Hungarian convert function here, but this is cleaner\n         *  @param {object} obj Object to convert\n         *  @returns {object} Inverted object\n         *  @memberof DataTable#oApi\n         */\n        function _fnSearchToHung(obj) {\n            return {\n                sSearch: obj.search,\n                bSmart: obj.smart,\n                bRegex: obj.regex,\n                bCaseInsensitive: obj.caseInsensitive\n            };\n        }\n\n        /**\n         * Generate the node required for the info display\n         *  @param {object} oSettings dataTables settings object\n         *  @returns {node} Information element\n         *  @memberof DataTable#oApi\n         */\n        function _fnFeatureHtmlInfo(settings) {\n            var\n                tid = settings.sTableId,\n                nodes = settings.aanFeatures.i,\n                n = $('<div/>', {\n                    'class': settings.oClasses.sInfo,\n                    'id': !nodes ? tid + '_info' : null\n                });\n\n            if (!nodes) {\n                // Update display on each draw\n                settings.aoDrawCallback.push({\n                    \"fn\": _fnUpdateInfo,\n                    \"sName\": \"information\"\n                });\n\n                n\n                    .attr('role', 'status')\n                    .attr('aria-live', 'polite');\n\n                // Table is described by our info div\n                $(settings.nTable).attr('aria-describedby', tid + '_info');\n            }\n\n            return n[0];\n        }\n\n\n        /**\n         * Update the information elements in the display\n         *  @param {object} settings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnUpdateInfo(settings) {\n            /* Show information about the table */\n            var nodes = settings.aanFeatures.i;\n            if (nodes.length === 0) {\n                return;\n            }\n\n            var\n                lang = settings.oLanguage,\n                start = settings._iDisplayStart + 1,\n                end = settings.fnDisplayEnd(),\n                max = settings.fnRecordsTotal(),\n                total = settings.fnRecordsDisplay(),\n                out = total ?\n                    lang.sInfo :\n                    lang.sInfoEmpty;\n\n            if (total !== max) {\n                /* Record set after filtering */\n                out += ' ' + lang.sInfoFiltered;\n            }\n\n            // Convert the macros\n            out += lang.sInfoPostFix;\n            out = _fnInfoMacros(settings, out);\n\n            var callback = lang.fnInfoCallback;\n            if (callback !== null) {\n                out = callback.call(settings.oInstance,\n                    settings, start, end, max, total, out\n                );\n            }\n\n            $(nodes).html(out);\n        }\n\n\n        function _fnInfoMacros(settings, str) {\n            // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n            // internally\n            var\n                formatter = settings.fnFormatNumber,\n                start = settings._iDisplayStart + 1,\n                len = settings._iDisplayLength,\n                vis = settings.fnRecordsDisplay(),\n                all = len === -1;\n\n            return str.\n                replace(/_START_/g, formatter.call(settings, start)).\n                replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).\n                replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).\n                replace(/_TOTAL_/g, formatter.call(settings, vis)).\n                replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).\n                replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));\n        }\n\n\n        /**\n         * Draw the table for the first time, adding all required features\n         *  @param {object} settings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnInitialise(settings) {\n            var i, iLen, iAjaxStart = settings.iInitDisplayStart;\n            var columns = settings.aoColumns, column;\n            var features = settings.oFeatures;\n\n            /* Ensure that the table data is fully initialised */\n            if (!settings.bInitialised) {\n                setTimeout(function () {\n                    _fnInitialise(settings);\n                }, 200);\n                return;\n            }\n\n            /* Show the display HTML options */\n            _fnAddOptionsHtml(settings);\n\n            /* Build and draw the header / footer for the table */\n            _fnBuildHead(settings);\n            _fnDrawHead(settings, settings.aoHeader);\n            _fnDrawHead(settings, settings.aoFooter);\n\n            /* Okay to show that something is going on now */\n            _fnProcessingDisplay(settings, true);\n\n            /* Calculate sizes for columns */\n            if (features.bAutoWidth) {\n                _fnCalculateColumnWidths(settings);\n            }\n\n            for (i = 0, iLen = columns.length; i < iLen; i++) {\n                column = columns[i];\n\n                if (column.sWidth) {\n                    column.nTh.style.width = _fnStringToCss(column.sWidth);\n                }\n            }\n\n            // If there is default sorting required - let's do it. The sort function\n            // will do the drawing for us. Otherwise we draw the table regardless of the\n            // Ajax source - this allows the table to look initialised for Ajax sourcing\n            // data (show 'loading' message possibly)\n            _fnReDraw(settings);\n\n            // Server-side processing init complete is done by _fnAjaxUpdateDraw\n            var dataSrc = _fnDataSource(settings);\n            if (dataSrc != 'ssp') {\n                // if there is an ajax source load the data\n                if (dataSrc == 'ajax') {\n                    _fnBuildAjax(settings, [], function (json) {\n                        var aData = _fnAjaxDataSrc(settings, json);\n\n                        // Got the data - add it to the table\n                        for (i = 0; i < aData.length; i++) {\n                            _fnAddData(settings, aData[i]);\n                        }\n\n                        // Reset the init display for cookie saving. We've already done\n                        // a filter, and therefore cleared it before. So we need to make\n                        // it appear 'fresh'\n                        settings.iInitDisplayStart = iAjaxStart;\n\n                        _fnReDraw(settings);\n\n                        _fnProcessingDisplay(settings, false);\n                        _fnInitComplete(settings, json);\n                    }, settings);\n                }\n                else {\n                    _fnProcessingDisplay(settings, false);\n                    _fnInitComplete(settings);\n                }\n            }\n        }\n\n\n        /**\n         * Draw the table for the first time, adding all required features\n         *  @param {object} oSettings dataTables settings object\n         *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n         *    with client-side processing (optional)\n         *  @memberof DataTable#oApi\n         */\n        function _fnInitComplete(settings, json) {\n            settings._bInitComplete = true;\n\n            // On an Ajax load we now have data and therefore want to apply the column\n            // sizing\n            if (json) {\n                _fnAdjustColumnSizing(settings);\n            }\n\n            _fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json]);\n        }\n\n\n        function _fnLengthChange(settings, val) {\n            var len = parseInt(val, 10);\n            settings._iDisplayLength = len;\n\n            _fnLengthOverflow(settings);\n\n            // Fire length change event\n            _fnCallbackFire(settings, null, 'length', [settings, len]);\n        }\n\n\n        /**\n         * Generate the node required for user display length changing\n         *  @param {object} settings dataTables settings object\n         *  @returns {node} Display length feature node\n         *  @memberof DataTable#oApi\n         */\n        function _fnFeatureHtmlLength(settings) {\n            var\n                classes = settings.oClasses,\n                tableId = settings.sTableId,\n                menu = settings.aLengthMenu,\n                d2 = $.isArray(menu[0]),\n                lengths = d2 ? menu[0] : menu,\n                language = d2 ? menu[1] : menu;\n\n            var select = $('<select/>', {\n                'name': tableId + '_length',\n                'aria-controls': tableId,\n                'class': classes.sLengthSelect\n            });\n\n            for (var i = 0, ien = lengths.length; i < ien; i++) {\n                select[0][i] = new Option(language[i], lengths[i]);\n            }\n\n            var div = $('<div><label/></div>').addClass(classes.sLength);\n            if (!settings.aanFeatures.l) {\n                div[0].id = tableId + '_length';\n            }\n\n            div.children().append(\n                settings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML)\n            );\n\n            // Can't use `select` variable as user might provide their own and the\n            // reference is broken by the use of outerHTML\n            $('select', div)\n                .val(settings._iDisplayLength)\n                .bind('change.DT', function (e) {\n                    _fnLengthChange(settings, $(this).val());\n                    _fnDraw(settings);\n                });\n\n            // Update node value whenever anything changes the table's length\n            $(settings.nTable).bind('length.dt.DT', function (e, s, len) {\n                if (settings === s) {\n                    $('select', div).val(len);\n                }\n            });\n\n            return div[0];\n        }\n\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * Note that most of the paging logic is done in\n         * DataTable.ext.pager\n         */\n\n        /**\n         * Generate the node required for default pagination\n         *  @param {object} oSettings dataTables settings object\n         *  @returns {node} Pagination feature node\n         *  @memberof DataTable#oApi\n         */\n        function _fnFeatureHtmlPaginate(settings) {\n            var\n                type = settings.sPaginationType,\n                plugin = DataTable.ext.pager[type],\n                modern = typeof plugin === 'function',\n                redraw = function (settings) {\n                    _fnDraw(settings);\n                },\n                node = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],\n                features = settings.aanFeatures;\n\n            if (!modern) {\n                plugin.fnInit(settings, node, redraw);\n            }\n\n            /* Add a draw callback for the pagination on first instance, to update the paging display */\n            if (!features.p) {\n                node.id = settings.sTableId + '_paginate';\n\n                settings.aoDrawCallback.push({\n                    \"fn\": function (settings) {\n                        if (modern) {\n                            var\n                                start = settings._iDisplayStart,\n                                len = settings._iDisplayLength,\n                                visRecords = settings.fnRecordsDisplay(),\n                                all = len === -1,\n                                page = all ? 0 : Math.ceil(start / len),\n                                pages = all ? 1 : Math.ceil(visRecords / len),\n                                buttons = plugin(page, pages),\n                                i, ien;\n\n                            for (i = 0, ien = features.p.length; i < ien; i++) {\n                                _fnRenderer(settings, 'pageButton')(\n                                    settings, features.p[i], i, buttons, page, pages\n                                );\n                            }\n                        }\n                        else {\n                            plugin.fnUpdate(settings, redraw);\n                        }\n                    },\n                    \"sName\": \"pagination\"\n                });\n            }\n\n            return node;\n        }\n\n\n        /**\n         * Alter the display settings to change the page\n         *  @param {object} settings DataTables settings object\n         *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n         *    \"next\" or \"last\" or page number to jump to (integer)\n         *  @param [bool] redraw Automatically draw the update or not\n         *  @returns {bool} true page has changed, false - no change\n         *  @memberof DataTable#oApi\n         */\n        function _fnPageChange(settings, action, redraw) {\n            var\n                start = settings._iDisplayStart,\n                len = settings._iDisplayLength,\n                records = settings.fnRecordsDisplay();\n\n            if (records === 0 || len === -1) {\n                start = 0;\n            }\n            else if (typeof action === \"number\") {\n                start = action * len;\n\n                if (start > records) {\n                    start = 0;\n                }\n            }\n            else if (action == \"first\") {\n                start = 0;\n            }\n            else if (action == \"previous\") {\n                start = len >= 0 ?\n                start - len :\n                    0;\n\n                if (start < 0) {\n                    start = 0;\n                }\n            }\n            else if (action == \"next\") {\n                if (start + len < records) {\n                    start += len;\n                }\n            }\n            else if (action == \"last\") {\n                start = Math.floor((records - 1) / len) * len;\n            }\n            else {\n                _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n            }\n\n            var changed = settings._iDisplayStart !== start;\n            settings._iDisplayStart = start;\n\n            if (changed) {\n                _fnCallbackFire(settings, null, 'page', [settings]);\n\n                if (redraw) {\n                    _fnDraw(settings);\n                }\n            }\n\n            return changed;\n        }\n\n\n        /**\n         * Generate the node required for the processing node\n         *  @param {object} settings dataTables settings object\n         *  @returns {node} Processing element\n         *  @memberof DataTable#oApi\n         */\n        function _fnFeatureHtmlProcessing(settings) {\n            return $('<div/>', {\n                'id': !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,\n                'class': settings.oClasses.sProcessing\n            })\n                .html(settings.oLanguage.sProcessing)\n                .insertBefore(settings.nTable)[0];\n        }\n\n\n        /**\n         * Display or hide the processing indicator\n         *  @param {object} settings dataTables settings object\n         *  @param {bool} show Show the processing indicator (true) or not (false)\n         *  @memberof DataTable#oApi\n         */\n        function _fnProcessingDisplay(settings, show) {\n            if (settings.oFeatures.bProcessing) {\n                $(settings.aanFeatures.r).css('display', show ? 'block' : 'none');\n            }\n\n            _fnCallbackFire(settings, null, 'processing', [settings, show]);\n        }\n\n        /**\n         * Add any control elements for the table - specifically scrolling\n         *  @param {object} settings dataTables settings object\n         *  @returns {node} Node to add to the DOM\n         *  @memberof DataTable#oApi\n         */\n        function _fnFeatureHtmlTable(settings) {\n            var table = $(settings.nTable);\n\n            // Add the ARIA grid role to the table\n            table.attr('role', 'grid');\n\n            // Scrolling from here on in\n            var scroll = settings.oScroll;\n\n            if (scroll.sX === '' && scroll.sY === '') {\n                return settings.nTable;\n            }\n\n            var scrollX = scroll.sX;\n            var scrollY = scroll.sY;\n            var classes = settings.oClasses;\n            var caption = table.children('caption');\n            var captionSide = caption.length ? caption[0]._captionSide : null;\n            var headerClone = $(table[0].cloneNode(false));\n            var footerClone = $(table[0].cloneNode(false));\n            var footer = table.children('tfoot');\n            var _div = '<div/>';\n            var size = function (s) {\n                return !s ? null : _fnStringToCss(s);\n            };\n\n            // This is fairly messy, but with x scrolling enabled, if the table has a\n            // width attribute, regardless of any width applied using the column width\n            // options, the browser will shrink or grow the table as needed to fit into\n            // that 100%. That would make the width options useless. So we remove it.\n            // This is okay, under the assumption that width:100% is applied to the\n            // table in CSS (it is in the default stylesheet) which will set the table\n            // width as appropriate (the attribute and css behave differently...)\n            if (scroll.sX && table.attr('width') === '100%') {\n                table.removeAttr('width');\n            }\n\n            if (!footer.length) {\n                footer = null;\n            }\n\n            /*\n             * The HTML structure that we want to generate in this function is:\n             *  div - scroller\n             *    div - scroll head\n             *      div - scroll head inner\n             *        table - scroll head table\n             *          thead - thead\n             *    div - scroll body\n             *      table - table (master table)\n             *        thead - thead clone for sizing\n             *        tbody - tbody\n             *    div - scroll foot\n             *      div - scroll foot inner\n             *        table - scroll foot table\n             *          tfoot - tfoot\n             */\n            var scroller = $(_div, {'class': classes.sScrollWrapper})\n                .append(\n                $(_div, {'class': classes.sScrollHead})\n                    .css({\n                        overflow: 'hidden',\n                        position: 'relative',\n                        border: 0,\n                        width: scrollX ? size(scrollX) : '100%'\n                    })\n                    .append(\n                    $(_div, {'class': classes.sScrollHeadInner})\n                        .css({\n                            'box-sizing': 'content-box',\n                            width: scroll.sXInner || '100%'\n                        })\n                        .append(\n                        headerClone\n                            .removeAttr('id')\n                            .css('margin-left', 0)\n                            .append(captionSide === 'top' ? caption : null)\n                            .append(\n                            table.children('thead')\n                        )\n                    )\n                )\n            )\n                .append(\n                $(_div, {'class': classes.sScrollBody})\n                    .css({\n                        overflow: 'auto',\n                        height: size(scrollY),\n                        width: size(scrollX)\n                    })\n                    .append(table)\n            );\n\n            if (footer) {\n                scroller.append(\n                    $(_div, {'class': classes.sScrollFoot})\n                        .css({\n                            overflow: 'hidden',\n                            border: 0,\n                            width: scrollX ? size(scrollX) : '100%'\n                        })\n                        .append(\n                        $(_div, {'class': classes.sScrollFootInner})\n                            .append(\n                            footerClone\n                                .removeAttr('id')\n                                .css('margin-left', 0)\n                                .append(captionSide === 'bottom' ? caption : null)\n                                .append(\n                                table.children('tfoot')\n                            )\n                        )\n                    )\n                );\n            }\n\n            var children = scroller.children();\n            var scrollHead = children[0];\n            var scrollBody = children[1];\n            var scrollFoot = footer ? children[2] : null;\n\n            // When the body is scrolled, then we also want to scroll the headers\n            if (scrollX) {\n                $(scrollBody).scroll(function (e) {\n                    var scrollLeft = this.scrollLeft;\n\n                    scrollHead.scrollLeft = scrollLeft;\n\n                    if (footer) {\n                        scrollFoot.scrollLeft = scrollLeft;\n                    }\n                });\n            }\n\n            settings.nScrollHead = scrollHead;\n            settings.nScrollBody = scrollBody;\n            settings.nScrollFoot = scrollFoot;\n\n            // On redraw - align columns\n            settings.aoDrawCallback.push({\n                \"fn\": _fnScrollDraw,\n                \"sName\": \"scrolling\"\n            });\n\n            return scroller[0];\n        }\n\n\n        /**\n         * Update the header, footer and body tables for resizing - i.e. column\n         * alignment.\n         *\n         * Welcome to the most horrible function DataTables. The process that this\n         * function follows is basically:\n         *   1. Re-create the table inside the scrolling div\n         *   2. Take live measurements from the DOM\n         *   3. Apply the measurements to align the columns\n         *   4. Clean up\n         *\n         *  @param {object} settings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnScrollDraw(settings) {\n            // Given that this is such a monster function, a lot of variables are use\n            // to try and keep the minimised size as small as possible\n            var\n                scroll = settings.oScroll,\n                scrollX = scroll.sX,\n                scrollXInner = scroll.sXInner,\n                scrollY = scroll.sY,\n                barWidth = scroll.iBarWidth,\n                divHeader = $(settings.nScrollHead),\n                divHeaderStyle = divHeader[0].style,\n                divHeaderInner = divHeader.children('div'),\n                divHeaderInnerStyle = divHeaderInner[0].style,\n                divHeaderTable = divHeaderInner.children('table'),\n                divBodyEl = settings.nScrollBody,\n                divBody = $(divBodyEl),\n                divBodyStyle = divBodyEl.style,\n                divFooter = $(settings.nScrollFoot),\n                divFooterInner = divFooter.children('div'),\n                divFooterTable = divFooterInner.children('table'),\n                header = $(settings.nTHead),\n                table = $(settings.nTable),\n                tableEl = table[0],\n                tableStyle = tableEl.style,\n                footer = settings.nTFoot ? $(settings.nTFoot) : null,\n                browser = settings.oBrowser,\n                ie67 = browser.bScrollOversize,\n                headerTrgEls, footerTrgEls,\n                headerSrcEls, footerSrcEls,\n                headerCopy, footerCopy,\n                headerWidths = [], footerWidths = [],\n                headerContent = [],\n                idx, correction, sanityWidth,\n                zeroOut = function (nSizer) {\n                    var style = nSizer.style;\n                    style.paddingTop = \"0\";\n                    style.paddingBottom = \"0\";\n                    style.borderTopWidth = \"0\";\n                    style.borderBottomWidth = \"0\";\n                    style.height = 0;\n                };\n\n            /*\n             * 1. Re-create the table inside the scrolling div\n             */\n\n            // Remove the old minimised thead and tfoot elements in the inner table\n            table.children('thead, tfoot').remove();\n\n            // Clone the current header and footer elements and then place it into the inner table\n            headerCopy = header.clone().prependTo(table);\n            headerTrgEls = header.find('tr'); // original header is in its own table\n            headerSrcEls = headerCopy.find('tr');\n            headerCopy.find('th, td').removeAttr('tabindex');\n\n            if (footer) {\n                footerCopy = footer.clone().prependTo(table);\n                footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n                footerSrcEls = footerCopy.find('tr');\n            }\n\n\n            /*\n             * 2. Take live measurements from the DOM - do not alter the DOM itself!\n             */\n\n            // Remove old sizing and apply the calculated column widths\n            // Get the unique column headers in the newly created (cloned) header. We want to apply the\n            // calculated sizes to this header\n            if (!scrollX) {\n                divBodyStyle.width = '100%';\n                divHeader[0].style.width = '100%';\n            }\n\n            $.each(_fnGetUniqueThs(settings, headerCopy), function (i, el) {\n                idx = _fnVisibleToColumnIndex(settings, i);\n                el.style.width = settings.aoColumns[idx].sWidth;\n            });\n\n            if (footer) {\n                _fnApplyToChildren(function (n) {\n                    n.style.width = \"\";\n                }, footerSrcEls);\n            }\n\n            // If scroll collapse is enabled, when we put the headers back into the body for sizing, we\n            // will end up forcing the scrollbar to appear, making our measurements wrong for when we\n            // then hide it (end of this function), so add the header height to the body scroller.\n            if (scroll.bCollapse && scrollY !== \"\") {\n                divBodyStyle.height = (divBody[0].offsetHeight + header[0].offsetHeight) + \"px\";\n            }\n\n            // Size the table as a whole\n            sanityWidth = table.outerWidth();\n            if (scrollX === \"\") {\n                // No x scrolling\n                tableStyle.width = \"100%\";\n\n                // IE7 will make the width of the table when 100% include the scrollbar\n                // - which is shouldn't. When there is a scrollbar we need to take this\n                // into account.\n                if (ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n                    divBody.css('overflow-y') == \"scroll\")\n                ) {\n                    tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);\n                }\n            }\n            else {\n                // x scrolling\n                if (scrollXInner !== \"\") {\n                    // x scroll inner has been given - use it\n                    tableStyle.width = _fnStringToCss(scrollXInner);\n                }\n                else if (sanityWidth == divBody.width() && divBody.height() < table.height()) {\n                    // There is y-scrolling - try to take account of the y scroll bar\n                    tableStyle.width = _fnStringToCss(sanityWidth - barWidth);\n                    if (table.outerWidth() > sanityWidth - barWidth) {\n                        // Not possible to take account of it\n                        tableStyle.width = _fnStringToCss(sanityWidth);\n                    }\n                }\n                else {\n                    // When all else fails\n                    tableStyle.width = _fnStringToCss(sanityWidth);\n                }\n            }\n\n            // Recalculate the sanity width - now that we've applied the required width,\n            // before it was a temporary variable. This is required because the column\n            // width calculation is done before this table DOM is created.\n            sanityWidth = table.outerWidth();\n\n            // Hidden header should have zero height, so remove padding and borders. Then\n            // set the width based on the real headers\n\n            // Apply all styles in one pass\n            _fnApplyToChildren(zeroOut, headerSrcEls);\n\n            // Read all widths in next pass\n            _fnApplyToChildren(function (nSizer) {\n                headerContent.push(nSizer.innerHTML);\n                headerWidths.push(_fnStringToCss($(nSizer).css('width')));\n            }, headerSrcEls);\n\n            // Apply all widths in final pass\n            _fnApplyToChildren(function (nToSize, i) {\n                nToSize.style.width = headerWidths[i];\n            }, headerTrgEls);\n\n            $(headerSrcEls).height(0);\n\n            /* Same again with the footer if we have one */\n            if (footer) {\n                _fnApplyToChildren(zeroOut, footerSrcEls);\n\n                _fnApplyToChildren(function (nSizer) {\n                    footerWidths.push(_fnStringToCss($(nSizer).css('width')));\n                }, footerSrcEls);\n\n                _fnApplyToChildren(function (nToSize, i) {\n                    nToSize.style.width = footerWidths[i];\n                }, footerTrgEls);\n\n                $(footerSrcEls).height(0);\n            }\n\n\n            /*\n             * 3. Apply the measurements\n             */\n\n            // \"Hide\" the header and footer that we used for the sizing. We need to keep\n            // the content of the cell so that the width applied to the header and body\n            // both match, but we want to hide it completely. We want to also fix their\n            // width to what they currently are\n            _fnApplyToChildren(function (nSizer, i) {\n                nSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">' + headerContent[i] + '</div>';\n                nSizer.style.width = headerWidths[i];\n            }, headerSrcEls);\n\n            if (footer) {\n                _fnApplyToChildren(function (nSizer, i) {\n                    nSizer.innerHTML = \"\";\n                    nSizer.style.width = footerWidths[i];\n                }, footerSrcEls);\n            }\n\n            // Sanity check that the table is of a sensible width. If not then we are going to get\n            // misalignment - try to prevent this by not allowing the table to shrink below its min width\n            if (table.outerWidth() < sanityWidth) {\n                // The min width depends upon if we have a vertical scrollbar visible or not */\n                correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n                divBody.css('overflow-y') == \"scroll\")) ?\n                sanityWidth + barWidth :\n                    sanityWidth;\n\n                // IE6/7 are a law unto themselves...\n                if (ie67 && (divBodyEl.scrollHeight >\n                    divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n                ) {\n                    tableStyle.width = _fnStringToCss(correction - barWidth);\n                }\n\n                // And give the user a warning that we've stopped the table getting too small\n                if (scrollX === \"\" || scrollXInner !== \"\") {\n                    _fnLog(settings, 1, 'Possible column misalignment', 6);\n                }\n            }\n            else {\n                correction = '100%';\n            }\n\n            // Apply to the container elements\n            divBodyStyle.width = _fnStringToCss(correction);\n            divHeaderStyle.width = _fnStringToCss(correction);\n\n            if (footer) {\n                settings.nScrollFoot.style.width = _fnStringToCss(correction);\n            }\n\n\n            /*\n             * 4. Clean up\n             */\n            if (!scrollY) {\n                /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n                 * the scrollbar height from the visible display, rather than adding it on. We need to\n                 * set the height in order to sort this. Don't want to do it in any other browsers.\n                 */\n                if (ie67) {\n                    divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);\n                }\n            }\n\n            if (scrollY && scroll.bCollapse) {\n                divBodyStyle.height = _fnStringToCss(scrollY);\n\n                var iExtra = (scrollX && tableEl.offsetWidth > divBodyEl.offsetWidth) ?\n                    barWidth :\n                    0;\n\n                if (tableEl.offsetHeight < divBodyEl.offsetHeight) {\n                    divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + iExtra);\n                }\n            }\n\n            /* Finally set the width's of the header and footer tables */\n            var iOuterWidth = table.outerWidth();\n            divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);\n            divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth);\n\n            // Figure out if there are scrollbar present - if so then we need a the header and footer to\n            // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n            var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n            var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n            divHeaderInnerStyle[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n\n            if (footer) {\n                divFooterTable[0].style.width = _fnStringToCss(iOuterWidth);\n                divFooterInner[0].style.width = _fnStringToCss(iOuterWidth);\n                divFooterInner[0].style[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n            }\n\n            /* Adjust the position of the header in case we loose the y-scrollbar */\n            divBody.scroll();\n\n            // If sorting or filtering has occurred, jump the scrolling back to the top\n            // only if we aren't holding the position\n            if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n                divBodyEl.scrollTop = 0;\n            }\n        }\n\n\n        /**\n         * Apply a given function to the display child nodes of an element array (typically\n         * TD children of TR rows\n         *  @param {function} fn Method to apply to the objects\n         *  @param array {nodes} an1 List of elements to look through for display children\n         *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n         *  @memberof DataTable#oApi\n         */\n        function _fnApplyToChildren(fn, an1, an2) {\n            var index = 0, i = 0, iLen = an1.length;\n            var nNode1, nNode2;\n\n            while (i < iLen) {\n                nNode1 = an1[i].firstChild;\n                nNode2 = an2 ? an2[i].firstChild : null;\n\n                while (nNode1) {\n                    if (nNode1.nodeType === 1) {\n                        if (an2) {\n                            fn(nNode1, nNode2, index);\n                        }\n                        else {\n                            fn(nNode1, index);\n                        }\n\n                        index++;\n                    }\n\n                    nNode1 = nNode1.nextSibling;\n                    nNode2 = an2 ? nNode2.nextSibling : null;\n                }\n\n                i++;\n            }\n        }\n\n\n        var __re_html_remove = /<.*?>/g;\n\n\n        /**\n         * Calculate the width of columns for the table\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnCalculateColumnWidths(oSettings) {\n            var\n                table = oSettings.nTable,\n                columns = oSettings.aoColumns,\n                scroll = oSettings.oScroll,\n                scrollY = scroll.sY,\n                scrollX = scroll.sX,\n                scrollXInner = scroll.sXInner,\n                columnCount = columns.length,\n                visibleColumns = _fnGetColumns(oSettings, 'bVisible'),\n                headerCells = $('th', oSettings.nTHead),\n                tableWidthAttr = table.getAttribute('width'),\n                tableContainer = table.parentNode,\n                userInputs = false,\n                i, column, columnIdx, width, outerWidth;\n\n            /* Convert any user input sizes into pixel sizes */\n            for (i = 0; i < visibleColumns.length; i++) {\n                column = columns[visibleColumns[i]];\n\n                if (column.sWidth !== null) {\n                    column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);\n\n                    userInputs = true;\n                }\n            }\n\n            /* If the number of columns in the DOM equals the number that we have to\n             * process in DataTables, then we can use the offsets that are created by\n             * the web- browser. No custom sizes can be set in order for this to happen,\n             * nor scrolling used\n             */\n            if (!userInputs && !scrollX && !scrollY &&\n                columnCount == _fnVisbleColumns(oSettings) &&\n                columnCount == headerCells.length\n            ) {\n                for (i = 0; i < columnCount; i++) {\n                    columns[i].sWidth = _fnStringToCss(headerCells.eq(i).width());\n                }\n            }\n            else {\n                // Otherwise construct a single row table with the widest node in the\n                // data, assign any user defined widths, then insert it into the DOM and\n                // allow the browser to do all the hard work of calculating table widths\n                var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n                    .empty()\n                    .css('visibility', 'hidden')\n                    .removeAttr('id')\n                    .append($(oSettings.nTHead).clone(false))\n                    .append($(oSettings.nTFoot).clone(false))\n                    .append($('<tbody><tr/></tbody>'));\n\n                // Remove any assigned widths from the footer (from scrolling)\n                tmpTable.find('tfoot th, tfoot td').css('width', '');\n\n                var tr = tmpTable.find('tbody tr');\n\n                // Apply custom sizing to the cloned header\n                headerCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0]);\n\n                for (i = 0; i < visibleColumns.length; i++) {\n                    column = columns[visibleColumns[i]];\n\n                    headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n                        _fnStringToCss(column.sWidthOrig) :\n                        '';\n                }\n\n                // Find the widest cell for each column and put it into the table\n                if (oSettings.aoData.length) {\n                    for (i = 0; i < visibleColumns.length; i++) {\n                        columnIdx = visibleColumns[i];\n                        column = columns[columnIdx];\n\n                        $(_fnGetWidestNode(oSettings, columnIdx))\n                            .clone(false)\n                            .append(column.sContentPadding)\n                            .appendTo(tr);\n                    }\n                }\n\n                // Table has been built, attach to the document so we can work with it\n                tmpTable.appendTo(tableContainer);\n\n                // When scrolling (X or Y) we want to set the width of the table as \n                // appropriate. However, when not scrolling leave the table width as it\n                // is. This results in slightly different, but I think correct behaviour\n                if (scrollX && scrollXInner) {\n                    tmpTable.width(scrollXInner);\n                }\n                else if (scrollX) {\n                    tmpTable.css('width', 'auto');\n\n                    if (tmpTable.width() < tableContainer.offsetWidth) {\n                        tmpTable.width(tableContainer.offsetWidth);\n                    }\n                }\n                else if (scrollY) {\n                    tmpTable.width(tableContainer.offsetWidth);\n                }\n                else if (tableWidthAttr) {\n                    tmpTable.width(tableWidthAttr);\n                }\n\n                // Take into account the y scrollbar\n                _fnScrollingWidthAdjust(oSettings, tmpTable[0]);\n\n                // Browsers need a bit of a hand when a width is assigned to any columns\n                // when x-scrolling as they tend to collapse the table to the min-width,\n                // even if we sent the column widths. So we need to keep track of what\n                // the table width should be by summing the user given values, and the\n                // automatic values\n                if (scrollX) {\n                    var total = 0;\n\n                    for (i = 0; i < visibleColumns.length; i++) {\n                        column = columns[visibleColumns[i]];\n                        outerWidth = $(headerCells[i]).outerWidth();\n\n                        total += column.sWidthOrig === null ?\n                            outerWidth :\n                        parseInt(column.sWidth, 10) + outerWidth - $(headerCells[i]).width();\n                    }\n\n                    tmpTable.width(_fnStringToCss(total));\n                    table.style.width = _fnStringToCss(total);\n                }\n\n                // Get the width of each column in the constructed table\n                for (i = 0; i < visibleColumns.length; i++) {\n                    column = columns[visibleColumns[i]];\n                    width = $(headerCells[i]).width();\n\n                    if (width) {\n                        column.sWidth = _fnStringToCss(width);\n                    }\n                }\n\n                table.style.width = _fnStringToCss(tmpTable.css('width'));\n\n                // Finished with the table - ditch it\n                tmpTable.remove();\n            }\n\n            // If there is a width attr, we want to attach an event listener which\n            // allows the table sizing to automatically adjust when the window is\n            // resized. Use the width attr rather than CSS, since we can't know if the\n            // CSS is a relative value or absolute - DOM read is always px.\n            if (tableWidthAttr) {\n                table.style.width = _fnStringToCss(tableWidthAttr);\n            }\n\n            if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {\n                $(window).bind('resize.DT-' + oSettings.sInstance, _fnThrottle(function () {\n                    _fnAdjustColumnSizing(oSettings);\n                }));\n\n                oSettings._reszEvt = true;\n            }\n        }\n\n\n        /**\n         * Throttle the calls to a function. Arguments and context are maintained for\n         * the throttled function\n         *  @param {function} fn Function to be called\n         *  @param {int} [freq=200] call frequency in mS\n         *  @returns {function} wrapped function\n         *  @memberof DataTable#oApi\n         */\n        function _fnThrottle(fn, freq) {\n            var\n                frequency = freq !== undefined ? freq : 200,\n                last,\n                timer;\n\n            return function () {\n                var\n                    that = this,\n                    now = +new Date(),\n                    args = arguments;\n\n                if (last && now < last + frequency) {\n                    clearTimeout(timer);\n\n                    timer = setTimeout(function () {\n                        last = undefined;\n                        fn.apply(that, args);\n                    }, frequency);\n                }\n                else if (last) {\n                    last = now;\n                    fn.apply(that, args);\n                }\n                else {\n                    last = now;\n                }\n            };\n        }\n\n\n        /**\n         * Convert a CSS unit width to pixels (e.g. 2em)\n         *  @param {string} width width to be converted\n         *  @param {node} parent parent to get the with for (required for relative widths) - optional\n         *  @returns {int} width in pixels\n         *  @memberof DataTable#oApi\n         */\n        function _fnConvertToWidth(width, parent) {\n            if (!width) {\n                return 0;\n            }\n\n            var n = $('<div/>')\n                .css('width', _fnStringToCss(width))\n                .appendTo(parent || document.body);\n\n            var val = n[0].offsetWidth;\n            n.remove();\n\n            return val;\n        }\n\n\n        /**\n         * Adjust a table's width to take account of vertical scroll bar\n         *  @param {object} oSettings dataTables settings object\n         *  @param {node} n table node\n         *  @memberof DataTable#oApi\n         */\n\n        function _fnScrollingWidthAdjust(settings, n) {\n            var scroll = settings.oScroll;\n\n            if (scroll.sX || scroll.sY) {\n                // When y-scrolling only, we want to remove the width of the scroll bar\n                // so the table + scroll bar will fit into the area available, otherwise\n                // we fix the table at its current size with no adjustment\n                var correction = !scroll.sX ? scroll.iBarWidth : 0;\n                n.style.width = _fnStringToCss($(n).outerWidth() - correction);\n            }\n        }\n\n\n        /**\n         * Get the widest node\n         *  @param {object} settings dataTables settings object\n         *  @param {int} colIdx column of interest\n         *  @returns {node} widest table node\n         *  @memberof DataTable#oApi\n         */\n        function _fnGetWidestNode(settings, colIdx) {\n            var idx = _fnGetMaxLenString(settings, colIdx);\n            if (idx < 0) {\n                return null;\n            }\n\n            var data = settings.aoData[idx];\n            return !data.nTr ? // Might not have been created when deferred rendering\n                $('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0] :\n                data.anCells[colIdx];\n        }\n\n\n        /**\n         * Get the maximum strlen for each data column\n         *  @param {object} settings dataTables settings object\n         *  @param {int} colIdx column of interest\n         *  @returns {string} max string length for each column\n         *  @memberof DataTable#oApi\n         */\n        function _fnGetMaxLenString(settings, colIdx) {\n            var s, max = -1, maxIdx = -1;\n\n            for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n                s = _fnGetCellData(settings, i, colIdx, 'display') + '';\n                s = s.replace(__re_html_remove, '');\n\n                if (s.length > max) {\n                    max = s.length;\n                    maxIdx = i;\n                }\n            }\n\n            return maxIdx;\n        }\n\n\n        /**\n         * Append a CSS unit (only if required) to a string\n         *  @param {string} value to css-ify\n         *  @returns {string} value with css unit\n         *  @memberof DataTable#oApi\n         */\n        function _fnStringToCss(s) {\n            if (s === null) {\n                return '0px';\n            }\n\n            if (typeof s == 'number') {\n                return s < 0 ?\n                    '0px' :\n                s + 'px';\n            }\n\n            // Check it has a unit character already\n            return s.match(/\\d$/) ?\n            s + 'px' :\n                s;\n        }\n\n\n        /**\n         * Get the width of a scroll bar in this browser being used\n         *  @returns {int} width in pixels\n         *  @memberof DataTable#oApi\n         */\n        function _fnScrollBarWidth() {\n            // On first run a static variable is set, since this is only needed once.\n            // Subsequent runs will just use the previously calculated value\n            if (!DataTable.__scrollbarWidth) {\n                var inner = $('<p/>').css({\n                    width: '100%',\n                    height: 200,\n                    padding: 0\n                })[0];\n\n                var outer = $('<div/>')\n                    .css({\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: 200,\n                        height: 150,\n                        padding: 0,\n                        overflow: 'hidden',\n                        visibility: 'hidden'\n                    })\n                    .append(inner)\n                    .appendTo('body');\n\n                var w1 = inner.offsetWidth;\n                outer.css('overflow', 'scroll');\n                var w2 = inner.offsetWidth;\n\n                if (w1 === w2) {\n                    w2 = outer[0].clientWidth;\n                }\n\n                outer.remove();\n\n                DataTable.__scrollbarWidth = w1 - w2;\n            }\n\n            return DataTable.__scrollbarWidth;\n        }\n\n\n        function _fnSortFlatten(settings) {\n            var\n                i, iLen, k, kLen,\n                aSort = [],\n                aiOrig = [],\n                aoColumns = settings.aoColumns,\n                aDataSort, iCol, sType, srcCol,\n                fixed = settings.aaSortingFixed,\n                fixedObj = $.isPlainObject(fixed),\n                nestedSort = [],\n                add = function (a) {\n                    if (a.length && !$.isArray(a[0])) {\n                        // 1D array\n                        nestedSort.push(a);\n                    }\n                    else {\n                        // 2D array\n                        nestedSort.push.apply(nestedSort, a);\n                    }\n                };\n\n            // Build the sort array, with pre-fix and post-fix options if they have been\n            // specified\n            if ($.isArray(fixed)) {\n                add(fixed);\n            }\n\n            if (fixedObj && fixed.pre) {\n                add(fixed.pre);\n            }\n\n            add(settings.aaSorting);\n\n            if (fixedObj && fixed.post) {\n                add(fixed.post);\n            }\n\n            for (i = 0; i < nestedSort.length; i++) {\n                srcCol = nestedSort[i][0];\n                aDataSort = aoColumns[srcCol].aDataSort;\n\n                for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n                    iCol = aDataSort[k];\n                    sType = aoColumns[iCol].sType || 'string';\n\n                    if (nestedSort[i]._idx === undefined) {\n                        nestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting);\n                    }\n\n                    aSort.push({\n                        src: srcCol,\n                        col: iCol,\n                        dir: nestedSort[i][1],\n                        index: nestedSort[i]._idx,\n                        type: sType,\n                        formatter: DataTable.ext.type.order[sType + \"-pre\"]\n                    });\n                }\n            }\n\n            return aSort;\n        }\n\n        /**\n         * Change the order of the table\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         *  @todo This really needs split up!\n         */\n        function _fnSort(oSettings) {\n            var\n                i, ien, iLen, j, jLen, k, kLen,\n                sDataType, nTh,\n                aiOrig = [],\n                oExtSort = DataTable.ext.type.order,\n                aoData = oSettings.aoData,\n                aoColumns = oSettings.aoColumns,\n                aDataSort, data, iCol, sType, oSort,\n                formatters = 0,\n                sortCol,\n                displayMaster = oSettings.aiDisplayMaster,\n                aSort;\n\n            // Resolve any column types that are unknown due to addition or invalidation\n            // @todo Can this be moved into a 'data-ready' handler which is called when\n            //   data is going to be used in the table?\n            _fnColumnTypes(oSettings);\n\n            aSort = _fnSortFlatten(oSettings);\n\n            for (i = 0, ien = aSort.length; i < ien; i++) {\n                sortCol = aSort[i];\n\n                // Track if we can use the fast sort algorithm\n                if (sortCol.formatter) {\n                    formatters++;\n                }\n\n                // Load the data needed for the sort, for each cell\n                _fnSortData(oSettings, sortCol.col);\n            }\n\n            /* No sorting required if server-side or no sorting array */\n            if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n                // Create a value - key array of the current row positions such that we can use their\n                // current position during the sort, if values match, in order to perform stable sorting\n                for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n                    aiOrig[displayMaster[i]] = i;\n                }\n\n                /* Do the sort - here we want multi-column sorting based on a given data source (column)\n                 * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n                 * follow on it's own, but this is what we want (example two column sorting):\n                 *  fnLocalSorting = function(a,b){\n                 *    var iTest;\n                 *    iTest = oSort['string-asc']('data11', 'data12');\n                 *      if (iTest !== 0)\n                 *        return iTest;\n                 *    iTest = oSort['numeric-desc']('data21', 'data22');\n                 *    if (iTest !== 0)\n                 *      return iTest;\n                 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n                 *  }\n                 * Basically we have a test for each sorting column, if the data in that column is equal,\n                 * test the next column. If all columns match, then we use a numeric sort on the row\n                 * positions in the original data array to provide a stable sort.\n                 *\n                 * Note - I know it seems excessive to have two sorting methods, but the first is around\n                 * 15% faster, so the second is only maintained for backwards compatibility with sorting\n                 * methods which do not have a pre-sort formatting function.\n                 */\n                if (formatters === aSort.length) {\n                    // All sort types have formatting functions\n                    displayMaster.sort(function (a, b) {\n                        var\n                            x, y, k, test, sort,\n                            len = aSort.length,\n                            dataA = aoData[a]._aSortData,\n                            dataB = aoData[b]._aSortData;\n\n                        for (k = 0; k < len; k++) {\n                            sort = aSort[k];\n\n                            x = dataA[sort.col];\n                            y = dataB[sort.col];\n\n                            test = x < y ? -1 : x > y ? 1 : 0;\n                            if (test !== 0) {\n                                return sort.dir === 'asc' ? test : -test;\n                            }\n                        }\n\n                        x = aiOrig[a];\n                        y = aiOrig[b];\n                        return x < y ? -1 : x > y ? 1 : 0;\n                    });\n                }\n                else {\n                    // Depreciated - remove in 1.11 (providing a plug-in option)\n                    // Not all sort types have formatting methods, so we have to call their sorting\n                    // methods.\n                    displayMaster.sort(function (a, b) {\n                        var\n                            x, y, k, l, test, sort, fn,\n                            len = aSort.length,\n                            dataA = aoData[a]._aSortData,\n                            dataB = aoData[b]._aSortData;\n\n                        for (k = 0; k < len; k++) {\n                            sort = aSort[k];\n\n                            x = dataA[sort.col];\n                            y = dataB[sort.col];\n\n                            fn = oExtSort[sort.type + \"-\" + sort.dir] || oExtSort[\"string-\" + sort.dir];\n                            test = fn(x, y);\n                            if (test !== 0) {\n                                return test;\n                            }\n                        }\n\n                        x = aiOrig[a];\n                        y = aiOrig[b];\n                        return x < y ? -1 : x > y ? 1 : 0;\n                    });\n                }\n            }\n\n            /* Tell the draw function that we have sorted the data */\n            oSettings.bSorted = true;\n        }\n\n\n        function _fnSortAria(settings) {\n            var label;\n            var nextSort;\n            var columns = settings.aoColumns;\n            var aSort = _fnSortFlatten(settings);\n            var oAria = settings.oLanguage.oAria;\n\n            // ARIA attributes - need to loop all columns, to update all (removing old\n            // attributes as needed)\n            for (var i = 0, iLen = columns.length; i < iLen; i++) {\n                var col = columns[i];\n                var asSorting = col.asSorting;\n                var sTitle = col.sTitle.replace(/<.*?>/g, \"\");\n                var th = col.nTh;\n\n                // IE7 is throwing an error when setting these properties with jQuery's\n                // attr() and removeAttr() methods...\n                th.removeAttribute('aria-sort');\n\n                /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n                if (col.bSortable) {\n                    if (aSort.length > 0 && aSort[0].col == i) {\n                        th.setAttribute('aria-sort', aSort[0].dir == \"asc\" ? \"ascending\" : \"descending\");\n                        nextSort = asSorting[aSort[0].index + 1] || asSorting[0];\n                    }\n                    else {\n                        nextSort = asSorting[0];\n                    }\n\n                    label = sTitle + ( nextSort === \"asc\" ?\n                                oAria.sSortAscending :\n                                oAria.sSortDescending\n                        );\n                }\n                else {\n                    label = sTitle;\n                }\n\n                th.setAttribute('aria-label', label);\n            }\n        }\n\n\n        /**\n         * Function to run on user sort request\n         *  @param {object} settings dataTables settings object\n         *  @param {node} attachTo node to attach the handler to\n         *  @param {int} colIdx column sorting index\n         *  @param {boolean} [append=false] Append the requested sort to the existing\n         *    sort if true (i.e. multi-column sort)\n         *  @param {function} [callback] callback function\n         *  @memberof DataTable#oApi\n         */\n        function _fnSortListener(settings, colIdx, append, callback) {\n            var col = settings.aoColumns[colIdx];\n            var sorting = settings.aaSorting;\n            var asSorting = col.asSorting;\n            var nextSortIdx;\n            var next = function (a, overflow) {\n                var idx = a._idx;\n                if (idx === undefined) {\n                    idx = $.inArray(a[1], asSorting);\n                }\n\n                return idx + 1 < asSorting.length ?\n                idx + 1 :\n                    overflow ?\n                        null :\n                        0;\n            };\n\n            // Convert to 2D array if needed\n            if (typeof sorting[0] === 'number') {\n                sorting = settings.aaSorting = [sorting];\n            }\n\n            // If appending the sort then we are multi-column sorting\n            if (append && settings.oFeatures.bSortMulti) {\n                // Are we already doing some kind of sort on this column?\n                var sortIdx = $.inArray(colIdx, _pluck(sorting, '0'));\n\n                if (sortIdx !== -1) {\n                    // Yes, modify the sort\n                    nextSortIdx = next(sorting[sortIdx], true);\n\n                    if (nextSortIdx === null) {\n                        sorting.splice(sortIdx, 1);\n                    }\n                    else {\n                        sorting[sortIdx][1] = asSorting[nextSortIdx];\n                        sorting[sortIdx]._idx = nextSortIdx;\n                    }\n                }\n                else {\n                    // No sort on this column yet\n                    sorting.push([colIdx, asSorting[0], 0]);\n                    sorting[sorting.length - 1]._idx = 0;\n                }\n            }\n            else if (sorting.length && sorting[0][0] == colIdx) {\n                // Single column - already sorting on this column, modify the sort\n                nextSortIdx = next(sorting[0]);\n\n                sorting.length = 1;\n                sorting[0][1] = asSorting[nextSortIdx];\n                sorting[0]._idx = nextSortIdx;\n            }\n            else {\n                // Single column - sort only on this column\n                sorting.length = 0;\n                sorting.push([colIdx, asSorting[0]]);\n                sorting[0]._idx = 0;\n            }\n\n            // Run the sort by calling a full redraw\n            _fnReDraw(settings);\n\n            // callback used for async user interaction\n            if (typeof callback == 'function') {\n                callback(settings);\n            }\n        }\n\n\n        /**\n         * Attach a sort handler (click) to a node\n         *  @param {object} settings dataTables settings object\n         *  @param {node} attachTo node to attach the handler to\n         *  @param {int} colIdx column sorting index\n         *  @param {function} [callback] callback function\n         *  @memberof DataTable#oApi\n         */\n        function _fnSortAttachListener(settings, attachTo, colIdx, callback) {\n            var col = settings.aoColumns[colIdx];\n\n            _fnBindAction(attachTo, {}, function (e) {\n                /* If the column is not sortable - don't to anything */\n                if (col.bSortable === false) {\n                    return;\n                }\n\n                // If processing is enabled use a timeout to allow the processing\n                // display to be shown - otherwise to it synchronously\n                if (settings.oFeatures.bProcessing) {\n                    _fnProcessingDisplay(settings, true);\n\n                    setTimeout(function () {\n                        _fnSortListener(settings, colIdx, e.shiftKey, callback);\n\n                        // In server-side processing, the draw callback will remove the\n                        // processing display\n                        if (_fnDataSource(settings) !== 'ssp') {\n                            _fnProcessingDisplay(settings, false);\n                        }\n                    }, 0);\n                }\n                else {\n                    _fnSortListener(settings, colIdx, e.shiftKey, callback);\n                }\n            });\n        }\n\n\n        /**\n         * Set the sorting classes on table's body, Note: it is safe to call this function\n         * when bSort and bSortClasses are false\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnSortingClasses(settings) {\n            var oldSort = settings.aLastSort;\n            var sortClass = settings.oClasses.sSortColumn;\n            var sort = _fnSortFlatten(settings);\n            var features = settings.oFeatures;\n            var i, ien, colIdx;\n\n            if (features.bSort && features.bSortClasses) {\n                // Remove old sorting classes\n                for (i = 0, ien = oldSort.length; i < ien; i++) {\n                    colIdx = oldSort[i].src;\n\n                    // Remove column sorting\n                    $(_pluck(settings.aoData, 'anCells', colIdx))\n                        .removeClass(sortClass + (i < 2 ? i + 1 : 3));\n                }\n\n                // Add new column sorting\n                for (i = 0, ien = sort.length; i < ien; i++) {\n                    colIdx = sort[i].src;\n\n                    $(_pluck(settings.aoData, 'anCells', colIdx))\n                        .addClass(sortClass + (i < 2 ? i + 1 : 3));\n                }\n            }\n\n            settings.aLastSort = sort;\n        }\n\n\n        // Get the data to sort a column, be it from cache, fresh (populating the\n        // cache), or from a sort formatter\n        function _fnSortData(settings, idx) {\n            // Custom sorting function - provided by the sort data type\n            var column = settings.aoColumns[idx];\n            var customSort = DataTable.ext.order[column.sSortDataType];\n            var customData;\n\n            if (customSort) {\n                customData = customSort.call(settings.oInstance, settings, idx,\n                    _fnColumnIndexToVisible(settings, idx)\n                );\n            }\n\n            // Use / populate cache\n            var row, cellData;\n            var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n\n            for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n                row = settings.aoData[i];\n\n                if (!row._aSortData) {\n                    row._aSortData = [];\n                }\n\n                if (!row._aSortData[idx] || customSort) {\n                    cellData = customSort ?\n                        customData[i] : // If there was a custom sort function, use data from there\n                        _fnGetCellData(settings, i, idx, 'sort');\n\n                    row._aSortData[idx] = formatter ?\n                        formatter(cellData) :\n                        cellData;\n                }\n            }\n        }\n\n\n        /**\n         * Save the state of a table\n         *  @param {object} oSettings dataTables settings object\n         *  @memberof DataTable#oApi\n         */\n        function _fnSaveState(settings) {\n            if (!settings.oFeatures.bStateSave || settings.bDestroying) {\n                return;\n            }\n\n            /* Store the interesting variables */\n            var state = {\n                time: +new Date(),\n                start: settings._iDisplayStart,\n                length: settings._iDisplayLength,\n                order: $.extend(true, [], settings.aaSorting),\n                search: _fnSearchToCamel(settings.oPreviousSearch),\n                columns: $.map(settings.aoColumns, function (col, i) {\n                    return {\n                        visible: col.bVisible,\n                        search: _fnSearchToCamel(settings.aoPreSearchCols[i])\n                    };\n                })\n            };\n\n            _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n\n            settings.oSavedState = state;\n            settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n        }\n\n\n        /**\n         * Attempt to load a saved table state\n         *  @param {object} oSettings dataTables settings object\n         *  @param {object} oInit DataTables init object so we can override settings\n         *  @memberof DataTable#oApi\n         */\n        function _fnLoadState(settings, oInit) {\n            var i, ien;\n            var columns = settings.aoColumns;\n\n            if (!settings.oFeatures.bStateSave) {\n                return;\n            }\n\n            var state = settings.fnStateLoadCallback.call(settings.oInstance, settings);\n            if (!state || !state.time) {\n                return;\n            }\n\n            /* Allow custom and plug-in manipulation functions to alter the saved data set and\n             * cancelling of loading by returning false\n             */\n            var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state]);\n            if ($.inArray(false, abStateLoad) !== -1) {\n                return;\n            }\n\n            /* Reject old data */\n            var duration = settings.iStateDuration;\n            if (duration > 0 && state.time < +new Date() - (duration * 1000)) {\n                return;\n            }\n\n            // Number of columns have changed - all bets are off, no restore of settings\n            if (columns.length !== state.columns.length) {\n                return;\n            }\n\n            // Store the saved state so it might be accessed at any time\n            settings.oLoadedState = $.extend(true, {}, state);\n\n            // Restore key features - todo - for 1.11 this needs to be done by\n            // subscribed events\n            settings._iDisplayStart = state.start;\n            settings.iInitDisplayStart = state.start;\n            settings._iDisplayLength = state.length;\n            settings.aaSorting = [];\n\n            // Order\n            $.each(state.order, function (i, col) {\n                settings.aaSorting.push(col[0] >= columns.length ?\n                        [0, col[1]] :\n                        col\n                );\n            });\n\n            // Search\n            $.extend(settings.oPreviousSearch, _fnSearchToHung(state.search));\n\n            // Columns\n            for (i = 0, ien = state.columns.length; i < ien; i++) {\n                var col = state.columns[i];\n\n                // Visibility\n                columns[i].bVisible = col.visible;\n\n                // Search\n                $.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search));\n            }\n\n            _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, state]);\n        }\n\n\n        /**\n         * Return the settings object for a particular table\n         *  @param {node} table table we are using as a dataTable\n         *  @returns {object} Settings object - or null if not found\n         *  @memberof DataTable#oApi\n         */\n        function _fnSettingsFromNode(table) {\n            var settings = DataTable.settings;\n            var idx = $.inArray(table, _pluck(settings, 'nTable'));\n\n            return idx !== -1 ?\n                settings[idx] :\n                null;\n        }\n\n\n        /**\n         * Log an error message\n         *  @param {object} settings dataTables settings object\n         *  @param {int} level log error messages, or display them to the user\n         *  @param {string} msg error message\n         *  @param {int} tn Technical note id to get more information about the error.\n         *  @memberof DataTable#oApi\n         */\n        function _fnLog(settings, level, msg, tn) {\n            msg = 'DataTables warning: ' +\n                (settings !== null ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n\n            if (tn) {\n                msg += '. For more information about this error, please see ' +\n                    'http://datatables.net/tn/' + tn;\n            }\n\n            if (!level) {\n                // Backwards compatibility pre 1.10\n                var ext = DataTable.ext;\n                var type = ext.sErrMode || ext.errMode;\n\n                if (type == 'alert') {\n                    alert(msg);\n                }\n                else {\n                    throw new Error(msg);\n                }\n            }\n            else if (window.console && console.log) {\n                console.log(msg);\n            }\n        }\n\n\n        /**\n         * See if a property is defined on one object, if so assign it to the other object\n         *  @param {object} ret target object\n         *  @param {object} src source object\n         *  @param {string} name property\n         *  @param {string} [mappedName] name to map too - optional, name used if not given\n         *  @memberof DataTable#oApi\n         */\n        function _fnMap(ret, src, name, mappedName) {\n            if ($.isArray(name)) {\n                $.each(name, function (i, val) {\n                    if ($.isArray(val)) {\n                        _fnMap(ret, src, val[0], val[1]);\n                    }\n                    else {\n                        _fnMap(ret, src, val);\n                    }\n                });\n\n                return;\n            }\n\n            if (mappedName === undefined) {\n                mappedName = name;\n            }\n\n            if (src[name] !== undefined) {\n                ret[mappedName] = src[name];\n            }\n        }\n\n\n        /**\n         * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n         * shallow copy arrays. The reason we need to do this, is that we don't want to\n         * deep copy array init values (such as aaSorting) since the dev wouldn't be\n         * able to override them, but we do want to deep copy arrays.\n         *  @param {object} out Object to extend\n         *  @param {object} extender Object from which the properties will be applied to\n         *      out\n         *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n         *      independent copy with the exception of the `data` or `aaData` parameters\n         *      if they are present. This is so you can pass in a collection to\n         *      DataTables and have that used as your data source without breaking the\n         *      references\n         *  @returns {object} out Reference, just for convenience - out === the return.\n         *  @memberof DataTable#oApi\n         *  @todo This doesn't take account of arrays inside the deep copied objects.\n         */\n        function _fnExtend(out, extender, breakRefs) {\n            var val;\n\n            for (var prop in extender) {\n                if (extender.hasOwnProperty(prop)) {\n                    val = extender[prop];\n\n                    if ($.isPlainObject(val)) {\n                        if (!$.isPlainObject(out[prop])) {\n                            out[prop] = {};\n                        }\n                        $.extend(true, out[prop], val);\n                    }\n                    else if (breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val)) {\n                        out[prop] = val.slice();\n                    }\n                    else {\n                        out[prop] = val;\n                    }\n                }\n            }\n\n            return out;\n        }\n\n\n        /**\n         * Bind an event handers to allow a click or return key to activate the callback.\n         * This is good for accessibility since a return on the keyboard will have the\n         * same effect as a click, if the element has focus.\n         *  @param {element} n Element to bind the action to\n         *  @param {object} oData Data object to pass to the triggered function\n         *  @param {function} fn Callback function for when the event is triggered\n         *  @memberof DataTable#oApi\n         */\n        function _fnBindAction(n, oData, fn) {\n            $(n)\n                .bind('click.DT', oData, function (e) {\n                    n.blur(); // Remove focus outline for mouse users\n                    fn(e);\n                })\n                .bind('keypress.DT', oData, function (e) {\n                    if (e.which === 13) {\n                        e.preventDefault();\n                        fn(e);\n                    }\n                })\n                .bind('selectstart.DT', function () {\n                    /* Take the brutal approach to cancelling text selection */\n                    return false;\n                });\n        }\n\n\n        /**\n         * Register a callback function. Easily allows a callback function to be added to\n         * an array store of callback functions that can then all be called together.\n         *  @param {object} oSettings dataTables settings object\n         *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n         *  @param {function} fn Function to be called back\n         *  @param {string} sName Identifying name for the callback (i.e. a label)\n         *  @memberof DataTable#oApi\n         */\n        function _fnCallbackReg(oSettings, sStore, fn, sName) {\n            if (fn) {\n                oSettings[sStore].push({\n                    \"fn\": fn,\n                    \"sName\": sName\n                });\n            }\n        }\n\n\n        /**\n         * Fire callback functions and trigger events. Note that the loop over the\n         * callback array store is done backwards! Further note that you do not want to\n         * fire off triggers in time sensitive applications (for example cell creation)\n         * as its slow.\n         *  @param {object} settings dataTables settings object\n         *  @param {string} callbackArr Name of the array storage for the callbacks in\n         *      oSettings\n         *  @param {string} event Name of the jQuery custom event to trigger. If null no\n         *      trigger is fired\n         *  @param {array} args Array of arguments to pass to the callback function /\n         *      trigger\n         *  @memberof DataTable#oApi\n         */\n        function _fnCallbackFire(settings, callbackArr, e, args) {\n            var ret = [];\n\n            if (callbackArr) {\n                ret = $.map(settings[callbackArr].slice().reverse(), function (val, i) {\n                    return val.fn.apply(settings.oInstance, args);\n                });\n            }\n\n            if (e !== null) {\n                $(settings.nTable).trigger(e + '.dt', args);\n            }\n\n            return ret;\n        }\n\n\n        function _fnLengthOverflow(settings) {\n            var\n                start = settings._iDisplayStart,\n                end = settings.fnDisplayEnd(),\n                len = settings._iDisplayLength;\n\n            /* If we have space to show extra rows (backing up from the end point - then do so */\n            if (start >= end) {\n                start = end - len;\n            }\n\n            // Keep the start record on the current page\n            start -= (start % len);\n\n            if (len === -1 || start < 0) {\n                start = 0;\n            }\n\n            settings._iDisplayStart = start;\n        }\n\n\n        function _fnRenderer(settings, type) {\n            var renderer = settings.renderer;\n            var host = DataTable.ext.renderer[type];\n\n            if ($.isPlainObject(renderer) && renderer[type]) {\n                // Specific renderer for this type. If available use it, otherwise use\n                // the default.\n                return host[renderer[type]] || host._;\n            }\n            else if (typeof renderer === 'string') {\n                // Common renderer - if there is one available for this type use it,\n                // otherwise use the default\n                return host[renderer] || host._;\n            }\n\n            // Use the default\n            return host._;\n        }\n\n\n        /**\n         * Detect the data source being used for the table. Used to simplify the code\n         * a little (ajax) and to make it compress a little smaller.\n         *\n         *  @param {object} settings dataTables settings object\n         *  @returns {string} Data source\n         *  @memberof DataTable#oApi\n         */\n        function _fnDataSource(settings) {\n            if (settings.oFeatures.bServerSide) {\n                return 'ssp';\n            }\n            else if (settings.ajax || settings.sAjaxSource) {\n                return 'ajax';\n            }\n            return 'dom';\n        }\n\n\n        DataTable = function (options) {\n            /**\n             * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n             * return the resulting jQuery object.\n             *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n             *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n             *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n             *    criterion (\"applied\") or all TR elements (i.e. no filter).\n             *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n             *    Can be either 'current', whereby the current sorting of the table is used, or\n             *    'original' whereby the original order the data was read into the table is used.\n             *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n             *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n             *    'current' and filter is 'applied', regardless of what they might be given as.\n             *  @returns {object} jQuery object, filtered by the given selector.\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n             */\n            this.$ = function (sSelector, oOpts) {\n                return this.api(true).$(sSelector, oOpts);\n            };\n\n\n            /**\n             * Almost identical to $ in operation, but in this case returns the data for the matched\n             * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n             * rather than any descendants, so the data can be obtained for the row/cell. If matching\n             * rows are found, the data returned is the original data array/object that was used to\n             * create the row (or a generated array if from a DOM source).\n             *\n             * This method is often useful in-combination with $ where both functions are given the\n             * same parameters and the array indexes will match identically.\n             *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n             *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n             *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n             *    criterion (\"applied\") or all elements (i.e. no filter).\n             *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n             *    Can be either 'current', whereby the current sorting of the table is used, or\n             *    'original' whereby the original order the data was read into the table is used.\n             *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n             *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n             *    'current' and filter is 'applied', regardless of what they might be given as.\n             *  @returns {array} Data for the matched elements. If any elements, as a result of the\n             *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n             *    entry in the array.\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n             */\n            this._ = function (sSelector, oOpts) {\n                return this.api(true).rows(sSelector, oOpts).data();\n            };\n\n\n            /**\n             * Create a DataTables Api instance, with the currently selected tables for\n             * the Api's context.\n             * @param {boolean} [traditional=false] Set the API instance's context to be\n             *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n             *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n             *   or if all tables captured in the jQuery object should be used.\n             * @return {DataTables.Api}\n             */\n            this.api = function (traditional) {\n                return traditional ?\n                    new _Api(\n                        _fnSettingsFromNode(this[_ext.iApiIndex])\n                    ) :\n                    new _Api(this);\n            };\n\n\n            /**\n             * Add a single new row or multiple rows of data to the table. Please note\n             * that this is suitable for client-side processing only - if you are using\n             * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n             * must add it to the data source, i.e. the server-side, through an Ajax call.\n             *  @param {array|object} data The data to be added to the table. This can be:\n             *    <ul>\n             *      <li>1D array of data - add a single row with the data provided</li>\n             *      <li>2D array of arrays - add multiple rows in a single call</li>\n             *      <li>object - data object when using <i>mData</i></li>\n             *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n             *    </ul>\n             *  @param {bool} [redraw=true] redraw the table or not\n             *  @returns {array} An array of integers, representing the list of indexes in\n             *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n             *    the table.\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    // Global var for counter\n             *    var giCount = 2;\n             *\n             *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n             *\n             *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n             */\n            this.fnAddData = function (data, redraw) {\n                var api = this.api(true);\n\n                /* Check if we want to add multiple rows or not */\n                var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n                    api.rows.add(data) :\n                    api.row.add(data);\n\n                if (redraw === undefined || redraw) {\n                    api.draw();\n                }\n\n                return rows.flatten().toArray();\n            };\n\n\n            /**\n             * This function will make DataTables recalculate the column sizes, based on the data\n             * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n             * through the sWidth parameter). This can be useful when the width of the table's\n             * parent element changes (for example a window resize).\n             *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).bind('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n             */\n            this.fnAdjustColumnSizing = function (bRedraw) {\n                var api = this.api(true).columns.adjust();\n                var settings = api.settings()[0];\n                var scroll = settings.oScroll;\n\n                if (bRedraw === undefined || bRedraw) {\n                    api.draw(false);\n                }\n                else if (scroll.sX !== \"\" || scroll.sY !== \"\") {\n                    /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n                    _fnScrollDraw(settings);\n                }\n            };\n\n\n            /**\n             * Quickly and simply clear a table\n             *  @param {bool} [bRedraw=true] redraw the table or not\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n             */\n            this.fnClearTable = function (bRedraw) {\n                var api = this.api(true).clear();\n\n                if (bRedraw === undefined || bRedraw) {\n                    api.draw();\n                }\n            };\n\n\n            /**\n             * The exact opposite of 'opening' a row, this function will close any rows which\n             * are currently 'open'.\n             *  @param {node} nTr the table row to 'close'\n             *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n             */\n            this.fnClose = function (nTr) {\n                this.api(true).row(nTr).child.hide();\n            };\n\n\n            /**\n             * Remove a row for the table\n             *  @param {mixed} target The index of the row from aoData to be deleted, or\n             *    the TR element you want to delete\n             *  @param {function|null} [callBack] Callback function\n             *  @param {bool} [redraw=true] Redraw the table or not\n             *  @returns {array} The row that was deleted\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n             */\n            this.fnDeleteRow = function (target, callback, redraw) {\n                var api = this.api(true);\n                var rows = api.rows(target);\n                var settings = rows.settings()[0];\n                var data = settings.aoData[rows[0][0]];\n\n                rows.remove();\n\n                if (callback) {\n                    callback.call(this, settings, data);\n                }\n\n                if (redraw === undefined || redraw) {\n                    api.draw();\n                }\n\n                return data;\n            };\n\n\n            /**\n             * Restore the table to it's original state in the DOM by removing all of DataTables\n             * enhancements, alterations to the DOM structure of the table and event listeners.\n             *  @param {boolean} [remove=false] Completely remove the table from the DOM\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n             */\n            this.fnDestroy = function (remove) {\n                this.api(true).destroy(remove);\n            };\n\n\n            /**\n             * Redraw the table\n             *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n             */\n            this.fnDraw = function (complete) {\n                // Note that this isn't an exact match to the old call to _fnDraw - it takes\n                // into account the new data, but can old position.\n                this.api(true).draw(!complete);\n            };\n\n\n            /**\n             * Filter the input based on data\n             *  @param {string} sInput String to filter the table on\n             *  @param {int|null} [iColumn] Column to limit filtering to\n             *  @param {bool} [bRegex=false] Treat as regular expression or not\n             *  @param {bool} [bSmart=true] Perform smart filtering or not\n             *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n             *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n             */\n            this.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive) {\n                var api = this.api(true);\n\n                if (iColumn === null || iColumn === undefined) {\n                    api.search(sInput, bRegex, bSmart, bCaseInsensitive);\n                }\n                else {\n                    api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);\n                }\n\n                api.draw();\n            };\n\n\n            /**\n             * Get the data for the whole table, an individual row or an individual cell based on the\n             * provided parameters.\n             *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n             *    a TR node then the data source for the whole row will be returned. If given as a\n             *    TD/TH cell node then iCol will be automatically calculated and the data for the\n             *    cell returned. If given as an integer, then this is treated as the aoData internal\n             *    data index for the row (see fnGetPosition) and the data for that row used.\n             *  @param {int} [col] Optional column index that you want the data of.\n             *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n             *    returned. If mRow is defined, just data for that row, and is iCol is\n             *    defined, only data for the designated cell is returned.\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    // Row data\n             *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Individual cell data\n             *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n             */\n            this.fnGetData = function (src, col) {\n                var api = this.api(true);\n\n                if (src !== undefined) {\n                    var type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\n                    return col !== undefined || type == 'td' || type == 'th' ?\n                        api.cell(src, col).data() :\n                    api.row(src).data() || null;\n                }\n\n                return api.data().toArray();\n            };\n\n\n            /**\n             * Get an array of the TR nodes that are used in the table's body. Note that you will\n             * typically want to use the '$' API method in preference to this as it is more\n             * flexible.\n             *  @param {int} [iRow] Optional row index for the TR element you want\n             *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n             *    in the table's body, or iRow is defined, just the TR element requested.\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n             */\n            this.fnGetNodes = function (iRow) {\n                var api = this.api(true);\n\n                return iRow !== undefined ?\n                    api.row(iRow).node() :\n                    api.rows().nodes().flatten().toArray();\n            };\n\n\n            /**\n             * Get the array indexes of a particular cell from it's DOM element\n             * and column index including hidden columns\n             *  @param {node} node this can either be a TR, TD or TH in the table's body\n             *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n             *    if given as a cell, an array of [row index, column index (visible),\n             *    column index (all)] is given.\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n             */\n            this.fnGetPosition = function (node) {\n                var api = this.api(true);\n                var nodeName = node.nodeName.toUpperCase();\n\n                if (nodeName == 'TR') {\n                    return api.row(node).index();\n                }\n                else if (nodeName == 'TD' || nodeName == 'TH') {\n                    var cell = api.cell(node).index();\n\n                    return [\n                        cell.row,\n                        cell.columnVisible,\n                        cell.column\n                    ];\n                }\n                return null;\n            };\n\n\n            /**\n             * Check to see if a row is 'open' or not.\n             *  @param {node} nTr the table row to check\n             *  @returns {boolean} true if the row is currently open, false otherwise\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n             */\n            this.fnIsOpen = function (nTr) {\n                return this.api(true).row(nTr).child.isShown();\n            };\n\n\n            /**\n             * This function will place a new row directly after a row which is currently\n             * on display on the page, with the HTML contents that is passed into the\n             * function. This can be used, for example, to ask for confirmation that a\n             * particular record should be deleted.\n             *  @param {node} nTr The table row to 'open'\n             *  @param {string|node|jQuery} mHtml The HTML to put into the row\n             *  @param {string} sClass Class to give the new TD cell\n             *  @returns {node} The row opened. Note that if the table row passed in as the\n             *    first parameter, is not found in the table, this method will silently\n             *    return.\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n             */\n            this.fnOpen = function (nTr, mHtml, sClass) {\n                return this.api(true)\n                    .row(nTr)\n                    .child(mHtml, sClass)\n                    .show()\n                    .child()[0];\n            };\n\n\n            /**\n             * Change the pagination - provides the internal logic for pagination in a simple API\n             * function. With this function you can have a DataTables table go to the next,\n             * previous, first or last pages.\n             *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n             *    or page number to jump to (integer), note that page 0 is the first page.\n             *  @param {bool} [bRedraw=true] Redraw the table or not\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n             */\n            this.fnPageChange = function (mAction, bRedraw) {\n                var api = this.api(true).page(mAction);\n\n                if (bRedraw === undefined || bRedraw) {\n                    api.draw(false);\n                }\n            };\n\n\n            /**\n             * Show a particular column\n             *  @param {int} iCol The column whose display should be changed\n             *  @param {bool} bShow Show (true) or hide (false) the column\n             *  @param {bool} [bRedraw=true] Redraw the table or not\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n             */\n            this.fnSetColumnVis = function (iCol, bShow, bRedraw) {\n                var api = this.api(true).column(iCol).visible(bShow);\n\n                if (bRedraw === undefined || bRedraw) {\n                    api.columns.adjust().draw();\n                }\n            };\n\n\n            /**\n             * Get the settings for a particular table for external manipulation\n             *  @returns {object} DataTables settings object. See\n             *    {@link DataTable.models.oSettings}\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n             */\n            this.fnSettings = function () {\n                return _fnSettingsFromNode(this[_ext.iApiIndex]);\n            };\n\n\n            /**\n             * Sort the table by a particular column\n             *  @param {int} iCol the data index to sort on. Note that this will not match the\n             *    'display index' if you have hidden data entries\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n             */\n            this.fnSort = function (aaSort) {\n                this.api(true).order(aaSort).draw();\n            };\n\n\n            /**\n             * Attach a sort listener to an element for a given column\n             *  @param {node} nNode the element to attach the sort listener to\n             *  @param {int} iColumn the column that a click on this node will sort on\n             *  @param {function} [fnCallback] callback function when sort is run\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n             */\n            this.fnSortListener = function (nNode, iColumn, fnCallback) {\n                this.api(true).order.listener(nNode, iColumn, fnCallback);\n            };\n\n\n            /**\n             * Update a table cell or row - this method will accept either a single value to\n             * update the cell with, an array of values with one element for each column or\n             * an object in the same format as the original data source. The function is\n             * self-referencing in order to make the multi column updates easier.\n             *  @param {object|array|string} mData Data to update the cell/row with\n             *  @param {node|int} mRow TR element you want to update or the aoData index\n             *  @param {int} [iColumn] The column to update, give as null or undefined to\n             *    update a whole row.\n             *  @param {bool} [bRedraw=true] Redraw the table or not\n             *  @param {bool} [bAction=true] Perform pre-draw actions or not\n             *  @returns {int} 0 on success, 1 on error\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n             */\n            this.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction) {\n                var api = this.api(true);\n\n                if (iColumn === undefined || iColumn === null) {\n                    api.row(mRow).data(mData);\n                }\n                else {\n                    api.cell(mRow, iColumn).data(mData);\n                }\n\n                if (bAction === undefined || bAction) {\n                    api.columns.adjust();\n                }\n\n                if (bRedraw === undefined || bRedraw) {\n                    api.draw();\n                }\n                return 0;\n            };\n\n\n            /**\n             * Provide a common method for plug-ins to check the version of DataTables being used, in order\n             * to ensure compatibility.\n             *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n             *    formats \"X\" and \"X.Y\" are also acceptable.\n             *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n             *    version, or false if this version of DataTales is not suitable\n             *  @method\n             *  @dtopt API\n             *  @deprecated Since v1.10\n             *\n             *  @example\n             *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n             */\n            this.fnVersionCheck = _ext.fnVersionCheck;\n\n\n            var _that = this;\n            var emptyInit = options === undefined;\n            var len = this.length;\n\n            if (emptyInit) {\n                options = {};\n            }\n\n            this.oApi = this.internal = _ext.internal;\n\n            // Extend with old style plug-in API methods\n            for (var fn in DataTable.ext.internal) {\n                if (fn) {\n                    this[fn] = _fnExternApiFunc(fn);\n                }\n            }\n\n            this.each(function () {\n                // For each initialisation we want to give it a clean initialisation\n                // object that can be bashed around\n                var o = {};\n                var oInit = len > 1 ? // optimisation for single table case\n                    _fnExtend(o, options, true) :\n                    options;\n\n                /*global oInit,_that,emptyInit*/\n                var i = 0, iLen, j, jLen, k, kLen;\n                var sId = this.getAttribute('id');\n                var bInitHandedOff = false;\n                var defaults = DataTable.defaults;\n\n\n                /* Sanity check */\n                if (this.nodeName.toLowerCase() != 'table') {\n                    _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n                    return;\n                }\n\n                /* Backwards compatibility for the defaults */\n                _fnCompatOpts(defaults);\n                _fnCompatCols(defaults.column);\n\n                /* Convert the camel-case defaults to Hungarian */\n                _fnCamelToHungarian(defaults, defaults, true);\n                _fnCamelToHungarian(defaults.column, defaults.column, true);\n\n                /* Setting up the initialisation object */\n                _fnCamelToHungarian(defaults, oInit);\n\n                /* Check to see if we are re-initialising a table */\n                var allSettings = DataTable.settings;\n                for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n                    /* Base check on table node */\n                    if (allSettings[i].nTable == this) {\n                        var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n                        var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n                        if (emptyInit || bRetrieve) {\n                            return allSettings[i].oInstance;\n                        }\n                        else if (bDestroy) {\n                            allSettings[i].oInstance.fnDestroy();\n                            break;\n                        }\n                        else {\n                            _fnLog(allSettings[i], 0, 'Cannot reinitialise DataTable', 3);\n                            return;\n                        }\n                    }\n\n                    /* If the element we are initialising has the same ID as a table which was previously\n                     * initialised, but the table nodes don't match (from before) then we destroy the old\n                     * instance by simply deleting it. This is under the assumption that the table has been\n                     * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n                     */\n                    if (allSettings[i].sTableId == this.id) {\n                        allSettings.splice(i, 1);\n                        break;\n                    }\n                }\n\n                /* Ensure the table has an ID - required for accessibility */\n                if (sId === null || sId === \"\") {\n                    sId = \"DataTables_Table_\" + (DataTable.ext._unique++);\n                    this.id = sId;\n                }\n\n                /* Create the settings object for this table and set some of the default parameters */\n                var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n                    \"nTable\": this,\n                    \"oApi\": _that.internal,\n                    \"oInit\": oInit,\n                    \"sDestroyWidth\": $(this)[0].style.width,\n                    \"sInstance\": sId,\n                    \"sTableId\": sId\n                });\n                allSettings.push(oSettings);\n\n                // Need to add the instance after the instance after the settings object has been added\n                // to the settings array, so we can self reference the table instance if more than one\n                oSettings.oInstance = (_that.length === 1) ? _that : $(this).dataTable();\n\n                // Backwards compatibility, before we apply all the defaults\n                _fnCompatOpts(oInit);\n\n                if (oInit.oLanguage) {\n                    _fnLanguageCompat(oInit.oLanguage);\n                }\n\n                // If the length menu is given, but the init display length is not, use the length menu\n                if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n                    oInit.iDisplayLength = $.isArray(oInit.aLengthMenu[0]) ?\n                        oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n                }\n\n                // Apply the defaults and init options to make a single init object will all\n                // options defined from defaults and instance options.\n                oInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n\n                // Map the initialisation options onto the settings object\n                _fnMap(oSettings.oFeatures, oInit, [\n                    \"bPaginate\",\n                    \"bLengthChange\",\n                    \"bFilter\",\n                    \"bSort\",\n                    \"bSortMulti\",\n                    \"bInfo\",\n                    \"bProcessing\",\n                    \"bAutoWidth\",\n                    \"bSortClasses\",\n                    \"bServerSide\",\n                    \"bDeferRender\"\n                ]);\n                _fnMap(oSettings, oInit, [\n                    \"asStripeClasses\",\n                    \"ajax\",\n                    \"fnServerData\",\n                    \"fnFormatNumber\",\n                    \"sServerMethod\",\n                    \"aaSorting\",\n                    \"aaSortingFixed\",\n                    \"aLengthMenu\",\n                    \"sPaginationType\",\n                    \"sAjaxSource\",\n                    \"sAjaxDataProp\",\n                    \"iStateDuration\",\n                    \"sDom\",\n                    \"bSortCellsTop\",\n                    \"iTabIndex\",\n                    \"fnStateLoadCallback\",\n                    \"fnStateSaveCallback\",\n                    \"renderer\",\n                    \"searchDelay\",\n                    [\"iCookieDuration\", \"iStateDuration\"], // backwards compat\n                    [\"oSearch\", \"oPreviousSearch\"],\n                    [\"aoSearchCols\", \"aoPreSearchCols\"],\n                    [\"iDisplayLength\", \"_iDisplayLength\"],\n                    [\"bJQueryUI\", \"bJUI\"]\n                ]);\n                _fnMap(oSettings.oScroll, oInit, [\n                    [\"sScrollX\", \"sX\"],\n                    [\"sScrollXInner\", \"sXInner\"],\n                    [\"sScrollY\", \"sY\"],\n                    [\"bScrollCollapse\", \"bCollapse\"]\n                ]);\n                _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n                /* Callback functions which are array driven */\n                _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');\n                _fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');\n                _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');\n                _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');\n                _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');\n                _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');\n                _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');\n                _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');\n                _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');\n                _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');\n                _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');\n\n                var oClasses = oSettings.oClasses;\n\n                // @todo Remove in 1.11\n                if (oInit.bJQueryUI) {\n                    /* Use the JUI classes object for display. You could clone the oStdClasses object if\n                     * you want to have multiple tables with multiple independent classes\n                     */\n                    $.extend(oClasses, DataTable.ext.oJUIClasses, oInit.oClasses);\n\n                    if (oInit.sDom === defaults.sDom && defaults.sDom === \"lfrtip\") {\n                        /* Set the DOM to use a layout suitable for jQuery UI's theming */\n                        oSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n                    }\n\n                    if (!oSettings.renderer) {\n                        oSettings.renderer = 'jqueryui';\n                    }\n                    else if ($.isPlainObject(oSettings.renderer) && !oSettings.renderer.header) {\n                        oSettings.renderer.header = 'jqueryui';\n                    }\n                }\n                else {\n                    $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n                }\n                $(this).addClass(oClasses.sTable);\n\n                /* Calculate the scroll bar width and cache it for use later on */\n                if (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") {\n                    oSettings.oScroll.iBarWidth = _fnScrollBarWidth();\n                }\n                if (oSettings.oScroll.sX === true) { // Easy initialisation of x-scrolling\n                    oSettings.oScroll.sX = '100%';\n                }\n\n                if (oSettings.iInitDisplayStart === undefined) {\n                    /* Display start point, taking into account the save saving */\n                    oSettings.iInitDisplayStart = oInit.iDisplayStart;\n                    oSettings._iDisplayStart = oInit.iDisplayStart;\n                }\n\n                if (oInit.iDeferLoading !== null) {\n                    oSettings.bDeferLoading = true;\n                    var tmp = $.isArray(oInit.iDeferLoading);\n                    oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n                    oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n                }\n\n                /* Language definitions */\n                var oLanguage = oSettings.oLanguage;\n                $.extend(true, oLanguage, oInit.oLanguage);\n\n                if (oLanguage.sUrl !== \"\") {\n                    /* Get the language definitions from a file - because this Ajax call makes the language\n                     * get async to the remainder of this function we use bInitHandedOff to indicate that\n                     * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n                     */\n                    $.ajax({\n                        dataType: 'json',\n                        url: oLanguage.sUrl,\n                        success: function (json) {\n                            _fnLanguageCompat(json);\n                            _fnCamelToHungarian(defaults.oLanguage, json);\n                            $.extend(true, oLanguage, json);\n                            _fnInitialise(oSettings);\n                        },\n                        error: function () {\n                            // Error occurred loading language file, continue on as best we can\n                            _fnInitialise(oSettings);\n                        }\n                    });\n                    bInitHandedOff = true;\n                }\n\n                /*\n                 * Stripes\n                 */\n                if (oInit.asStripeClasses === null) {\n                    oSettings.asStripeClasses = [\n                        oClasses.sStripeOdd,\n                        oClasses.sStripeEven\n                    ];\n                }\n\n                /* Remove row stripe classes if they are already on the table row */\n                var stripeClasses = oSettings.asStripeClasses;\n                var rowOne = $('tbody tr:eq(0)', this);\n                if ($.inArray(true, $.map(stripeClasses, function (el, i) {\n                        return rowOne.hasClass(el);\n                    })) !== -1) {\n                    $('tbody tr', this).removeClass(stripeClasses.join(' '));\n                    oSettings.asDestroyStripes = stripeClasses.slice();\n                }\n\n                /*\n                 * Columns\n                 * See if we should load columns automatically or use defined ones\n                 */\n                var anThs = [];\n                var aoColumnsInit;\n                var nThead = this.getElementsByTagName('thead');\n                if (nThead.length !== 0) {\n                    _fnDetectHeader(oSettings.aoHeader, nThead[0]);\n                    anThs = _fnGetUniqueThs(oSettings);\n                }\n\n                /* If not given a column array, generate one with nulls */\n                if (oInit.aoColumns === null) {\n                    aoColumnsInit = [];\n                    for (i = 0, iLen = anThs.length; i < iLen; i++) {\n                        aoColumnsInit.push(null);\n                    }\n                }\n                else {\n                    aoColumnsInit = oInit.aoColumns;\n                }\n\n                /* Add the columns */\n                for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++) {\n                    _fnAddColumn(oSettings, anThs ? anThs[i] : null);\n                }\n\n                /* Apply the column definitions */\n                _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n                    _fnColumnOptions(oSettings, iCol, oDef);\n                });\n\n                /* HTML5 attribute detection - build an mData object automatically if the\n                 * attributes are found\n                 */\n                if (rowOne.length) {\n                    var a = function (cell, name) {\n                        return cell.getAttribute('data-' + name) ? name : null;\n                    };\n\n                    $.each(_fnGetRowElements(oSettings, rowOne[0]).cells, function (i, cell) {\n                        var col = oSettings.aoColumns[i];\n\n                        if (col.mData === i) {\n                            var sort = a(cell, 'sort') || a(cell, 'order');\n                            var filter = a(cell, 'filter') || a(cell, 'search');\n\n                            if (sort !== null || filter !== null) {\n                                col.mData = {\n                                    _: i + '.display',\n                                    sort: sort !== null ? i + '.@data-' + sort : undefined,\n                                    type: sort !== null ? i + '.@data-' + sort : undefined,\n                                    filter: filter !== null ? i + '.@data-' + filter : undefined\n                                };\n\n                                _fnColumnOptions(oSettings, i);\n                            }\n                        }\n                    });\n                }\n\n                var features = oSettings.oFeatures;\n\n                /* Must be done after everything which can be overridden by the state saving! */\n                if (oInit.bStateSave) {\n                    features.bStateSave = true;\n                    _fnLoadState(oSettings, oInit);\n                    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');\n                }\n\n\n                /*\n                 * Sorting\n                 * @todo For modularisation (1.11) this needs to do into a sort start up handler\n                 */\n\n                // If aaSorting is not defined, then we use the first indicator in asSorting\n                // in case that has been altered, so the default sort reflects that option\n                if (oInit.aaSorting === undefined) {\n                    var sorting = oSettings.aaSorting;\n                    for (i = 0, iLen = sorting.length; i < iLen; i++) {\n                        sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n                    }\n                }\n\n                /* Do a first pass on the sorting classes (allows any size changes to be taken into\n                 * account, and also will apply sorting disabled classes if disabled\n                 */\n                _fnSortingClasses(oSettings);\n\n                if (features.bSort) {\n                    _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n                        if (oSettings.bSorted) {\n                            var aSort = _fnSortFlatten(oSettings);\n                            var sortedColumns = {};\n\n                            $.each(aSort, function (i, val) {\n                                sortedColumns[val.src] = val.dir;\n                            });\n\n                            _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns]);\n                            _fnSortAria(oSettings);\n                        }\n                    });\n                }\n\n                _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n                    if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n                        _fnSortingClasses(oSettings);\n                    }\n                }, 'sc');\n\n\n                /*\n                 * Final init\n                 * Cache the header, body and footer as required, creating them if needed\n                 */\n\n                /* Browser support detection */\n                _fnBrowserDetect(oSettings);\n\n                // Work around for Webkit bug 83867 - store the caption-side before removing from doc\n                var captions = $(this).children('caption').each(function () {\n                    this._captionSide = $(this).css('caption-side');\n                });\n\n                var thead = $(this).children('thead');\n                if (thead.length === 0) {\n                    thead = $('<thead/>').appendTo(this);\n                }\n                oSettings.nTHead = thead[0];\n\n                var tbody = $(this).children('tbody');\n                if (tbody.length === 0) {\n                    tbody = $('<tbody/>').appendTo(this);\n                }\n                oSettings.nTBody = tbody[0];\n\n                var tfoot = $(this).children('tfoot');\n                if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\")) {\n                    // If we are a scrolling table, and no footer has been given, then we need to create\n                    // a tfoot element for the caption element to be appended to\n                    tfoot = $('<tfoot/>').appendTo(this);\n                }\n\n                if (tfoot.length === 0 || tfoot.children().length === 0) {\n                    $(this).addClass(oClasses.sNoFooter);\n                }\n                else if (tfoot.length > 0) {\n                    oSettings.nTFoot = tfoot[0];\n                    _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);\n                }\n\n                /* Check if there is data passing into the constructor */\n                if (oInit.aaData) {\n                    for (i = 0; i < oInit.aaData.length; i++) {\n                        _fnAddData(oSettings, oInit.aaData[i]);\n                    }\n                }\n                else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {\n                    /* Grab the data from the page - only do this when deferred loading or no Ajax\n                     * source since there is no point in reading the DOM data if we are then going\n                     * to replace it with Ajax data\n                     */\n                    _fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));\n                }\n\n                /* Copy the data index array */\n                oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n                /* Initialisation complete - table can be drawn */\n                oSettings.bInitialised = true;\n\n                /* Check if we need to initialise the table (it might not have been handed off to the\n                 * language processor)\n                 */\n                if (bInitHandedOff === false) {\n                    _fnInitialise(oSettings);\n                }\n            });\n            _that = null;\n            return this;\n        };\n\n\n        /**\n         * Computed structure of the DataTables API, defined by the options passed to\n         * `DataTable.Api.register()` when building the API.\n         *\n         * The structure is built in order to speed creation and extension of the Api\n         * objects since the extensions are effectively pre-parsed.\n         *\n         * The array is an array of objects with the following structure, where this\n         * base array represents the Api prototype base:\n         *\n         *     [\n         *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n         *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n         *     ]\n         *\n         * @type {Array}\n         * @ignore\n         */\n        var __apiStruct = [];\n\n\n        /**\n         * `Array.prototype` reference.\n         *\n         * @type object\n         * @ignore\n         */\n        var __arrayProto = Array.prototype;\n\n\n        /**\n         * Abstraction for `context` parameter of the `Api` constructor to allow it to\n         * take several different forms for ease of use.\n         *\n         * Each of the input parameter types will be converted to a DataTables settings\n         * object where possible.\n         *\n         * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n         *   of:\n         *\n         *   * `string` - jQuery selector. Any DataTables' matching the given selector\n         *     with be found and used.\n         *   * `node` - `TABLE` node which has already been formed into a DataTable.\n         *   * `jQuery` - A jQuery object of `TABLE` nodes.\n         *   * `object` - DataTables settings object\n         *   * `DataTables.Api` - API instance\n         * @return {array|null} Matching DataTables settings objects. `null` or\n         *   `undefined` is returned if no matching DataTable is found.\n         * @ignore\n         */\n        var _toSettings = function (mixed) {\n            var idx, jq;\n            var settings = DataTable.settings;\n            var tables = $.map(settings, function (el, i) {\n                return el.nTable;\n            });\n\n            if (!mixed) {\n                return [];\n            }\n            else if (mixed.nTable && mixed.oApi) {\n                // DataTables settings object\n                return [mixed];\n            }\n            else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n                // Table node\n                idx = $.inArray(mixed, tables);\n                return idx !== -1 ? [settings[idx]] : null;\n            }\n            else if (mixed && typeof mixed.settings === 'function') {\n                return mixed.settings().toArray();\n            }\n            else if (typeof mixed === 'string') {\n                // jQuery selector\n                jq = $(mixed);\n            }\n            else if (mixed instanceof $) {\n                // jQuery object (also DataTables instance)\n                jq = mixed;\n            }\n\n            if (jq) {\n                return jq.map(function (i) {\n                    idx = $.inArray(this, tables);\n                    return idx !== -1 ? settings[idx] : null;\n                }).toArray();\n            }\n        };\n\n\n        /**\n         * DataTables API class - used to control and interface with  one or more\n         * DataTables enhanced tables.\n         *\n         * The API class is heavily based on jQuery, presenting a chainable interface\n         * that you can use to interact with tables. Each instance of the API class has\n         * a \"context\" - i.e. the tables that it will operate on. This could be a single\n         * table, all tables on a page or a sub-set thereof.\n         *\n         * Additionally the API is designed to allow you to easily work with the data in\n         * the tables, retrieving and manipulating it as required. This is done by\n         * presenting the API class as an array like interface. The contents of the\n         * array depend upon the actions requested by each method (for example\n         * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n         * return an array of objects or arrays depending upon your table's\n         * configuration). The API object has a number of array like methods (`push`,\n         * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n         * `unique` etc) to assist your working with the data held in a table.\n         *\n         * Most methods (those which return an Api instance) are chainable, which means\n         * the return from a method call also has all of the methods available that the\n         * top level object had. For example, these two calls are equivalent:\n         *\n         *     // Not chained\n         *     api.row.add( {...} );\n         *     api.draw();\n         *\n         *     // Chained\n         *     api.row.add( {...} ).draw();\n         *\n         * @class DataTable.Api\n         * @param {array|object|string|jQuery} context DataTable identifier. This is\n         *   used to define which DataTables enhanced tables this API will operate on.\n         *   Can be one of:\n         *\n         *   * `string` - jQuery selector. Any DataTables' matching the given selector\n         *     with be found and used.\n         *   * `node` - `TABLE` node which has already been formed into a DataTable.\n         *   * `jQuery` - A jQuery object of `TABLE` nodes.\n         *   * `object` - DataTables settings object\n         * @param {array} [data] Data to initialise the Api instance with.\n         *\n         * @example\n         *   // Direct initialisation during DataTables construction\n         *   var api = $('#example').DataTable();\n         *\n         * @example\n         *   // Initialisation using a DataTables jQuery object\n         *   var api = $('#example').dataTable().api();\n         *\n         * @example\n         *   // Initialisation as a constructor\n         *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n         */\n        _Api = function (context, data) {\n            if (!this instanceof _Api) {\n                throw 'DT API must be constructed as a new object';\n                // or should it do the 'new' for the caller?\n                // return new _Api.apply( this, arguments );\n            }\n\n            var settings = [];\n            var ctxSettings = function (o) {\n                var a = _toSettings(o);\n                if (a) {\n                    settings.push.apply(settings, a);\n                }\n            };\n\n            if ($.isArray(context)) {\n                for (var i = 0, ien = context.length; i < ien; i++) {\n                    ctxSettings(context[i]);\n                }\n            }\n            else {\n                ctxSettings(context);\n            }\n\n            // Remove duplicates\n            this.context = _unique(settings);\n\n            // Initial data\n            if (data) {\n                this.push.apply(this, data.toArray ? data.toArray() : data);\n            }\n\n            // selector\n            this.selector = {\n                rows: null,\n                cols: null,\n                opts: null\n            };\n\n            _Api.extend(this, this, __apiStruct);\n        };\n\n        DataTable.Api = _Api;\n\n        _Api.prototype = /** @lends DataTables.Api */{\n            /**\n             * Return a new Api instance, comprised of the data held in the current\n             * instance, join with the other array(s) and/or value(s).\n             *\n             * An alias for `Array.prototype.concat`.\n             *\n             * @type method\n             * @param {*} value1 Arrays and/or values to concatenate.\n             * @param {*} [...] Additional arrays and/or values to concatenate.\n             * @returns {DataTables.Api} New API instance, comprising of the combined\n             *   array.\n             */\n            concat: __arrayProto.concat,\n\n\n            context: [], // array of table settings objects\n\n\n            each: function (fn) {\n                for (var i = 0, ien = this.length; i < ien; i++) {\n                    fn.call(this, this[i], i, this);\n                }\n\n                return this;\n            },\n\n\n            eq: function (idx) {\n                var ctx = this.context;\n\n                return ctx.length > idx ?\n                    new _Api(ctx[idx], this[idx]) :\n                    null;\n            },\n\n\n            filter: function (fn) {\n                var a = [];\n\n                if (__arrayProto.filter) {\n                    a = __arrayProto.filter.call(this, fn, this);\n                }\n                else {\n                    // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n                    for (var i = 0, ien = this.length; i < ien; i++) {\n                        if (fn.call(this, this[i], i, this)) {\n                            a.push(this[i]);\n                        }\n                    }\n                }\n\n                return new _Api(this.context, a);\n            },\n\n\n            flatten: function () {\n                var a = [];\n                return new _Api(this.context, a.concat.apply(a, this.toArray()));\n            },\n\n\n            join: __arrayProto.join,\n\n\n            indexOf: __arrayProto.indexOf || function (obj, start) {\n                for (var i = (start || 0), ien = this.length; i < ien; i++) {\n                    if (this[i] === obj) {\n                        return i;\n                    }\n                }\n                return -1;\n            },\n\n            // Note that `alwaysNew` is internal - use iteratorNew externally\n            iterator: function (flatten, type, fn, alwaysNew) {\n                var\n                    a = [], ret,\n                    i, ien, j, jen,\n                    context = this.context,\n                    rows, items, item,\n                    selector = this.selector;\n\n                // Argument shifting\n                if (typeof flatten === 'string') {\n                    alwaysNew = fn;\n                    fn = type;\n                    type = flatten;\n                    flatten = false;\n                }\n\n                for (i = 0, ien = context.length; i < ien; i++) {\n                    var apiInst = new _Api(context[i]);\n\n                    if (type === 'table') {\n                        ret = fn.call(apiInst, context[i], i);\n\n                        if (ret !== undefined) {\n                            a.push(ret);\n                        }\n                    }\n                    else if (type === 'columns' || type === 'rows') {\n                        // this has same length as context - one entry for each table\n                        ret = fn.call(apiInst, context[i], this[i], i);\n\n                        if (ret !== undefined) {\n                            a.push(ret);\n                        }\n                    }\n                    else if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n                        // columns and rows share the same structure.\n                        // 'this' is an array of column indexes for each context\n                        items = this[i];\n\n                        if (type === 'column-rows') {\n                            rows = _selector_row_indexes(context[i], selector.opts);\n                        }\n\n                        for (j = 0, jen = items.length; j < jen; j++) {\n                            item = items[j];\n\n                            if (type === 'cell') {\n                                ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n                            }\n                            else {\n                                ret = fn.call(apiInst, context[i], item, i, j, rows);\n                            }\n\n                            if (ret !== undefined) {\n                                a.push(ret);\n                            }\n                        }\n                    }\n                }\n\n                if (a.length || alwaysNew) {\n                    var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n                    var apiSelector = api.selector;\n                    apiSelector.rows = selector.rows;\n                    apiSelector.cols = selector.cols;\n                    apiSelector.opts = selector.opts;\n                    return api;\n                }\n                return this;\n            },\n\n\n            lastIndexOf: __arrayProto.lastIndexOf || function (obj, start) {\n                // Bit cheeky...\n                return this.indexOf.apply(this.toArray.reverse(), arguments);\n            },\n\n\n            length: 0,\n\n\n            map: function (fn) {\n                var a = [];\n\n                if (__arrayProto.map) {\n                    a = __arrayProto.map.call(this, fn, this);\n                }\n                else {\n                    // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n                    for (var i = 0, ien = this.length; i < ien; i++) {\n                        a.push(fn.call(this, this[i], i));\n                    }\n                }\n\n                return new _Api(this.context, a);\n            },\n\n\n            pluck: function (prop) {\n                return this.map(function (el) {\n                    return el[prop];\n                });\n            },\n\n            pop: __arrayProto.pop,\n\n\n            push: __arrayProto.push,\n\n\n            // Does not return an API instance\n            reduce: __arrayProto.reduce || function (fn, init) {\n                return _fnReduce(this, fn, init, 0, this.length, 1);\n            },\n\n\n            reduceRight: __arrayProto.reduceRight || function (fn, init) {\n                return _fnReduce(this, fn, init, this.length - 1, -1, -1);\n            },\n\n\n            reverse: __arrayProto.reverse,\n\n\n            // Object with rows, columns and opts\n            selector: null,\n\n\n            shift: __arrayProto.shift,\n\n\n            sort: __arrayProto.sort, // ? name - order?\n\n\n            splice: __arrayProto.splice,\n\n\n            toArray: function () {\n                return __arrayProto.slice.call(this);\n            },\n\n\n            to$: function () {\n                return $(this);\n            },\n\n\n            toJQuery: function () {\n                return $(this);\n            },\n\n\n            unique: function () {\n                return new _Api(this.context, _unique(this));\n            },\n\n\n            unshift: __arrayProto.unshift\n        };\n\n\n        _Api.extend = function (scope, obj, ext) {\n            // Only extend API instances and static properties of the API\n            if (!obj || ( !(obj instanceof _Api) && !obj.__dt_wrapper )) {\n                return;\n            }\n\n            var\n                i, ien,\n                j, jen,\n                struct, inner,\n                methodScoping = function (scope, fn, struc) {\n                    return function () {\n                        var ret = fn.apply(scope, arguments);\n\n                        // Method extension\n                        _Api.extend(ret, ret, struc.methodExt);\n                        return ret;\n                    };\n                };\n\n            for (i = 0, ien = ext.length; i < ien; i++) {\n                struct = ext[i];\n\n                // Value\n                obj[struct.name] = typeof struct.val === 'function' ?\n                    methodScoping(scope, struct.val, struct) :\n                    $.isPlainObject(struct.val) ?\n                    {} :\n                        struct.val;\n\n                obj[struct.name].__dt_wrapper = true;\n\n                // Property extension\n                _Api.extend(scope, obj[struct.name], struct.propExt);\n            }\n        };\n\n\n        // @todo - Is there need for an augment function?\n        // _Api.augment = function ( inst, name )\n        // {\n        // \t// Find src object in the structure from the name\n        // \tvar parts = name.split('.');\n\n        // \t_Api.extend( inst, obj );\n        // };\n\n\n        //     [\n        //       {\n        //         name:      'data'                -- string   - Property name\n        //         val:       function () {},       -- function - Api method (or undefined if just an object\n        //         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n        //         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n        //       },\n        //       {\n        //         name:     'row'\n        //         val:       {},\n        //         methodExt: [ ... ],\n        //         propExt:   [\n        //           {\n        //             name:      'data'\n        //             val:       function () {},\n        //             methodExt: [ ... ],\n        //             propExt:   [ ... ]\n        //           },\n        //           ...\n        //         ]\n        //       }\n        //     ]\n\n        _Api.register = _api_register = function (name, val) {\n            if ($.isArray(name)) {\n                for (var j = 0, jen = name.length; j < jen; j++) {\n                    _Api.register(name[j], val);\n                }\n                return;\n            }\n\n            var\n                i, ien,\n                heir = name.split('.'),\n                struct = __apiStruct,\n                key, method;\n\n            var find = function (src, name) {\n                for (var i = 0, ien = src.length; i < ien; i++) {\n                    if (src[i].name === name) {\n                        return src[i];\n                    }\n                }\n                return null;\n            };\n\n            for (i = 0, ien = heir.length; i < ien; i++) {\n                method = heir[i].indexOf('()') !== -1;\n                key = method ?\n                    heir[i].replace('()', '') :\n                    heir[i];\n\n                var src = find(struct, key);\n                if (!src) {\n                    src = {\n                        name: key,\n                        val: {},\n                        methodExt: [],\n                        propExt: []\n                    };\n                    struct.push(src);\n                }\n\n                if (i === ien - 1) {\n                    src.val = val;\n                }\n                else {\n                    struct = method ?\n                        src.methodExt :\n                        src.propExt;\n                }\n            }\n        };\n\n\n        _Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n            _Api.register(pluralName, val);\n\n            _Api.register(singularName, function () {\n                var ret = val.apply(this, arguments);\n\n                if (ret === this) {\n                    // Returned item is the API instance that was passed in, return it\n                    return this;\n                }\n                else if (ret instanceof _Api) {\n                    // New API instance returned, want the value from the first item\n                    // in the returned array for the singular result.\n                    return ret.length ?\n                        $.isArray(ret[0]) ?\n                            new _Api(ret.context, ret[0]) : // Array results are 'enhanced'\n                            ret[0] :\n                        undefined;\n                }\n\n                // Non-API return - just fire it back\n                return ret;\n            });\n        };\n\n\n        /**\n         * Selector for HTML tables. Apply the given selector to the give array of\n         * DataTables settings objects.\n         *\n         * @param {string|integer} [selector] jQuery selector string or integer\n         * @param  {array} Array of DataTables settings objects to be filtered\n         * @return {array}\n         * @ignore\n         */\n        var __table_selector = function (selector, a) {\n            // Integer is used to pick out a table by index\n            if (typeof selector === 'number') {\n                return [a[selector]];\n            }\n\n            // Perform a jQuery selector on the table nodes\n            var nodes = $.map(a, function (el, i) {\n                return el.nTable;\n            });\n\n            return $(nodes)\n                .filter(selector)\n                .map(function (i) {\n                    // Need to translate back from the table node to the settings\n                    var idx = $.inArray(this, nodes);\n                    return a[idx];\n                })\n                .toArray();\n        };\n\n\n        /**\n         * Context selector for the API's context (i.e. the tables the API instance\n         * refers to.\n         *\n         * @name    DataTable.Api#tables\n         * @param {string|integer} [selector] Selector to pick which tables the iterator\n         *   should operate on. If not given, all tables in the current context are\n         *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n         *   select multiple tables or as an integer to select a single table.\n         * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n         */\n        _api_register('tables()', function (selector) {\n            // A new instance is created if there was a selector specified\n            return selector ?\n                new _Api(__table_selector(selector, this.context)) :\n                this;\n        });\n\n\n        _api_register('table()', function (selector) {\n            var tables = this.tables(selector);\n            var ctx = tables.context;\n\n            // Truncate to the first matched table\n            return ctx.length ?\n                new _Api(ctx[0]) :\n                tables;\n        });\n\n\n        _api_registerPlural('tables().nodes()', 'table().node()', function () {\n            return this.iterator('table', function (ctx) {\n                return ctx.nTable;\n            }, 1);\n        });\n\n\n        _api_registerPlural('tables().body()', 'table().body()', function () {\n            return this.iterator('table', function (ctx) {\n                return ctx.nTBody;\n            }, 1);\n        });\n\n\n        _api_registerPlural('tables().header()', 'table().header()', function () {\n            return this.iterator('table', function (ctx) {\n                return ctx.nTHead;\n            }, 1);\n        });\n\n\n        _api_registerPlural('tables().footer()', 'table().footer()', function () {\n            return this.iterator('table', function (ctx) {\n                return ctx.nTFoot;\n            }, 1);\n        });\n\n\n        _api_registerPlural('tables().containers()', 'table().container()', function () {\n            return this.iterator('table', function (ctx) {\n                return ctx.nTableWrapper;\n            }, 1);\n        });\n\n\n        /**\n         * Redraw the tables in the current context.\n         *\n         * @param {boolean} [reset=true] Reset (default) or hold the current paging\n         *   position. A full re-sort and re-filter is performed when this method is\n         *   called, which is why the pagination reset is the default action.\n         * @returns {DataTables.Api} this\n         */\n        _api_register('draw()', function (resetPaging) {\n            return this.iterator('table', function (settings) {\n                _fnReDraw(settings, resetPaging === false);\n            });\n        });\n\n\n        /**\n         * Get the current page index.\n         *\n         * @return {integer} Current page index (zero based)\n         */\n        /**\n         * Set the current page.\n         *\n         * Note that if you attempt to show a page which does not exist, DataTables will\n         * not throw an error, but rather reset the paging.\n         *\n         * @param {integer|string} action The paging action to take. This can be one of:\n         *  * `integer` - The page index to jump to\n         *  * `string` - An action to take:\n         *    * `first` - Jump to first page.\n         *    * `next` - Jump to the next page\n         *    * `previous` - Jump to previous page\n         *    * `last` - Jump to the last page.\n         * @returns {DataTables.Api} this\n         */\n        _api_register('page()', function (action) {\n            if (action === undefined) {\n                return this.page.info().page; // not an expensive call\n            }\n\n            // else, have an action to take on all tables\n            return this.iterator('table', function (settings) {\n                _fnPageChange(settings, action);\n            });\n        });\n\n\n        /**\n         * Paging information for the first table in the current context.\n         *\n         * If you require paging information for another table, use the `table()` method\n         * with a suitable selector.\n         *\n         * @return {object} Object with the following properties set:\n         *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n         *  * `pages` - Total number of pages\n         *  * `start` - Display index for the first record shown on the current page\n         *  * `end` - Display index for the last record shown on the current page\n         *  * `length` - Display length (number of records). Note that generally `start\n         *    + length = end`, but this is not always true, for example if there are\n         *    only 2 records to show on the final page, with a length of 10.\n         *  * `recordsTotal` - Full data set length\n         *  * `recordsDisplay` - Data set length once the current filtering criterion\n         *    are applied.\n         */\n        _api_register('page.info()', function (action) {\n            if (this.context.length === 0) {\n                return undefined;\n            }\n\n            var\n                settings = this.context[0],\n                start = settings._iDisplayStart,\n                len = settings._iDisplayLength,\n                visRecords = settings.fnRecordsDisplay(),\n                all = len === -1;\n\n            return {\n                \"page\": all ? 0 : Math.floor(start / len),\n                \"pages\": all ? 1 : Math.ceil(visRecords / len),\n                \"start\": start,\n                \"end\": settings.fnDisplayEnd(),\n                \"length\": len,\n                \"recordsTotal\": settings.fnRecordsTotal(),\n                \"recordsDisplay\": visRecords\n            };\n        });\n\n\n        /**\n         * Get the current page length.\n         *\n         * @return {integer} Current page length. Note `-1` indicates that all records\n         *   are to be shown.\n         */\n        /**\n         * Set the current page length.\n         *\n         * @param {integer} Page length to set. Use `-1` to show all records.\n         * @returns {DataTables.Api} this\n         */\n        _api_register('page.len()', function (len) {\n            // Note that we can't call this function 'length()' because `length`\n            // is a Javascript property of functions which defines how many arguments\n            // the function expects.\n            if (len === undefined) {\n                return this.context.length !== 0 ?\n                    this.context[0]._iDisplayLength :\n                    undefined;\n            }\n\n            // else, set the page length\n            return this.iterator('table', function (settings) {\n                _fnLengthChange(settings, len);\n            });\n        });\n\n\n        var __reload = function (settings, holdPosition, callback) {\n            if (_fnDataSource(settings) == 'ssp') {\n                _fnReDraw(settings, holdPosition);\n            }\n            else {\n                // Trigger xhr\n                _fnProcessingDisplay(settings, true);\n\n                _fnBuildAjax(settings, [], function (json) {\n                    _fnClearTable(settings);\n\n                    var data = _fnAjaxDataSrc(settings, json);\n                    for (var i = 0, ien = data.length; i < ien; i++) {\n                        _fnAddData(settings, data[i]);\n                    }\n\n                    _fnReDraw(settings, holdPosition);\n                    _fnProcessingDisplay(settings, false);\n                });\n            }\n\n            // Use the draw event to trigger a callback, regardless of if it is an async\n            // or sync draw\n            if (callback) {\n                var api = new _Api(settings);\n\n                api.one('draw', function () {\n                    callback(api.ajax.json());\n                });\n            }\n        };\n\n\n        /**\n         * Get the JSON response from the last Ajax request that DataTables made to the\n         * server. Note that this returns the JSON from the first table in the current\n         * context.\n         *\n         * @return {object} JSON received from the server.\n         */\n        _api_register('ajax.json()', function () {\n            var ctx = this.context;\n\n            if (ctx.length > 0) {\n                return ctx[0].json;\n            }\n\n            // else return undefined;\n        });\n\n\n        /**\n         * Get the data submitted in the last Ajax request\n         */\n        _api_register('ajax.params()', function () {\n            var ctx = this.context;\n\n            if (ctx.length > 0) {\n                return ctx[0].oAjaxData;\n            }\n\n            // else return undefined;\n        });\n\n\n        /**\n         * Reload tables from the Ajax data source. Note that this function will\n         * automatically re-draw the table when the remote data has been loaded.\n         *\n         * @param {boolean} [reset=true] Reset (default) or hold the current paging\n         *   position. A full re-sort and re-filter is performed when this method is\n         *   called, which is why the pagination reset is the default action.\n         * @returns {DataTables.Api} this\n         */\n        _api_register('ajax.reload()', function (callback, resetPaging) {\n            return this.iterator('table', function (settings) {\n                __reload(settings, resetPaging === false, callback);\n            });\n        });\n\n\n        /**\n         * Get the current Ajax URL. Note that this returns the URL from the first\n         * table in the current context.\n         *\n         * @return {string} Current Ajax source URL\n         */\n        /**\n         * Set the Ajax URL. Note that this will set the URL for all tables in the\n         * current context.\n         *\n         * @param {string} url URL to set.\n         * @returns {DataTables.Api} this\n         */\n        _api_register('ajax.url()', function (url) {\n            var ctx = this.context;\n\n            if (url === undefined) {\n                // get\n                if (ctx.length === 0) {\n                    return undefined;\n                }\n                ctx = ctx[0];\n\n                return ctx.ajax ?\n                    $.isPlainObject(ctx.ajax) ?\n                        ctx.ajax.url :\n                        ctx.ajax :\n                    ctx.sAjaxSource;\n            }\n\n            // set\n            return this.iterator('table', function (settings) {\n                if ($.isPlainObject(settings.ajax)) {\n                    settings.ajax.url = url;\n                }\n                else {\n                    settings.ajax = url;\n                }\n                // No need to consider sAjaxSource here since DataTables gives priority\n                // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n                // value of `sAjaxSource` redundant.\n            });\n        });\n\n\n        /**\n         * Load data from the newly set Ajax URL. Note that this method is only\n         * available when `ajax.url()` is used to set a URL. Additionally, this method\n         * has the same effect as calling `ajax.reload()` but is provided for\n         * convenience when setting a new URL. Like `ajax.reload()` it will\n         * automatically redraw the table once the remote data has been loaded.\n         *\n         * @returns {DataTables.Api} this\n         */\n        _api_register('ajax.url().load()', function (callback, resetPaging) {\n            // Same as a reload, but makes sense to present it for easy access after a\n            // url change\n            return this.iterator('table', function (ctx) {\n                __reload(ctx, resetPaging === false, callback);\n            });\n        });\n\n\n        var _selector_run = function (selector, select) {\n            var\n                out = [], res,\n                a, i, ien, j, jen,\n                selectorType = typeof selector;\n\n            // Can't just check for isArray here, as an API or jQuery instance might be\n            // given with their array like look\n            if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n                selector = [selector];\n            }\n\n            for (i = 0, ien = selector.length; i < ien; i++) {\n                a = selector[i] && selector[i].split ?\n                    selector[i].split(',') :\n                    [selector[i]];\n\n                for (j = 0, jen = a.length; j < jen; j++) {\n                    res = select(typeof a[j] === 'string' ? $.trim(a[j]) : a[j]);\n\n                    if (res && res.length) {\n                        out.push.apply(out, res);\n                    }\n                }\n            }\n\n            return out;\n        };\n\n\n        var _selector_opts = function (opts) {\n            if (!opts) {\n                opts = {};\n            }\n\n            // Backwards compatibility for 1.9- which used the terminology filter rather\n            // than search\n            if (opts.filter && !opts.search) {\n                opts.search = opts.filter;\n            }\n\n            return {\n                search: opts.search || 'none',\n                order: opts.order || 'current',\n                page: opts.page || 'all'\n            };\n        };\n\n\n        var _selector_first = function (inst) {\n            // Reduce the API instance to the first item found\n            for (var i = 0, ien = inst.length; i < ien; i++) {\n                if (inst[i].length > 0) {\n                    // Assign the first element to the first item in the instance\n                    // and truncate the instance and context\n                    inst[0] = inst[i];\n                    inst.length = 1;\n                    inst.context = [inst.context[i]];\n\n                    return inst;\n                }\n            }\n\n            // Not found - return an empty instance\n            inst.length = 0;\n            return inst;\n        };\n\n\n        var _selector_row_indexes = function (settings, opts) {\n            var\n                i, ien, tmp, a = [],\n                displayFiltered = settings.aiDisplay,\n                displayMaster = settings.aiDisplayMaster;\n\n            var\n                search = opts.search,  // none, applied, removed\n                order = opts.order,   // applied, current, index (original - compatibility with 1.9)\n                page = opts.page;    // all, current\n\n            if (_fnDataSource(settings) == 'ssp') {\n                // In server-side processing mode, most options are irrelevant since\n                // rows not shown don't exist and the index order is the applied order\n                // Removed is a special case - for consistency just return an empty\n                // array\n                return search === 'removed' ?\n                    [] :\n                    _range(0, displayMaster.length);\n            }\n            else if (page == 'current') {\n                // Current page implies that order=current and fitler=applied, since it is\n                // fairly senseless otherwise, regardless of what order and search actually\n                // are\n                for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n                    a.push(displayFiltered[i]);\n                }\n            }\n            else if (order == 'current' || order == 'applied') {\n                a = search == 'none' ?\n                    displayMaster.slice() :                      // no search\n                    search == 'applied' ?\n                        displayFiltered.slice() :                // applied search\n                        $.map(displayMaster, function (el, i) { // removed search\n                            return $.inArray(el, displayFiltered) === -1 ? el : null;\n                        });\n            }\n            else if (order == 'index' || order == 'original') {\n                for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n                    if (search == 'none') {\n                        a.push(i);\n                    }\n                    else { // applied | removed\n                        tmp = $.inArray(i, displayFiltered);\n\n                        if ((tmp === -1 && search == 'removed') ||\n                            (tmp >= 0 && search == 'applied')) {\n                            a.push(i);\n                        }\n                    }\n                }\n            }\n\n            return a;\n        };\n\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * Rows\n         *\n         * {}          - no selector - use all available rows\n         * {integer}   - row aoData index\n         * {node}      - TR node\n         * {string}    - jQuery selector to apply to the TR elements\n         * {array}     - jQuery array of nodes, or simply an array of TR nodes\n         *\n         */\n\n\n        var __row_selector = function (settings, selector, opts) {\n            return _selector_run(selector, function (sel) {\n                var selInt = _intVal(sel);\n                var i, ien;\n\n                // Short cut - selector is a number and no options provided (default is\n                // all records, so no need to check if the index is in there, since it\n                // must be - dev error if the index doesn't exist).\n                if (selInt !== null && !opts) {\n                    return [selInt];\n                }\n\n                var rows = _selector_row_indexes(settings, opts);\n\n                if (selInt !== null && $.inArray(selInt, rows) !== -1) {\n                    // Selector - integer\n                    return [selInt];\n                }\n                else if (!sel) {\n                    // Selector - none\n                    return rows;\n                }\n\n                // Selector - function\n                if (typeof sel === 'function') {\n                    return $.map(rows, function (idx) {\n                        var row = settings.aoData[idx];\n                        return sel(idx, row._aData, row.nTr) ? idx : null;\n                    });\n                }\n\n                // Get nodes in the order from the `rows` array with null values removed\n                var nodes = _removeEmpty(\n                    _pluck_order(settings.aoData, rows, 'nTr')\n                );\n\n                // Selector - node\n                if (sel.nodeName) {\n                    if ($.inArray(sel, nodes) !== -1) {\n                        return [sel._DT_RowIndex]; // sel is a TR node that is in the table\n                                                   // and DataTables adds a prop for fast lookup\n                    }\n                }\n\n                // Selector - jQuery selector string, array of nodes or jQuery object/\n                // As jQuery's .filter() allows jQuery objects to be passed in filter,\n                // it also allows arrays, so this will cope with all three options\n                return $(nodes)\n                    .filter(sel)\n                    .map(function () {\n                        return this._DT_RowIndex;\n                    })\n                    .toArray();\n            });\n        };\n\n\n        /**\n         *\n         */\n        _api_register('rows()', function (selector, opts) {\n            // argument shifting\n            if (selector === undefined) {\n                selector = '';\n            }\n            else if ($.isPlainObject(selector)) {\n                opts = selector;\n                selector = '';\n            }\n\n            opts = _selector_opts(opts);\n\n            var inst = this.iterator('table', function (settings) {\n                return __row_selector(settings, selector, opts);\n            }, 1);\n\n            // Want argument shifting here and in __row_selector?\n            inst.selector.rows = selector;\n            inst.selector.opts = opts;\n\n            return inst;\n        });\n\n\n        _api_register('rows().nodes()', function () {\n            return this.iterator('row', function (settings, row) {\n                return settings.aoData[row].nTr || undefined;\n            }, 1);\n        });\n\n        _api_register('rows().data()', function () {\n            return this.iterator(true, 'rows', function (settings, rows) {\n                return _pluck_order(settings.aoData, rows, '_aData');\n            }, 1);\n        });\n\n        _api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n            return this.iterator('row', function (settings, row) {\n                var r = settings.aoData[row];\n                return type === 'search' ? r._aFilterData : r._aSortData;\n            }, 1);\n        });\n\n        _api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n            return this.iterator('row', function (settings, row) {\n                _fnInvalidate(settings, row, src);\n            });\n        });\n\n        _api_registerPlural('rows().indexes()', 'row().index()', function () {\n            return this.iterator('row', function (settings, row) {\n                return row;\n            }, 1);\n        });\n\n        _api_registerPlural('rows().remove()', 'row().remove()', function () {\n            var that = this;\n\n            return this.iterator('row', function (settings, row, thatIdx) {\n                var data = settings.aoData;\n\n                data.splice(row, 1);\n\n                // Update the _DT_RowIndex parameter on all rows in the table\n                for (var i = 0, ien = data.length; i < ien; i++) {\n                    if (data[i].nTr !== null) {\n                        data[i].nTr._DT_RowIndex = i;\n                    }\n                }\n\n                // Remove the target row from the search array\n                var displayIndex = $.inArray(row, settings.aiDisplay);\n\n                // Delete from the display arrays\n                _fnDeleteIndex(settings.aiDisplayMaster, row);\n                _fnDeleteIndex(settings.aiDisplay, row);\n                _fnDeleteIndex(that[thatIdx], row, false); // maintain local indexes\n\n                // Check for an 'overflow' they case for displaying the table\n                _fnLengthOverflow(settings);\n            });\n        });\n\n\n        _api_register('rows.add()', function (rows) {\n            var newRows = this.iterator('table', function (settings) {\n                var row, i, ien;\n                var out = [];\n\n                for (i = 0, ien = rows.length; i < ien; i++) {\n                    row = rows[i];\n\n                    if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n                        out.push(_fnAddTr(settings, row)[0]);\n                    }\n                    else {\n                        out.push(_fnAddData(settings, row));\n                    }\n                }\n\n                return out;\n            }, 1);\n\n            // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n            var modRows = this.rows(-1);\n            modRows.pop();\n            modRows.push.apply(modRows, newRows.toArray());\n\n            return modRows;\n        });\n\n\n        /**\n         *\n         */\n        _api_register('row()', function (selector, opts) {\n            return _selector_first(this.rows(selector, opts));\n        });\n\n\n        _api_register('row().data()', function (data) {\n            var ctx = this.context;\n\n            if (data === undefined) {\n                // Get\n                return ctx.length && this.length ?\n                    ctx[0].aoData[this[0]]._aData :\n                    undefined;\n            }\n\n            // Set\n            ctx[0].aoData[this[0]]._aData = data;\n\n            // Automatically invalidate\n            _fnInvalidate(ctx[0], this[0], 'data');\n\n            return this;\n        });\n\n\n        _api_register('row().node()', function () {\n            var ctx = this.context;\n\n            return ctx.length && this.length ?\n            ctx[0].aoData[this[0]].nTr || null :\n                null;\n        });\n\n\n        _api_register('row.add()', function (row) {\n            // Allow a jQuery object to be passed in - only a single row is added from\n            // it though - the first element in the set\n            if (row instanceof $ && row.length) {\n                row = row[0];\n            }\n\n            var rows = this.iterator('table', function (settings) {\n                if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n                    return _fnAddTr(settings, row)[0];\n                }\n                return _fnAddData(settings, row);\n            });\n\n            // Return an Api.rows() extended instance, with the newly added row selected\n            return this.row(rows[0]);\n        });\n\n\n        var __details_add = function (ctx, row, data, klass) {\n            // Convert to array of TR elements\n            var rows = [];\n            var addRow = function (r, k) {\n                // If we get a TR element, then just add it directly - up to the dev\n                // to add the correct number of columns etc\n                if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n                    rows.push(r);\n                }\n                else {\n                    // Otherwise create a row with a wrapper\n                    var created = $('<tr><td/></tr>').addClass(k);\n                    $('td', created)\n                        .addClass(k)\n                        .html(r)\n                        [0].colSpan = _fnVisbleColumns(ctx);\n\n                    rows.push(created[0]);\n                }\n            };\n\n            if ($.isArray(data) || data instanceof $) {\n                for (var i = 0, ien = data.length; i < ien; i++) {\n                    addRow(data[i], klass);\n                }\n            }\n            else {\n                addRow(data, klass);\n            }\n\n            if (row._details) {\n                row._details.remove();\n            }\n\n            row._details = $(rows);\n\n            // If the children were already shown, that state should be retained\n            if (row._detailsShow) {\n                row._details.insertAfter(row.nTr);\n            }\n        };\n\n\n        var __details_remove = function (api, idx) {\n            var ctx = api.context;\n\n            if (ctx.length) {\n                var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n\n                if (row._details) {\n                    row._details.remove();\n\n                    row._detailsShow = undefined;\n                    row._details = undefined;\n                }\n            }\n        };\n\n\n        var __details_display = function (api, show) {\n            var ctx = api.context;\n\n            if (ctx.length && api.length) {\n                var row = ctx[0].aoData[api[0]];\n\n                if (row._details) {\n                    row._detailsShow = show;\n\n                    if (show) {\n                        row._details.insertAfter(row.nTr);\n                    }\n                    else {\n                        row._details.detach();\n                    }\n\n                    __details_events(ctx[0]);\n                }\n            }\n        };\n\n\n        var __details_events = function (settings) {\n            var api = new _Api(settings);\n            var namespace = '.dt.DT_details';\n            var drawEvent = 'draw' + namespace;\n            var colvisEvent = 'column-visibility' + namespace;\n            var destroyEvent = 'destroy' + namespace;\n            var data = settings.aoData;\n\n            api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n\n            if (_pluck(data, '_details').length > 0) {\n                // On each draw, insert the required elements into the document\n                api.on(drawEvent, function (e, ctx) {\n                    if (settings !== ctx) {\n                        return;\n                    }\n\n                    api.rows({page: 'current'}).eq(0).each(function (idx) {\n                        // Internal data grab\n                        var row = data[idx];\n\n                        if (row._detailsShow) {\n                            row._details.insertAfter(row.nTr);\n                        }\n                    });\n                });\n\n                // Column visibility change - update the colspan\n                api.on(colvisEvent, function (e, ctx, idx, vis) {\n                    if (settings !== ctx) {\n                        return;\n                    }\n\n                    // Update the colspan for the details rows (note, only if it already has\n                    // a colspan)\n                    var row, visible = _fnVisbleColumns(ctx);\n\n                    for (var i = 0, ien = data.length; i < ien; i++) {\n                        row = data[i];\n\n                        if (row._details) {\n                            row._details.children('td[colspan]').attr('colspan', visible);\n                        }\n                    }\n                });\n\n                // Table destroyed - nuke any child rows\n                api.on(destroyEvent, function (e, ctx) {\n                    if (settings !== ctx) {\n                        return;\n                    }\n\n                    for (var i = 0, ien = data.length; i < ien; i++) {\n                        if (data[i]._details) {\n                            __details_remove(api, i);\n                        }\n                    }\n                });\n            }\n        };\n\n        // Strings for the method names to help minification\n        var _emp = '';\n        var _child_obj = _emp + 'row().child';\n        var _child_mth = _child_obj + '()';\n\n        // data can be:\n        //  tr\n        //  string\n        //  jQuery or array of any of the above\n        _api_register(_child_mth, function (data, klass) {\n            var ctx = this.context;\n\n            if (data === undefined) {\n                // get\n                return ctx.length && this.length ?\n                    ctx[0].aoData[this[0]]._details :\n                    undefined;\n            }\n            else if (data === true) {\n                // show\n                this.child.show();\n            }\n            else if (data === false) {\n                // remove\n                __details_remove(this);\n            }\n            else if (ctx.length && this.length) {\n                // set\n                __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n            }\n\n            return this;\n        });\n\n\n        _api_register([\n            _child_obj + '.show()',\n            _child_mth + '.show()' // only when `child()` was called with parameters (without\n        ], function (show) {   // it returns an object and this method is not executed)\n            __details_display(this, true);\n            return this;\n        });\n\n\n        _api_register([\n            _child_obj + '.hide()',\n            _child_mth + '.hide()' // only when `child()` was called with parameters (without\n        ], function () {         // it returns an object and this method is not executed)\n            __details_display(this, false);\n            return this;\n        });\n\n\n        _api_register([\n            _child_obj + '.remove()',\n            _child_mth + '.remove()' // only when `child()` was called with parameters (without\n        ], function () {           // it returns an object and this method is not executed)\n            __details_remove(this);\n            return this;\n        });\n\n\n        _api_register(_child_obj + '.isShown()', function () {\n            var ctx = this.context;\n\n            if (ctx.length && this.length) {\n                // _detailsShown as false or undefined will fall through to return false\n                return ctx[0].aoData[this[0]]._detailsShow || false;\n            }\n            return false;\n        });\n\n\n        /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n         * Columns\n         *\n         * {integer}           - column index (>=0 count from left, <0 count from right)\n         * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n         * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n         * \"{string}:name\"     - column name\n         * \"{string}\"          - jQuery selector on column header nodes\n         *\n         */\n\n        // can be an array of these items, comma separated list, or an array of comma\n        // separated lists\n\n        var __re_column_selector = /^(.+):(name|visIdx|visible)$/;\n\n\n        // r1 and r2 are redundant - but it means that the parameters match for the\n        // iterator callback in columns().data()\n        var __columnData = function (settings, column, r1, r2, rows) {\n            var a = [];\n            for (var row = 0, ien = rows.length; row < ien; row++) {\n                a.push(_fnGetCellData(settings, rows[row], column));\n            }\n            return a;\n        };\n\n\n        var __column_selector = function (settings, selector, opts) {\n            var\n                columns = settings.aoColumns,\n                names = _pluck(columns, 'sName'),\n                nodes = _pluck(columns, 'nTh');\n\n            return _selector_run(selector, function (s) {\n                var selInt = _intVal(s);\n\n                // Selector - all\n                if (s === '') {\n                    return _range(columns.length);\n                }\n\n                // Selector - index\n                if (selInt !== null) {\n                    return [selInt >= 0 ?\n                        selInt : // Count from left\n                    columns.length + selInt // Count from right (+ because its a negative value)\n                    ];\n                }\n\n                // Selector = function\n                if (typeof s === 'function') {\n                    var rows = _selector_row_indexes(settings, opts);\n\n                    return $.map(columns, function (col, idx) {\n                        return s(\n                            idx,\n                            __columnData(settings, idx, 0, 0, rows),\n                            nodes[idx]\n                        ) ? idx : null;\n                    });\n                }\n\n                // jQuery or string selector\n                var match = typeof s === 'string' ?\n                    s.match(__re_column_selector) :\n                    '';\n\n                if (match) {\n                    switch (match[2]) {\n                        case 'visIdx':\n                        case 'visible':\n                            var idx = parseInt(match[1], 10);\n                            // Visible index given, convert to column index\n                            if (idx < 0) {\n                                // Counting from the right\n                                var visColumns = $.map(columns, function (col, i) {\n                                    return col.bVisible ? i : null;\n                                });\n                                return [visColumns[visColumns.length + idx]];\n                            }\n                            // Counting from the left\n                            return [_fnVisibleToColumnIndex(settings, idx)];\n\n                        case 'name':\n                            // match by name. `names` is column index complete and in order\n                            return $.map(names, function (name, i) {\n                                return name === match[1] ? i : null;\n                            });\n                    }\n                }\n                else {\n                    // jQuery selector on the TH elements for the columns\n                    return $(nodes)\n                        .filter(s)\n                        .map(function () {\n                            return $.inArray(this, nodes); // `nodes` is column index complete and in order\n                        })\n                        .toArray();\n                }\n            });\n        };\n\n\n        var __setColumnVis = function (settings, column, vis, recalc) {\n            var\n                cols = settings.aoColumns,\n                col = cols[column],\n                data = settings.aoData,\n                row, cells, i, ien, tr;\n\n            // Get\n            if (vis === undefined) {\n                return col.bVisible;\n            }\n\n            // Set\n            // No change\n            if (col.bVisible === vis) {\n                return;\n            }\n\n            if (vis) {\n                // Insert column\n                // Need to decide if we should use appendChild or insertBefore\n                var insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1);\n\n                for (i = 0, ien = data.length; i < ien; i++) {\n                    tr = data[i].nTr;\n                    cells = data[i].anCells;\n\n                    if (tr) {\n                        // insertBefore can act like appendChild if 2nd arg is null\n                        tr.insertBefore(cells[column], cells[insertBefore] || null);\n                    }\n                }\n            }\n            else {\n                // Remove column\n                $(_pluck(settings.aoData, 'anCells', column)).detach();\n            }\n\n            // Common actions\n            col.bVisible = vis;\n            _fnDrawHead(settings, settings.aoHeader);\n            _fnDrawHead(settings, settings.aoFooter);\n\n            if (recalc === undefined || recalc) {\n                // Automatically adjust column sizing\n                _fnAdjustColumnSizing(settings);\n\n                // Realign columns for scrolling\n                if (settings.oScroll.sX || settings.oScroll.sY) {\n                    _fnScrollDraw(settings);\n                }\n            }\n\n            _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis]);\n\n            _fnSaveState(settings);\n        };\n\n\n        /**\n         *\n         */\n        _api_register('columns()', function (selector, opts) {\n            // argument shifting\n            if (selector === undefined) {\n                selector = '';\n            }\n            else if ($.isPlainObject(selector)) {\n                opts = selector;\n                selector = '';\n            }\n\n            opts = _selector_opts(opts);\n\n            var inst = this.iterator('table', function (settings) {\n                return __column_selector(settings, selector, opts);\n            }, 1);\n\n            // Want argument shifting here and in _row_selector?\n            inst.selector.cols = selector;\n            inst.selector.opts = opts;\n\n            return inst;\n        });\n\n\n        /**\n         *\n         */\n        _api_registerPlural('columns().header()', 'column().header()', function (selector, opts) {\n            return this.iterator('column', function (settings, column) {\n                return settings.aoColumns[column].nTh;\n            }, 1);\n        });\n\n\n        /**\n         *\n         */\n        _api_registerPlural('columns().footer()', 'column().footer()', function (selector, opts) {\n            return this.iterator('column', function (settings, column) {\n                return settings.aoColumns[column].nTf;\n            }, 1);\n        });\n\n\n        /**\n         *\n         */\n        _api_registerPlural('columns().data()', 'column().data()', function () {\n            return this.iterator('column-rows', __columnData, 1);\n        });\n\n\n        _api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n            return this.iterator('column', function (settings, column) {\n                return settings.aoColumns[column].mData;\n            }, 1);\n        });\n\n\n        _api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n            return this.iterator('column-rows', function (settings, column, i, j, rows) {\n                return _pluck_order(settings.aoData, rows,\n                    type === 'search' ? '_aFilterData' : '_aSortData', column\n                );\n            }, 1);\n        });\n\n\n        _api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n            return this.iterator('column-rows', function (settings, column, i, j, rows) {\n                return _pluck_order(settings.aoData, rows, 'anCells', column);\n            }, 1);\n        });\n\n\n        _api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n            return this.iterator('column', function (settings, column) {\n                if (vis === undefined) {\n                    return settings.aoColumns[column].bVisible;\n                } // else\n                __setColumnVis(settings, column, vis, calc);\n            });\n        });\n\n\n        _api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n            return this.iterator('column', function (settings, column) {\n                return type === 'visible' ?\n                    _fnColumnIndexToVisible(settings, column) :\n                    column;\n            }, 1);\n        });\n\n\n        // _api_register( 'columns().show()', function () {\n        // \tvar selector = this.selector;\n        // \treturn this.columns( selector.cols, selector.opts ).visible( true );\n        // } );\n\n\n        // _api_register( 'columns().hide()', function () {\n        // \tvar selector = this.selector;\n        // \treturn this.columns( selector.cols, selector.opts ).visible( false );\n        // } );\n\n\n        _api_register('columns.adjust()', function () {\n            return this.iterator('table', function (settings) {\n                _fnAdjustColumnSizing(settings);\n            }, 1);\n        });\n\n\n        // Convert from one column index type, to another type\n        _api_register('column.index()', function (type, idx) {\n            if (this.context.length !== 0) {\n                var ctx = this.context[0];\n\n                if (type === 'fromVisible' || type === 'toData') {\n                    return _fnVisibleToColumnIndex(ctx, idx);\n                }\n                else if (type === 'fromData' || type === 'toVisible') {\n                    return _fnColumnIndexToVisible(ctx, idx);\n                }\n            }\n        });\n\n\n        _api_register('column()', function (selector, opts) {\n            return _selector_first(this.columns(selector, opts));\n        });\n\n\n        var __cell_selector = function (settings, selector, opts) {\n            var data = settings.aoData;\n            var rows = _selector_row_indexes(settings, opts);\n            var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n            var allCells = $([].concat.apply([], cells));\n            var row;\n            var columns = settings.aoColumns.length;\n            var a, i, ien, j, o, host;\n\n            return _selector_run(selector, function (s) {\n                var fnSelector = typeof s === 'function';\n\n                if (s === null || s === undefined || fnSelector) {\n                    // All cells and function selectors\n                    a = [];\n\n                    for (i = 0, ien = rows.length; i < ien; i++) {\n                        row = rows[i];\n\n                        for (j = 0; j < columns; j++) {\n                            o = {\n                                row: row,\n                                column: j\n                            };\n\n                            if (fnSelector) {\n                                // Selector - function\n                                host = settings.aoData[row];\n\n                                if (s(o, _fnGetCellData(settings, row, j), host.anCells[j])) {\n                                    a.push(o);\n                                }\n                            }\n                            else {\n                                // Selector - all\n                                a.push(o);\n                            }\n                        }\n                    }\n\n                    return a;\n                }\n\n                // Selector - index\n                if ($.isPlainObject(s)) {\n                    return [s];\n                }\n\n                // Selector - jQuery filtered cells\n                return allCells\n                    .filter(s)\n                    .map(function (i, el) {\n                        row = el.parentNode._DT_RowIndex;\n\n                        return {\n                            row: row,\n                            column: $.inArray(el, data[row].anCells)\n                        };\n                    })\n                    .toArray();\n            });\n        };\n\n\n        _api_register('cells()', function (rowSelector, columnSelector, opts) {\n            // Argument shifting\n            if ($.isPlainObject(rowSelector)) {\n                // Indexes\n                if (typeof rowSelector.row !== undefined) {\n                    opts = columnSelector;\n                    columnSelector = null;\n                }\n                else {\n                    opts = rowSelector;\n                    rowSelector = null;\n                }\n            }\n            if ($.isPlainObject(columnSelector)) {\n                opts = columnSelector;\n                columnSelector = null;\n            }\n\n            // Cell selector\n            if (columnSelector === null || columnSelector === undefined) {\n                return this.iterator('table', function (settings) {\n                    return __cell_selector(settings, rowSelector, _selector_opts(opts));\n                });\n            }\n\n            // Row + column selector\n            var columns = this.columns(columnSelector, opts);\n            var rows = this.rows(rowSelector, opts);\n            var a, i, ien, j, jen;\n\n            var cells = this.iterator('table', function (settings, idx) {\n                a = [];\n\n                for (i = 0, ien = rows[idx].length; i < ien; i++) {\n                    for (j = 0, jen = columns[idx].length; j < jen; j++) {\n                        a.push({\n                            row: rows[idx][i],\n                            column: columns[idx][j]\n                        });\n                    }\n                }\n\n                return a;\n            }, 1);\n\n            $.extend(cells.selector, {\n                cols: columnSelector,\n                rows: rowSelector,\n                opts: opts\n            });\n\n            return cells;\n        });\n\n\n        _api_registerPlural('cells().nodes()', 'cell().node()', function () {\n            return this.iterator('cell', function (settings, row, column) {\n                var cells = settings.aoData[row].anCells;\n                return cells ?\n                    cells[column] :\n                    undefined;\n            }, 1);\n        });\n\n\n        _api_register('cells().data()', function () {\n            return this.iterator('cell', function (settings, row, column) {\n                return _fnGetCellData(settings, row, column);\n            }, 1);\n        });\n\n\n        _api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n            type = type === 'search' ? '_aFilterData' : '_aSortData';\n\n            return this.iterator('cell', function (settings, row, column) {\n                return settings.aoData[row][type][column];\n            }, 1);\n        });\n\n\n        _api_registerPlural('cells().render()', 'cell().render()', function (type) {\n            return this.iterator('cell', function (settings, row, column) {\n                return _fnGetCellData(settings, row, column, type);\n            }, 1);\n        });\n\n\n        _api_registerPlural('cells().indexes()', 'cell().index()', function () {\n            return this.iterator('cell', function (settings, row, column) {\n                return {\n                    row: row,\n                    column: column,\n                    columnVisible: _fnColumnIndexToVisible(settings, column)\n                };\n            }, 1);\n        });\n\n\n        _api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n            return this.iterator('cell', function (settings, row, column) {\n                _fnInvalidate(settings, row, src, column);\n            });\n        });\n\n\n        _api_register('cell()', function (rowSelector, columnSelector, opts) {\n            return _selector_first(this.cells(rowSelector, columnSelector, opts));\n        });\n\n\n        _api_register('cell().data()', function (data) {\n            var ctx = this.context;\n            var cell = this[0];\n\n            if (data === undefined) {\n                // Get\n                return ctx.length && cell.length ?\n                    _fnGetCellData(ctx[0], cell[0].row, cell[0].column) :\n                    undefined;\n            }\n\n            // Set\n            _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n            _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n\n            return this;\n        });\n\n\n        /**\n         * Get current ordering (sorting) that has been applied to the table.\n         *\n         * @returns {array} 2D array containing the sorting information for the first\n         *   table in the current context. Each element in the parent array represents\n         *   a column being sorted upon (i.e. multi-sorting with two columns would have\n         *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n         *   the column index that the sorting condition applies to, the second is the\n         *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n         *   index of the sorting order from the `column.sorting` initialisation array.\n         */\n        /**\n         * Set the ordering for the table.\n         *\n         * @param {integer} order Column index to sort upon.\n         * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n         * @returns {DataTables.Api} this\n         */\n        /**\n         * Set the ordering for the table.\n         *\n         * @param {array} order 1D array of sorting information to be applied.\n         * @param {array} [...] Optional additional sorting conditions\n         * @returns {DataTables.Api} this\n         */\n        /**\n         * Set the ordering for the table.\n         *\n         * @param {array} order 2D array of sorting information to be applied.\n         * @returns {DataTables.Api} this\n         */\n        _api_register('order()', function (order, dir) {\n            var ctx = this.context;\n\n            if (order === undefined) {\n                // get\n                return ctx.length !== 0 ?\n                    ctx[0].aaSorting :\n                    undefined;\n            }\n\n            // set\n            if (typeof order === 'number') {\n                // Simple column / direction passed in\n                order = [[order, dir]];\n            }\n            else if (!$.isArray(order[0])) {\n                // Arguments passed in (list of 1D arrays)\n                order = Array.prototype.slice.call(arguments);\n            }\n            // otherwise a 2D array was passed in\n\n            return this.iterator('table', function (settings) {\n                settings.aaSorting = order.slice();\n            });\n        });\n\n\n        /**\n         * Attach a sort listener to an element for a given column\n         *\n         * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n         *   listener to. This can take the form of a single DOM node, a jQuery\n         *   collection of nodes or a jQuery selector which will identify the node(s).\n         * @param {integer} column the column that a click on this node will sort on\n         * @param {function} [callback] callback function when sort is run\n         * @returns {DataTables.Api} this\n         */\n        _api_register('order.listener()', function (node, column, callback) {\n            return this.iterator('table', function (settings) {\n                _fnSortAttachListener(settings, node, column, callback);\n            });\n        });\n\n\n        // Order by the selected column(s)\n        _api_register([\n            'columns().order()',\n            'column().order()'\n        ], function (dir) {\n            var that = this;\n\n            return this.iterator('table', function (settings, i) {\n                var sort = [];\n\n                $.each(that[i], function (j, col) {\n                    sort.push([col, dir]);\n                });\n\n                settings.aaSorting = sort;\n            });\n        });\n\n\n        _api_register('search()', function (input, regex, smart, caseInsen) {\n            var ctx = this.context;\n\n            if (input === undefined) {\n                // get\n                return ctx.length !== 0 ?\n                    ctx[0].oPreviousSearch.sSearch :\n                    undefined;\n            }\n\n            // set\n            return this.iterator('table', function (settings) {\n                if (!settings.oFeatures.bFilter) {\n                    return;\n                }\n\n                _fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {\n                    \"sSearch\": input + \"\",\n                    \"bRegex\": regex === null ? false : regex,\n                    \"bSmart\": smart === null ? true : smart,\n                    \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n                }), 1);\n            });\n        });\n\n\n        _api_registerPlural(\n            'columns().search()',\n            'column().search()',\n            function (input, regex, smart, caseInsen) {\n                return this.iterator('column', function (settings, column) {\n                    var preSearch = settings.aoPreSearchCols;\n\n                    if (input === undefined) {\n                        // get\n                        return preSearch[column].sSearch;\n                    }\n\n                    // set\n                    if (!settings.oFeatures.bFilter) {\n                        return;\n                    }\n\n                    $.extend(preSearch[column], {\n                        \"sSearch\": input + \"\",\n                        \"bRegex\": regex === null ? false : regex,\n                        \"bSmart\": smart === null ? true : smart,\n                        \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n                    });\n\n                    _fnFilterComplete(settings, settings.oPreviousSearch, 1);\n                });\n            }\n        );\n\n        /*\n         * State API methods\n         */\n\n        _api_register('state()', function () {\n            return this.context.length ?\n                this.context[0].oSavedState :\n                null;\n        });\n\n\n        _api_register('state.clear()', function () {\n            return this.iterator('table', function (settings) {\n                // Save an empty object\n                settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n            });\n        });\n\n\n        _api_register('state.loaded()', function () {\n            return this.context.length ?\n                this.context[0].oLoadedState :\n                null;\n        });\n\n\n        _api_register('state.save()', function () {\n            return this.iterator('table', function (settings) {\n                _fnSaveState(settings);\n            });\n        });\n\n\n        /**\n         * Provide a common method for plug-ins to check the version of DataTables being\n         * used, in order to ensure compatibility.\n         *\n         *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n         *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n         *  @returns {boolean} true if this version of DataTables is greater or equal to\n         *    the required version, or false if this version of DataTales is not\n         *    suitable\n         *  @static\n         *  @dtopt API-Static\n         *\n         *  @example\n         *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n         */\n        DataTable.versionCheck = DataTable.fnVersionCheck = function (version) {\n            var aThis = DataTable.version.split('.');\n            var aThat = version.split('.');\n            var iThis, iThat;\n\n            for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n                iThis = parseInt(aThis[i], 10) || 0;\n                iThat = parseInt(aThat[i], 10) || 0;\n\n                // Parts are the same, keep comparing\n                if (iThis === iThat) {\n                    continue;\n                }\n\n                // Parts are different, return immediately\n                return iThis > iThat;\n            }\n\n            return true;\n        };\n\n\n        /**\n         * Check if a `<table>` node is a DataTable table already or not.\n         *\n         *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n         *      selector for the table to test. Note that if more than more than one\n         *      table is passed on, only the first will be checked\n         *  @returns {boolean} true the table given is a DataTable, or false otherwise\n         *  @static\n         *  @dtopt API-Static\n         *\n         *  @example\n         *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n         */\n        DataTable.isDataTable = DataTable.fnIsDataTable = function (table) {\n            var t = $(table).get(0);\n            var is = false;\n\n            $.each(DataTable.settings, function (i, o) {\n                if (o.nTable === t || o.nScrollHead === t || o.nScrollFoot === t) {\n                    is = true;\n                }\n            });\n\n            return is;\n        };\n\n\n        /**\n         * Get all DataTable tables that have been initialised - optionally you can\n         * select to get only currently visible tables.\n         *\n         *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n         *    or visible tables only.\n         *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n         *    DataTables\n         *  @static\n         *  @dtopt API-Static\n         *\n         *  @example\n         *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n         */\n        DataTable.tables = DataTable.fnTables = function (visible) {\n            return $.map(DataTable.settings, function (o) {\n                if (!visible || (visible && $(o.nTable).is(':visible'))) {\n                    return o.nTable;\n                }\n            });\n        };\n\n\n        /**\n         * DataTables utility methods\n         *\n         * This namespace provides helper methods that DataTables uses internally to\n         * create a DataTable, but which are not exclusively used only for DataTables.\n         * These methods can be used by extension authors to save the duplication of\n         * code.\n         *\n         *  @namespace\n         */\n        DataTable.util = {\n            /**\n             * Throttle the calls to a function. Arguments and context are maintained\n             * for the throttled function.\n             *\n             * @param {function} fn Function to be called\n             * @param {integer} freq Call frequency in mS\n             * @return {function} Wrapped function\n             */\n            throttle: _fnThrottle,\n\n\n            /**\n             * Escape a string such that it can be used in a regular expression\n             *\n             *  @param {string} sVal string to escape\n             *  @returns {string} escaped string\n             */\n            escapeRegex: _fnEscapeRegex\n        };\n\n\n        /**\n         * Convert from camel case parameters to Hungarian notation. This is made public\n         * for the extensions to provide the same ability as DataTables core to accept\n         * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n         * parameters.\n         *\n         *  @param {object} src The model object which holds all parameters that can be\n         *    mapped.\n         *  @param {object} user The object to convert from camel case to Hungarian.\n         *  @param {boolean} force When set to `true`, properties which already have a\n         *    Hungarian value in the `user` object will be overwritten. Otherwise they\n         *    won't be.\n         */\n        DataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n        /**\n         *\n         */\n        _api_register('$()', function (selector, opts) {\n            var\n                rows = this.rows(opts).nodes(), // Get all rows\n                jqRows = $(rows);\n\n            return $([].concat(\n                jqRows.filter(selector).toArray(),\n                jqRows.find(selector).toArray()\n            ));\n        });\n\n\n        // jQuery functions to operate on the tables\n        $.each(['on', 'one', 'off'], function (i, key) {\n            _api_register(key + '()', function (/* event, handler */) {\n                var args = Array.prototype.slice.call(arguments);\n\n                // Add the `dt` namespace automatically if it isn't already present\n                if (!args[0].match(/\\.dt\\b/)) {\n                    args[0] += '.dt';\n                }\n\n                var inst = $(this.tables().nodes());\n                inst[key].apply(inst, args);\n                return this;\n            });\n        });\n\n\n        _api_register('clear()', function () {\n            return this.iterator('table', function (settings) {\n                _fnClearTable(settings);\n            });\n        });\n\n\n        _api_register('settings()', function () {\n            return new _Api(this.context, this.context);\n        });\n\n\n        _api_register('data()', function () {\n            return this.iterator('table', function (settings) {\n                return _pluck(settings.aoData, '_aData');\n            }).flatten();\n        });\n\n\n        _api_register('destroy()', function (remove) {\n            remove = remove || false;\n\n            return this.iterator('table', function (settings) {\n                var orig = settings.nTableWrapper.parentNode;\n                var classes = settings.oClasses;\n                var table = settings.nTable;\n                var tbody = settings.nTBody;\n                var thead = settings.nTHead;\n                var tfoot = settings.nTFoot;\n                var jqTable = $(table);\n                var jqTbody = $(tbody);\n                var jqWrapper = $(settings.nTableWrapper);\n                var rows = $.map(settings.aoData, function (r) {\n                    return r.nTr;\n                });\n                var i, ien;\n\n                // Flag to note that the table is currently being destroyed - no action\n                // should be taken\n                settings.bDestroying = true;\n\n                // Fire off the destroy callbacks for plug-ins etc\n                _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings]);\n\n                // If not being removed from the document, make all columns visible\n                if (!remove) {\n                    new _Api(settings).columns().visible(true);\n                }\n\n                // Blitz all `DT` namespaced events (these are internal events, the\n                // lowercase, `dt` events are user subscribed and they are responsible\n                // for removing them\n                jqWrapper.unbind('.DT').find(':not(tbody *)').unbind('.DT');\n                $(window).unbind('.DT-' + settings.sInstance);\n\n                // When scrolling we had to break the table up - restore it\n                if (table != thead.parentNode) {\n                    jqTable.children('thead').detach();\n                    jqTable.append(thead);\n                }\n\n                if (tfoot && table != tfoot.parentNode) {\n                    jqTable.children('tfoot').detach();\n                    jqTable.append(tfoot);\n                }\n\n                // Remove the DataTables generated nodes, events and classes\n                jqTable.detach();\n                jqWrapper.detach();\n\n                settings.aaSorting = [];\n                settings.aaSortingFixed = [];\n                _fnSortingClasses(settings);\n\n                $(rows).removeClass(settings.asStripeClasses.join(' '));\n\n                $('th, td', thead).removeClass(classes.sSortable + ' ' +\n                    classes.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone\n                );\n\n                if (settings.bJUI) {\n                    $('th span.' + classes.sSortIcon + ', td span.' + classes.sSortIcon, thead).detach();\n                    $('th, td', thead).each(function () {\n                        var wrapper = $('div.' + classes.sSortJUIWrapper, this);\n                        $(this).append(wrapper.contents());\n                        wrapper.detach();\n                    });\n                }\n\n                if (!remove && orig) {\n                    // insertBefore acts like appendChild if !arg[1]\n                    orig.insertBefore(table, settings.nTableReinsertBefore);\n                }\n\n                // Add the TR elements back into the table in their original order\n                jqTbody.children().detach();\n                jqTbody.append(rows);\n\n                // Restore the width of the original table - was read from the style property,\n                // so we can restore directly to that\n                jqTable\n                    .css('width', settings.sDestroyWidth)\n                    .removeClass(classes.sTable);\n\n                // If the were originally stripe classes - then we add them back here.\n                // Note this is not fool proof (for example if not all rows had stripe\n                // classes - but it's a good effort without getting carried away\n                ien = settings.asDestroyStripes.length;\n\n                if (ien) {\n                    jqTbody.children().each(function (i) {\n                        $(this).addClass(settings.asDestroyStripes[i % ien]);\n                    });\n                }\n\n                /* Remove the settings object from the settings array */\n                var idx = $.inArray(settings, DataTable.settings);\n                if (idx !== -1) {\n                    DataTable.settings.splice(idx, 1);\n                }\n            });\n        });\n\n\n        /**\n         * Version string for plug-ins to check compatibility. Allowed format is\n         * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n         * only for non-release builds. See http://semver.org/ for more information.\n         *  @member\n         *  @type string\n         *  @default Version number\n         */\n        DataTable.version = \"1.10.4\";\n\n        /**\n         * Private data store, containing all of the settings objects that are\n         * created for the tables on a given page.\n         *\n         * Note that the `DataTable.settings` object is aliased to\n         * `jQuery.fn.dataTableExt` through which it may be accessed and\n         * manipulated, or `jQuery.fn.dataTable.settings`.\n         *  @member\n         *  @type array\n         *  @default []\n         *  @private\n         */\n        DataTable.settings = [];\n\n        /**\n         * Object models container, for the various models that DataTables has\n         * available to it. These models define the objects that are used to hold\n         * the active state and configuration of the table.\n         *  @namespace\n         */\n        DataTable.models = {};\n\n\n        /**\n         * Template object for the way in which DataTables holds information about\n         * search information for the global filter and individual column filters.\n         *  @namespace\n         */\n        DataTable.models.oSearch = {\n            /**\n             * Flag to indicate if the filtering should be case insensitive or not\n             *  @type boolean\n             *  @default true\n             */\n            \"bCaseInsensitive\": true,\n\n            /**\n             * Applied search term\n             *  @type string\n             *  @default <i>Empty string</i>\n             */\n            \"sSearch\": \"\",\n\n            /**\n             * Flag to indicate if the search term should be interpreted as a\n             * regular expression (true) or not (false) and therefore and special\n             * regex characters escaped.\n             *  @type boolean\n             *  @default false\n             */\n            \"bRegex\": false,\n\n            /**\n             * Flag to indicate if DataTables is to use its smart filtering or not.\n             *  @type boolean\n             *  @default true\n             */\n            \"bSmart\": true\n        };\n\n\n        /**\n         * Template object for the way in which DataTables holds information about\n         * each individual row. This is the object format used for the settings\n         * aoData array.\n         *  @namespace\n         */\n        DataTable.models.oRow = {\n            /**\n             * TR element for the row\n             *  @type node\n             *  @default null\n             */\n            \"nTr\": null,\n\n            /**\n             * Array of TD elements for each row. This is null until the row has been\n             * created.\n             *  @type array nodes\n             *  @default []\n             */\n            \"anCells\": null,\n\n            /**\n             * Data object from the original data source for the row. This is either\n             * an array if using the traditional form of DataTables, or an object if\n             * using mData options. The exact type will depend on the passed in\n             * data from the data source, or will be an array if using DOM a data\n             * source.\n             *  @type array|object\n             *  @default []\n             */\n            \"_aData\": [],\n\n            /**\n             * Sorting data cache - this array is ostensibly the same length as the\n             * number of columns (although each index is generated only as it is\n             * needed), and holds the data that is used for sorting each column in the\n             * row. We do this cache generation at the start of the sort in order that\n             * the formatting of the sort data need be done only once for each cell\n             * per sort. This array should not be read from or written to by anything\n             * other than the master sorting methods.\n             *  @type array\n             *  @default null\n             *  @private\n             */\n            \"_aSortData\": null,\n\n            /**\n             * Per cell filtering data cache. As per the sort data cache, used to\n             * increase the performance of the filtering in DataTables\n             *  @type array\n             *  @default null\n             *  @private\n             */\n            \"_aFilterData\": null,\n\n            /**\n             * Filtering data cache. This is the same as the cell filtering cache, but\n             * in this case a string rather than an array. This is easily computed with\n             * a join on `_aFilterData`, but is provided as a cache so the join isn't\n             * needed on every search (memory traded for performance)\n             *  @type array\n             *  @default null\n             *  @private\n             */\n            \"_sFilterRow\": null,\n\n            /**\n             * Cache of the class name that DataTables has applied to the row, so we\n             * can quickly look at this variable rather than needing to do a DOM check\n             * on className for the nTr property.\n             *  @type string\n             *  @default <i>Empty string</i>\n             *  @private\n             */\n            \"_sRowStripe\": \"\",\n\n            /**\n             * Denote if the original data source was from the DOM, or the data source\n             * object. This is used for invalidating data, so DataTables can\n             * automatically read data from the original source, unless uninstructed\n             * otherwise.\n             *  @type string\n             *  @default null\n             *  @private\n             */\n            \"src\": null\n        };\n\n\n        /**\n         * Template object for the column information object in DataTables. This object\n         * is held in the settings aoColumns array and contains all the information that\n         * DataTables needs about each individual column.\n         *\n         * Note that this object is related to {@link DataTable.defaults.column}\n         * but this one is the internal data store for DataTables's cache of columns.\n         * It should NOT be manipulated outside of DataTables. Any configuration should\n         * be done through the initialisation options.\n         *  @namespace\n         */\n        DataTable.models.oColumn = {\n            /**\n             * Column index. This could be worked out on-the-fly with $.inArray, but it\n             * is faster to just hold it as a variable\n             *  @type integer\n             *  @default null\n             */\n            \"idx\": null,\n\n            /**\n             * A list of the columns that sorting should occur on when this column\n             * is sorted. That this property is an array allows multi-column sorting\n             * to be defined for a column (for example first name / last name columns\n             * would benefit from this). The values are integers pointing to the\n             * columns to be sorted on (typically it will be a single integer pointing\n             * at itself, but that doesn't need to be the case).\n             *  @type array\n             */\n            \"aDataSort\": null,\n\n            /**\n             * Define the sorting directions that are applied to the column, in sequence\n             * as the column is repeatedly sorted upon - i.e. the first value is used\n             * as the sorting direction when the column if first sorted (clicked on).\n             * Sort it again (click again) and it will move on to the next index.\n             * Repeat until loop.\n             *  @type array\n             */\n            \"asSorting\": null,\n\n            /**\n             * Flag to indicate if the column is searchable, and thus should be included\n             * in the filtering or not.\n             *  @type boolean\n             */\n            \"bSearchable\": null,\n\n            /**\n             * Flag to indicate if the column is sortable or not.\n             *  @type boolean\n             */\n            \"bSortable\": null,\n\n            /**\n             * Flag to indicate if the column is currently visible in the table or not\n             *  @type boolean\n             */\n            \"bVisible\": null,\n\n            /**\n             * Store for manual type assignment using the `column.type` option. This\n             * is held in store so we can manipulate the column's `sType` property.\n             *  @type string\n             *  @default null\n             *  @private\n             */\n            \"_sManualType\": null,\n\n            /**\n             * Flag to indicate if HTML5 data attributes should be used as the data\n             * source for filtering or sorting. True is either are.\n             *  @type boolean\n             *  @default false\n             *  @private\n             */\n            \"_bAttrSrc\": false,\n\n            /**\n             * Developer definable function that is called whenever a cell is created (Ajax source,\n             * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n             * allowing you to modify the DOM element (add background colour for example) when the\n             * element is available.\n             *  @type function\n             *  @param {element} nTd The TD node that has been created\n             *  @param {*} sData The Data for the cell\n             *  @param {array|object} oData The data for the whole row\n             *  @param {int} iRow The row index for the aoData data store\n             *  @default null\n             */\n            \"fnCreatedCell\": null,\n\n            /**\n             * Function to get data from a cell in a column. You should <b>never</b>\n             * access data directly through _aData internally in DataTables - always use\n             * the method attached to this property. It allows mData to function as\n             * required. This function is automatically assigned by the column\n             * initialisation method\n             *  @type function\n             *  @param {array|object} oData The data array/object for the array\n             *    (i.e. aoData[]._aData)\n             *  @param {string} sSpecific The specific data type you want to get -\n             *    'display', 'type' 'filter' 'sort'\n             *  @returns {*} The data for the cell from the given row's data\n             *  @default null\n             */\n            \"fnGetData\": null,\n\n            /**\n             * Function to set data for a cell in the column. You should <b>never</b>\n             * set the data directly to _aData internally in DataTables - always use\n             * this method. It allows mData to function as required. This function\n             * is automatically assigned by the column initialisation method\n             *  @type function\n             *  @param {array|object} oData The data array/object for the array\n             *    (i.e. aoData[]._aData)\n             *  @param {*} sValue Value to set\n             *  @default null\n             */\n            \"fnSetData\": null,\n\n            /**\n             * Property to read the value for the cells in the column from the data\n             * source array / object. If null, then the default content is used, if a\n             * function is given then the return from the function is used.\n             *  @type function|int|string|null\n             *  @default null\n             */\n            \"mData\": null,\n\n            /**\n             * Partner property to mData which is used (only when defined) to get\n             * the data - i.e. it is basically the same as mData, but without the\n             * 'set' option, and also the data fed to it is the result from mData.\n             * This is the rendering method to match the data method of mData.\n             *  @type function|int|string|null\n             *  @default null\n             */\n            \"mRender\": null,\n\n            /**\n             * Unique header TH/TD element for this column - this is what the sorting\n             * listener is attached to (if sorting is enabled.)\n             *  @type node\n             *  @default null\n             */\n            \"nTh\": null,\n\n            /**\n             * Unique footer TH/TD element for this column (if there is one). Not used\n             * in DataTables as such, but can be used for plug-ins to reference the\n             * footer for each column.\n             *  @type node\n             *  @default null\n             */\n            \"nTf\": null,\n\n            /**\n             * The class to apply to all TD elements in the table's TBODY for the column\n             *  @type string\n             *  @default null\n             */\n            \"sClass\": null,\n\n            /**\n             * When DataTables calculates the column widths to assign to each column,\n             * it finds the longest string in each column and then constructs a\n             * temporary table and reads the widths from that. The problem with this\n             * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n             * string - thus the calculation can go wrong (doing it properly and putting\n             * it into an DOM object and measuring that is horribly(!) slow). Thus as\n             * a \"work around\" we provide this option. It will append its value to the\n             * text that is found to be the longest string for the column - i.e. padding.\n             *  @type string\n             */\n            \"sContentPadding\": null,\n\n            /**\n             * Allows a default value to be given for a column's data, and will be used\n             * whenever a null data source is encountered (this can be because mData\n             * is set to null, or because the data source itself is null).\n             *  @type string\n             *  @default null\n             */\n            \"sDefaultContent\": null,\n\n            /**\n             * Name for the column, allowing reference to the column by name as well as\n             * by index (needs a lookup to work by name).\n             *  @type string\n             */\n            \"sName\": null,\n\n            /**\n             * Custom sorting data type - defines which of the available plug-ins in\n             * afnSortData the custom sorting will use - if any is defined.\n             *  @type string\n             *  @default std\n             */\n            \"sSortDataType\": 'std',\n\n            /**\n             * Class to be applied to the header element when sorting on this column\n             *  @type string\n             *  @default null\n             */\n            \"sSortingClass\": null,\n\n            /**\n             * Class to be applied to the header element when sorting on this column -\n             * when jQuery UI theming is used.\n             *  @type string\n             *  @default null\n             */\n            \"sSortingClassJUI\": null,\n\n            /**\n             * Title of the column - what is seen in the TH element (nTh).\n             *  @type string\n             */\n            \"sTitle\": null,\n\n            /**\n             * Column sorting and filtering type\n             *  @type string\n             *  @default null\n             */\n            \"sType\": null,\n\n            /**\n             * Width of the column\n             *  @type string\n             *  @default null\n             */\n            \"sWidth\": null,\n\n            /**\n             * Width of the column when it was first \"encountered\"\n             *  @type string\n             *  @default null\n             */\n            \"sWidthOrig\": null\n        };\n\n\n        /*\n         * Developer note: The properties of the object below are given in Hungarian\n         * notation, that was used as the interface for DataTables prior to v1.10, however\n         * from v1.10 onwards the primary interface is camel case. In order to avoid\n         * breaking backwards compatibility utterly with this change, the Hungarian\n         * version is still, internally the primary interface, but is is not documented\n         * - hence the @name tags in each doc comment. This allows a Javascript function\n         * to create a map from Hungarian notation to camel case (going the other direction\n         * would require each property to be listed, which would at around 3K to the size\n         * of DataTables, while this method is about a 0.5K hit.\n         *\n         * Ultimately this does pave the way for Hungarian notation to be dropped\n         * completely, but that is a massive amount of work and will break current\n         * installs (therefore is on-hold until v2).\n         */\n\n        /**\n         * Initialisation options that can be given to DataTables at initialisation\n         * time.\n         *  @namespace\n         */\n        DataTable.defaults = {\n            /**\n             * An array of data to use for the table, passed in at initialisation which\n             * will be used in preference to any data which is already in the DOM. This is\n             * particularly useful for constructing tables purely in Javascript, for\n             * example with a custom Ajax call.\n             *  @type array\n             *  @default null\n             *\n             *  @dtopt Option\n             *  @name DataTable.defaults.data\n             *\n             *  @example\n             *    // Using a 2D array data source\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using an array of objects as a data source (`data`)\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"aaData\": null,\n\n\n            /**\n             * If ordering is enabled, then DataTables will perform a first pass sort on\n             * initialisation. You can define which column(s) the sort is performed\n             * upon, and the sorting direction, with this variable. The `sorting` array\n             * should contain an array for each column to be sorted initially containing\n             * the column's index and a direction string ('asc' or 'desc').\n             *  @type array\n             *  @default [[0,'asc']]\n             *\n             *  @dtopt Option\n             *  @name DataTable.defaults.order\n             *\n             *  @example\n             *    // Sort by 3rd column first, and then 4th column\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n             *\n             *    // No initial sorting\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n             */\n            \"aaSorting\": [[0, 'asc']],\n\n\n            /**\n             * This parameter is basically identical to the `sorting` parameter, but\n             * cannot be overridden by user interaction with the table. What this means\n             * is that you could have a column (visible or hidden) which the sorting\n             * will always be forced on first - any sorting after that (from the user)\n             * will then be performed as required. This can be useful for grouping rows\n             * together.\n             *  @type array\n             *  @default null\n             *\n             *  @dtopt Option\n             *  @name DataTable.defaults.orderFixed\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n             */\n            \"aaSortingFixed\": [],\n\n\n            /**\n             * DataTables can be instructed to load data to display in the table from a\n             * Ajax source. This option defines how that Ajax call is made and where to.\n             *\n             * The `ajax` property has three different modes of operation, depending on\n             * how it is defined. These are:\n             *\n             * * `string` - Set the URL from where the data should be loaded from.\n             * * `object` - Define properties for `jQuery.ajax`.\n             * * `function` - Custom data get function\n             *\n             * `string`\n             * --------\n             *\n             * As a string, the `ajax` property simply defines the URL from which\n             * DataTables will load data.\n             *\n             * `object`\n             * --------\n             *\n             * As an object, the parameters in the object are passed to\n             * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n             * of the Ajax request. DataTables has a number of default parameters which\n             * you can override using this option. Please refer to the jQuery\n             * documentation for a full description of the options available, although\n             * the following parameters provide additional options in DataTables or\n             * require special consideration:\n             *\n             * * `data` - As with jQuery, `data` can be provided as an object, but it\n             *   can also be used as a function to manipulate the data DataTables sends\n             *   to the server. The function takes a single parameter, an object of\n             *   parameters with the values that DataTables has readied for sending. An\n             *   object may be returned which will be merged into the DataTables\n             *   defaults, or you can add the items to the object that was passed in and\n             *   not return anything from the function. This supersedes `fnServerParams`\n             *   from DataTables 1.9-.\n             *\n             * * `dataSrc` - By default DataTables will look for the property `data` (or\n             *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n             *   from an Ajax source or for server-side processing - this parameter\n             *   allows that property to be changed. You can use Javascript dotted\n             *   object notation to get a data source for multiple levels of nesting, or\n             *   it my be used as a function. As a function it takes a single parameter,\n             *   the JSON returned from the server, which can be manipulated as\n             *   required, with the returned value being that used by DataTables as the\n             *   data source for the table. This supersedes `sAjaxDataProp` from\n             *   DataTables 1.9-.\n             *\n             * * `success` - Should not be overridden it is used internally in\n             *   DataTables. To manipulate / transform the data returned by the server\n             *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n             *\n             * `function`\n             * ----------\n             *\n             * As a function, making the Ajax call is left up to yourself allowing\n             * complete control of the Ajax request. Indeed, if desired, a method other\n             * than Ajax could be used to obtain the required data, such as Web storage\n             * or an AIR database.\n             *\n             * The function is given four parameters and no return is required. The\n             * parameters are:\n             *\n             * 1. _object_ - Data to send to the server\n             * 2. _function_ - Callback function that must be executed when the required\n             *    data has been obtained. That data should be passed into the callback\n             *    as the only parameter\n             * 3. _object_ - DataTables settings object for the table\n             *\n             * Note that this supersedes `fnServerData` from DataTables 1.9-.\n             *\n             *  @type string|object|function\n             *  @default null\n             *\n             *  @dtopt Option\n             *  @name DataTable.defaults.ajax\n             *  @since 1.10.0\n             *\n             * @example\n             *   // Get JSON data from a file via Ajax.\n             *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n             *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n             *\n             * @example\n             *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n             *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n             *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n             *\n             * @example\n             *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n             *   // from a plain array rather than an array in an object\n             *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n             *\n             * @example\n             *   // Manipulate the data returned from the server - add a link to data\n             *   // (note this can, should, be done using `render` for the column - this\n             *   // is just a simple example of how the data can be manipulated).\n             *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n             *\n             * @example\n             *   // Add data to the request\n             *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n             *\n             * @example\n             *   // Send request as POST\n             *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n             *\n             * @example\n             *   // Get the data from localStorage (could interface with a form for\n             *   // adding, editing and removing rows).\n             *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n             */\n            \"ajax\": null,\n\n\n            /**\n             * This parameter allows you to readily specify the entries in the length drop\n             * down menu that DataTables shows when pagination is enabled. It can be\n             * either a 1D array of options which will be used for both the displayed\n             * option and the value, or a 2D array which will use the array in the first\n             * position as the value, and the array in the second position as the\n             * displayed options (useful for language strings such as 'All').\n             *\n             * Note that the `pageLength` property will be automatically set to the\n             * first value given in this array, unless `pageLength` is also provided.\n             *  @type array\n             *  @default [ 10, 25, 50, 100 ]\n             *\n             *  @dtopt Option\n             *  @name DataTable.defaults.lengthMenu\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"aLengthMenu\": [10, 25, 50, 100],\n\n\n            /**\n             * The `columns` option in the initialisation parameter allows you to define\n             * details about the way individual columns behave. For a full list of\n             * column options that can be set, please see\n             * {@link DataTable.defaults.column}. Note that if you use `columns` to\n             * define your columns, you must have an entry in the array for every single\n             * column that you have in your table (these can be null if you don't which\n             * to specify any options).\n             *  @member\n             *\n             *  @name DataTable.defaults.column\n             */\n            \"aoColumns\": null,\n\n            /**\n             * Very similar to `columns`, `columnDefs` allows you to target a specific\n             * column, multiple columns, or all columns, using the `targets` property of\n             * each object in the array. This allows great flexibility when creating\n             * tables, as the `columnDefs` arrays can be of any length, targeting the\n             * columns you specifically want. `columnDefs` may use any of the column\n             * options available: {@link DataTable.defaults.column}, but it _must_\n             * have `targets` defined in each object in the array. Values in the `targets`\n             * array may be:\n             *   <ul>\n             *     <li>a string - class name will be matched on the TH for the column</li>\n             *     <li>0 or a positive integer - column index counting from the left</li>\n             *     <li>a negative integer - column index counting from the right</li>\n             *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n             *   </ul>\n             *  @member\n             *\n             *  @name DataTable.defaults.columnDefs\n             */\n            \"aoColumnDefs\": null,\n\n\n            /**\n             * Basically the same as `search`, this parameter defines the individual column\n             * filtering state at initialisation time. The array must be of the same size\n             * as the number of columns, and each element be an object with the parameters\n             * `search` and `escapeRegex` (the latter is optional). 'null' is also\n             * accepted and the default will be used.\n             *  @type array\n             *  @default []\n             *\n             *  @dtopt Option\n             *  @name DataTable.defaults.searchCols\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n             */\n            \"aoSearchCols\": [],\n\n\n            /**\n             * An array of CSS classes that should be applied to displayed rows. This\n             * array may be of any length, and DataTables will apply each class\n             * sequentially, looping when required.\n             *  @type array\n             *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n             *    options</i>\n             *\n             *  @dtopt Option\n             *  @name DataTable.defaults.stripeClasses\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n             */\n            \"asStripeClasses\": null,\n\n\n            /**\n             * Enable or disable automatic column width calculation. This can be disabled\n             * as an optimisation (it takes some time to calculate the widths) if the\n             * tables widths are passed in using `columns`.\n             *  @type boolean\n             *  @default true\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.autoWidth\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bAutoWidth\": true,\n\n\n            /**\n             * Deferred rendering can provide DataTables with a huge speed boost when you\n             * are using an Ajax or JS data source for the table. This option, when set to\n             * true, will cause DataTables to defer the creation of the table elements for\n             * each row until they are needed for a draw - saving a significant amount of\n             * time.\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.deferRender\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bDeferRender\": false,\n\n\n            /**\n             * Replace a DataTable which matches the given selector and replace it with\n             * one which has the properties of the new initialisation object passed. If no\n             * table matches the selector, then the new DataTable will be constructed as\n             * per normal.\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.destroy\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bDestroy\": false,\n\n\n            /**\n             * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n             * that it allows the end user to input multiple words (space separated) and\n             * will match a row containing those words, even if not in the order that was\n             * specified (this allow matching across multiple columns). Note that if you\n             * wish to use filtering in DataTables this must remain 'true' - to remove the\n             * default filtering input box and retain filtering abilities, please use\n             * {@link DataTable.defaults.dom}.\n             *  @type boolean\n             *  @default true\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.searching\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bFilter\": true,\n\n\n            /**\n             * Enable or disable the table information display. This shows information\n             * about the data that is currently visible on the page, including information\n             * about filtered data if that action is being performed.\n             *  @type boolean\n             *  @default true\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.info\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bInfo\": true,\n\n\n            /**\n             * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n             * slightly different and additional mark-up from what DataTables has\n             * traditionally used).\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.jQueryUI\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"jQueryUI\": true\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bJQueryUI\": false,\n\n\n            /**\n             * Allows the end user to select the size of a formatted page from a select\n             * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n             *  @type boolean\n             *  @default true\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.lengthChange\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bLengthChange\": true,\n\n\n            /**\n             * Enable or disable pagination.\n             *  @type boolean\n             *  @default true\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.paging\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bPaginate\": true,\n\n\n            /**\n             * Enable or disable the display of a 'processing' indicator when the table is\n             * being processed (e.g. a sort). This is particularly useful for tables with\n             * large amounts of data where it can take a noticeable amount of time to sort\n             * the entries.\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.processing\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bProcessing\": false,\n\n\n            /**\n             * Retrieve the DataTables object for the given selector. Note that if the\n             * table has already been initialised, this parameter will cause DataTables\n             * to simply return the object that has already been set up - it will not take\n             * account of any changes you might have made to the initialisation object\n             * passed to DataTables (setting this parameter to true is an acknowledgement\n             * that you understand this). `destroy` can be used to reinitialise a table if\n             * you need.\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.retrieve\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n             *\n             *    function initTable ()\n             *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n             *\n             *    function tableActions ()\n             *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n             */\n            \"bRetrieve\": false,\n\n\n            /**\n             * When vertical (y) scrolling is enabled, DataTables will force the height of\n             * the table's viewport to the given height at all times (useful for layout).\n             * However, this can look odd when filtering data down to a small data set,\n             * and the footer is left \"floating\" further down. This parameter (when\n             * enabled) will cause DataTables to collapse the table's viewport down when\n             * the result set will fit within the given Y height.\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.scrollCollapse\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bScrollCollapse\": false,\n\n\n            /**\n             * Configure DataTables to use server-side processing. Note that the\n             * `ajax` parameter must also be given in order to give DataTables a\n             * source to obtain the required data for each draw.\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Features\n             *  @dtopt Server-side\n             *  @name DataTable.defaults.serverSide\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bServerSide\": false,\n\n\n            /**\n             * Enable or disable sorting of columns. Sorting of individual columns can be\n             * disabled by the `sortable` option for each column.\n             *  @type boolean\n             *  @default true\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.ordering\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bSort\": true,\n\n\n            /**\n             * Enable or display DataTables' ability to sort multiple columns at the\n             * same time (activated by shift-click by the user).\n             *  @type boolean\n             *  @default true\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.orderMulti\n             *\n             *  @example\n             *    // Disable multiple column sorting ability\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bSortMulti\": true,\n\n\n            /**\n             * Allows control over whether DataTables should use the top (true) unique\n             * cell that is found for a single column, or the bottom (false - default).\n             * This is useful when using complex headers.\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.orderCellsTop\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bSortCellsTop\": false,\n\n\n            /**\n             * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n             * `sorting\\_3` to the columns which are currently being sorted on. This is\n             * presented as a feature switch as it can increase processing time (while\n             * classes are removed and added) so for large data sets you might want to\n             * turn this off.\n             *  @type boolean\n             *  @default true\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.orderClasses\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bSortClasses\": true,\n\n\n            /**\n             * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n             * used to save table display information such as pagination information,\n             * display length, filtering and sorting. As such when the end user reloads\n             * the page the display display will match what thy had previously set up.\n             *\n             * Due to the use of `localStorage` the default state saving is not supported\n             * in IE6 or 7. If state saving is required in those browsers, use\n             * `stateSaveCallback` to provide a storage solution such as cookies.\n             *  @type boolean\n             *  @default false\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.stateSave\n             *\n             *  @example\n             *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n             */\n            \"bStateSave\": false,\n\n\n            /**\n             * This function is called when a TR element is created (and all TD child\n             * elements have been inserted), or registered if using a DOM source, allowing\n             * manipulation of the TR element (adding classes etc).\n             *  @type function\n             *  @param {node} row \"TR\" element for the current row\n             *  @param {array} data Raw data array for this row\n             *  @param {int} dataIndex The index of this row in the internal aoData array\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.createdRow\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnCreatedRow\": null,\n\n\n            /**\n             * This function is called on every 'draw' event, and allows you to\n             * dynamically modify any aspect you want about the created DOM.\n             *  @type function\n             *  @param {object} settings DataTables settings object\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.drawCallback\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnDrawCallback\": null,\n\n\n            /**\n             * Identical to fnHeaderCallback() but for the table footer this function\n             * allows you to modify the table footer on every 'draw' event.\n             *  @type function\n             *  @param {node} foot \"TR\" element for the footer\n             *  @param {array} data Full table data (as derived from the original HTML)\n             *  @param {int} start Index for the current display starting point in the\n             *    display array\n             *  @param {int} end Index for the current display ending point in the\n             *    display array\n             *  @param {array int} display Index array to translate the visual position\n             *    to the full data array\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.footerCallback\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n             */\n            \"fnFooterCallback\": null,\n\n\n            /**\n             * When rendering large numbers in the information element for the table\n             * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n             * to have a comma separator for the 'thousands' units (e.g. 1 million is\n             * rendered as \"1,000,000\") to help readability for the end user. This\n             * function will override the default method DataTables uses.\n             *  @type function\n             *  @member\n             *  @param {int} toFormat number to be formatted\n             *  @returns {string} formatted string for DataTables to show the number\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.formatNumber\n             *\n             *  @example\n             *    // Format a number using a single quote for the separator (note that\n             *    // this can also be done with the language.thousands option)\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnFormatNumber\": function (toFormat) {\n                return toFormat.toString().replace(\n                    /\\B(?=(\\d{3})+(?!\\d))/g,\n                    this.oLanguage.sThousands\n                );\n            },\n\n\n            /**\n             * This function is called on every 'draw' event, and allows you to\n             * dynamically modify the header row. This can be used to calculate and\n             * display useful information about the table.\n             *  @type function\n             *  @param {node} head \"TR\" element for the header\n             *  @param {array} data Full table data (as derived from the original HTML)\n             *  @param {int} start Index for the current display starting point in the\n             *    display array\n             *  @param {int} end Index for the current display ending point in the\n             *    display array\n             *  @param {array int} display Index array to translate the visual position\n             *    to the full data array\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.headerCallback\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n             */\n            \"fnHeaderCallback\": null,\n\n\n            /**\n             * The information element can be used to convey information about the current\n             * state of the table. Although the internationalisation options presented by\n             * DataTables are quite capable of dealing with most customisations, there may\n             * be times where you wish to customise the string further. This callback\n             * allows you to do exactly that.\n             *  @type function\n             *  @param {object} oSettings DataTables settings object\n             *  @param {int} start Starting position in data for the draw\n             *  @param {int} end End position in data for the draw\n             *  @param {int} max Total number of rows in the table (regardless of\n             *    filtering)\n             *  @param {int} total Total number of rows in the data set, after filtering\n             *  @param {string} pre The string that DataTables has formatted using it's\n             *    own rules\n             *  @returns {string} The string to be displayed in the information element.\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.infoCallback\n             *\n             *  @example\n             *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n             */\n            \"fnInfoCallback\": null,\n\n\n            /**\n             * Called when the table has been initialised. Normally DataTables will\n             * initialise sequentially and there will be no need for this function,\n             * however, this does not hold true when using external language information\n             * since that is obtained using an async XHR call.\n             *  @type function\n             *  @param {object} settings DataTables settings object\n             *  @param {object} json The JSON object request from the server - only\n             *    present if client-side Ajax sourced data is used\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.initComplete\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n             */\n            \"fnInitComplete\": null,\n\n\n            /**\n             * Called at the very start of each table draw and can be used to cancel the\n             * draw by returning false, any other return (including undefined) results in\n             * the full draw occurring).\n             *  @type function\n             *  @param {object} settings DataTables settings object\n             *  @returns {boolean} False will cancel the draw, anything else (including no\n             *    return) will allow it to complete.\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.preDrawCallback\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnPreDrawCallback\": null,\n\n\n            /**\n             * This function allows you to 'post process' each row after it have been\n             * generated for each table draw, but before it is rendered on screen. This\n             * function might be used for setting the row class name etc.\n             *  @type function\n             *  @param {node} row \"TR\" element for the current row\n             *  @param {array} data Raw data array for this row\n             *  @param {int} displayIndex The display index for the current table draw\n             *  @param {int} displayIndexFull The index of the data in the full list of\n             *    rows (after filtering)\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.rowCallback\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnRowCallback\": null,\n\n\n            /**\n             * __Deprecated__ The functionality provided by this parameter has now been\n             * superseded by that provided through `ajax`, which should be used instead.\n             *\n             * This parameter allows you to override the default function which obtains\n             * the data from the server so something more suitable for your application.\n             * For example you could use POST data, or pull information from a Gears or\n             * AIR database.\n             *  @type function\n             *  @member\n             *  @param {string} source HTTP source to obtain the data from (`ajax`)\n             *  @param {array} data A key/value pair object containing the data to send\n             *    to the server\n             *  @param {function} callback to be called on completion of the data get\n             *    process that will draw the data on the page.\n             *  @param {object} settings DataTables settings object\n             *\n             *  @dtopt Callbacks\n             *  @dtopt Server-side\n             *  @name DataTable.defaults.serverData\n             *\n             *  @deprecated 1.10. Please use `ajax` for this functionality now.\n             */\n            \"fnServerData\": null,\n\n\n            /**\n             * __Deprecated__ The functionality provided by this parameter has now been\n             * superseded by that provided through `ajax`, which should be used instead.\n             *\n             *  It is often useful to send extra data to the server when making an Ajax\n             * request - for example custom filtering information, and this callback\n             * function makes it trivial to send extra information to the server. The\n             * passed in parameter is the data set that has been constructed by\n             * DataTables, and you can add to this or modify it as you require.\n             *  @type function\n             *  @param {array} data Data array (array of objects which are name/value\n             *    pairs) that has been constructed by DataTables and will be sent to the\n             *    server. In the case of Ajax sourced data with server-side processing\n             *    this will be an empty array, for server-side processing there will be a\n             *    significant number of parameters!\n             *  @returns {undefined} Ensure that you modify the data array passed in,\n             *    as this is passed by reference.\n             *\n             *  @dtopt Callbacks\n             *  @dtopt Server-side\n             *  @name DataTable.defaults.serverParams\n             *\n             *  @deprecated 1.10. Please use `ajax` for this functionality now.\n             */\n            \"fnServerParams\": null,\n\n\n            /**\n             * Load the table state. With this function you can define from where, and how, the\n             * state of a table is loaded. By default DataTables will load from `localStorage`\n             * but you might wish to use a server-side database or cookies.\n             *  @type function\n             *  @member\n             *  @param {object} settings DataTables settings object\n             *  @return {object} The DataTables state object to be loaded\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.stateLoadCallback\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings) {\n\t\t *          var o;\n\t\t *\n\t\t *          // Send an Ajax request to the server to get the data. Note that\n\t\t *          // this is a synchronous request.\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"async\": false,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              o = json;\n\t\t *            }\n\t\t *          } );\n\t\t *\n\t\t *          return o;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnStateLoadCallback\": function (settings) {\n                try {\n                    return JSON.parse(\n                        (settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n                            'DataTables_' + settings.sInstance + '_' + location.pathname\n                        )\n                    );\n                } catch (e) {\n                }\n            },\n\n\n            /**\n             * Callback which allows modification of the saved state prior to loading that state.\n             * This callback is called when the table is loading state from the stored data, but\n             * prior to the settings object being modified by the saved state. Note that for\n             * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n             * a plug-in.\n             *  @type function\n             *  @param {object} settings DataTables settings object\n             *  @param {object} data The state object that is to be loaded\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.stateLoadParams\n             *\n             *  @example\n             *    // Remove a saved filter, so filtering is never loaded\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Disallow state loading by returning false\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnStateLoadParams\": null,\n\n\n            /**\n             * Callback that is called when the state has been loaded from the state saving method\n             * and the DataTables settings object has been modified as a result of the loaded state.\n             *  @type function\n             *  @param {object} settings DataTables settings object\n             *  @param {object} data The state object that was loaded\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.stateLoaded\n             *\n             *  @example\n             *    // Show an alert with the filtering value that was saved\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnStateLoaded\": null,\n\n\n            /**\n             * Save the table state. This function allows you to define where and how the state\n             * information for the table is stored By default DataTables will use `localStorage`\n             * but you might wish to use a server-side database or cookies.\n             *  @type function\n             *  @member\n             *  @param {object} settings DataTables settings object\n             *  @param {object} data The state object to be saved\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.stateSaveCallback\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnStateSaveCallback\": function (settings, data) {\n                try {\n                    (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n                        'DataTables_' + settings.sInstance + '_' + location.pathname,\n                        JSON.stringify(data)\n                    );\n                } catch (e) {\n                }\n            },\n\n\n            /**\n             * Callback which allows modification of the state to be saved. Called when the table\n             * has changed state a new state save is required. This method allows modification of\n             * the state saving object prior to actually doing the save, including addition or\n             * other state properties or modification. Note that for plug-in authors, you should\n             * use the `stateSaveParams` event to save parameters for a plug-in.\n             *  @type function\n             *  @param {object} settings DataTables settings object\n             *  @param {object} data The state object to be saved\n             *\n             *  @dtopt Callbacks\n             *  @name DataTable.defaults.stateSaveParams\n             *\n             *  @example\n             *    // Remove a saved filter, so filtering is never saved\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"fnStateSaveParams\": null,\n\n\n            /**\n             * Duration for which the saved state information is considered valid. After this period\n             * has elapsed the state will be returned to the default.\n             * Value is given in seconds.\n             *  @type int\n             *  @default 7200 <i>(2 hours)</i>\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.stateDuration\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n             */\n            \"iStateDuration\": 7200,\n\n\n            /**\n             * When enabled DataTables will not make a request to the server for the first\n             * page draw - rather it will use the data already on the page (no sorting etc\n             * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n             * is used to indicate that deferred loading is required, but it is also used\n             * to tell DataTables how many records there are in the full table (allowing\n             * the information element and pagination to be displayed correctly). In the case\n             * where a filtering is applied to the table on initial load, this can be\n             * indicated by giving the parameter as an array, where the first element is\n             * the number of records available after filtering and the second element is the\n             * number of records without filtering (allowing the table information element\n             * to be shown correctly).\n             *  @type int | array\n             *  @default null\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.deferLoading\n             *\n             *  @example\n             *    // 57 records available in the table, no filtering applied\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n             */\n            \"iDeferLoading\": null,\n\n\n            /**\n             * Number of rows to display on a single page when using pagination. If\n             * feature enabled (`lengthChange`) then the end user will be able to override\n             * this to a custom setting using a pop-up menu.\n             *  @type int\n             *  @default 10\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.pageLength\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n             */\n            \"iDisplayLength\": 10,\n\n\n            /**\n             * Define the starting point for data display when using DataTables with\n             * pagination. Note that this parameter is the number of records, rather than\n             * the page number, so if you have 10 records per page and want to start on\n             * the third page, it should be \"20\".\n             *  @type int\n             *  @default 0\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.displayStart\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n             */\n            \"iDisplayStart\": 0,\n\n\n            /**\n             * By default DataTables allows keyboard navigation of the table (sorting, paging,\n             * and filtering) by adding a `tabindex` attribute to the required elements. This\n             * allows you to tab through the controls and press the enter key to activate them.\n             * The tabindex is default 0, meaning that the tab follows the flow of the document.\n             * You can overrule this using this parameter if you wish. Use a value of -1 to\n             * disable built-in keyboard navigation.\n             *  @type int\n             *  @default 0\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.tabIndex\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n             */\n            \"iTabIndex\": 0,\n\n\n            /**\n             * Classes that DataTables assigns to the various components and features\n             * that it adds to the HTML table. This allows classes to be configured\n             * during initialisation in addition to through the static\n             * {@link DataTable.ext.oStdClasses} object).\n             *  @namespace\n             *  @name DataTable.defaults.classes\n             */\n            \"oClasses\": {},\n\n\n            /**\n             * All strings that DataTables uses in the user interface that it creates\n             * are defined in this object, allowing you to modified them individually or\n             * completely replace them all as required.\n             *  @namespace\n             *  @name DataTable.defaults.language\n             */\n            \"oLanguage\": {\n                /**\n                 * Strings that are used for WAI-ARIA labels and controls only (these are not\n                 * actually visible on the page, but will be read by screenreaders, and thus\n                 * must be internationalised as well).\n                 *  @namespace\n                 *  @name DataTable.defaults.language.aria\n                 */\n                \"oAria\": {\n                    /**\n                     * ARIA label that is added to the table headers when the column may be\n                     * sorted ascending by activing the column (click or return when focused).\n                     * Note that the column header is prefixed to this string.\n                     *  @type string\n                     *  @default : activate to sort column ascending\n                     *\n                     *  @dtopt Language\n                     *  @name DataTable.defaults.language.aria.sortAscending\n                     *\n                     *  @example\n                     *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n                     */\n                    \"sSortAscending\": \": activate to sort column ascending\",\n\n                    /**\n                     * ARIA label that is added to the table headers when the column may be\n                     * sorted descending by activing the column (click or return when focused).\n                     * Note that the column header is prefixed to this string.\n                     *  @type string\n                     *  @default : activate to sort column ascending\n                     *\n                     *  @dtopt Language\n                     *  @name DataTable.defaults.language.aria.sortDescending\n                     *\n                     *  @example\n                     *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n                     */\n                    \"sSortDescending\": \": activate to sort column descending\"\n                },\n\n                /**\n                 * Pagination string used by DataTables for the built-in pagination\n                 * control types.\n                 *  @namespace\n                 *  @name DataTable.defaults.language.paginate\n                 */\n                \"oPaginate\": {\n                    /**\n                     * Text to use when using the 'full_numbers' type of pagination for the\n                     * button to take the user to the first page.\n                     *  @type string\n                     *  @default First\n                     *\n                     *  @dtopt Language\n                     *  @name DataTable.defaults.language.paginate.first\n                     *\n                     *  @example\n                     *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n                     */\n                    \"sFirst\": \"First\",\n\n\n                    /**\n                     * Text to use when using the 'full_numbers' type of pagination for the\n                     * button to take the user to the last page.\n                     *  @type string\n                     *  @default Last\n                     *\n                     *  @dtopt Language\n                     *  @name DataTable.defaults.language.paginate.last\n                     *\n                     *  @example\n                     *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n                     */\n                    \"sLast\": \"Last\",\n\n\n                    /**\n                     * Text to use for the 'next' pagination button (to take the user to the\n                     * next page).\n                     *  @type string\n                     *  @default Next\n                     *\n                     *  @dtopt Language\n                     *  @name DataTable.defaults.language.paginate.next\n                     *\n                     *  @example\n                     *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n                     */\n                    \"sNext\": \"Next\",\n\n\n                    /**\n                     * Text to use for the 'previous' pagination button (to take the user to\n                     * the previous page).\n                     *  @type string\n                     *  @default Previous\n                     *\n                     *  @dtopt Language\n                     *  @name DataTable.defaults.language.paginate.previous\n                     *\n                     *  @example\n                     *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n                     */\n                    \"sPrevious\": \"Previous\"\n                },\n\n                /**\n                 * This string is shown in preference to `zeroRecords` when the table is\n                 * empty of data (regardless of filtering). Note that this is an optional\n                 * parameter - if it is not given, the value of `zeroRecords` will be used\n                 * instead (either the default or given value).\n                 *  @type string\n                 *  @default No data available in table\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.emptyTable\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sEmptyTable\": \"No data available in table\",\n\n\n                /**\n                 * This string gives information to the end user about the information\n                 * that is current on display on the page. The following tokens can be\n                 * used in the string and will be dynamically replaced as the table\n                 * display updates. This tokens can be placed anywhere in the string, or\n                 * removed as needed by the language requires:\n                 *\n                 * * `\\_START\\_` - Display index of the first record on the current page\n                 * * `\\_END\\_` - Display index of the last record on the current page\n                 * * `\\_TOTAL\\_` - Number of records in the table after filtering\n                 * * `\\_MAX\\_` - Number of records in the table without filtering\n                 * * `\\_PAGE\\_` - Current page number\n                 * * `\\_PAGES\\_` - Total number of pages of data in the table\n                 *\n                 *  @type string\n                 *  @default Showing _START_ to _END_ of _TOTAL_ entries\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.info\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n\n                /**\n                 * Display information string for when the table is empty. Typically the\n                 * format of this string should match `info`.\n                 *  @type string\n                 *  @default Showing 0 to 0 of 0 entries\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.infoEmpty\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n\n                /**\n                 * When a user filters the information in a table, this string is appended\n                 * to the information (`info`) to give an idea of how strong the filtering\n                 * is. The variable _MAX_ is dynamically updated.\n                 *  @type string\n                 *  @default (filtered from _MAX_ total entries)\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.infoFiltered\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n\n                /**\n                 * If can be useful to append extra information to the info string at times,\n                 * and this variable does exactly that. This information will be appended to\n                 * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n                 * being used) at all times.\n                 *  @type string\n                 *  @default <i>Empty string</i>\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.infoPostFix\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sInfoPostFix\": \"\",\n\n\n                /**\n                 * This decimal place operator is a little different from the other\n                 * language options since DataTables doesn't output floating point\n                 * numbers, so it won't ever use this for display of a number. Rather,\n                 * what this parameter does is modify the sort methods of the table so\n                 * that numbers which are in a format which has a character other than\n                 * a period (`.`) as a decimal place will be sorted numerically.\n                 *\n                 * Note that numbers with different decimal places cannot be shown in\n                 * the same table and still be sortable, the table must be consistent.\n                 * However, multiple different tables on the page can use different\n                 * decimal place characters.\n                 *  @type string\n                 *  @default\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.decimal\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sDecimal\": \"\",\n\n\n                /**\n                 * DataTables has a build in number formatter (`formatNumber`) which is\n                 * used to format large numbers that are used in the table information.\n                 * By default a comma is used, but this can be trivially changed to any\n                 * character you wish with this parameter.\n                 *  @type string\n                 *  @default ,\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.thousands\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sThousands\": \",\",\n\n\n                /**\n                 * Detail the action that will be taken when the drop down menu for the\n                 * pagination length option is changed. The '_MENU_' variable is replaced\n                 * with a default select list of 10, 25, 50 and 100, and can be replaced\n                 * with a custom select box if required.\n                 *  @type string\n                 *  @default Show _MENU_ entries\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.lengthMenu\n                 *\n                 *  @example\n                 *    // Language change only\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 *\n                 *  @example\n                 *    // Language and options change\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sLengthMenu\": \"Show _MENU_ entries\",\n\n\n                /**\n                 * When using Ajax sourced data and during the first draw when DataTables is\n                 * gathering the data, this message is shown in an empty row in the table to\n                 * indicate to the end user the the data is being loaded. Note that this\n                 * parameter is not used when loading data by server-side processing, just\n                 * Ajax sourced data with client-side processing.\n                 *  @type string\n                 *  @default Loading...\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.loadingRecords\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sLoadingRecords\": \"Loading...\",\n\n\n                /**\n                 * Text which is displayed when the table is processing a user action\n                 * (usually a sort command or similar).\n                 *  @type string\n                 *  @default Processing...\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.processing\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sProcessing\": \"Processing...\",\n\n\n                /**\n                 * Details the actions that will be taken when the user types into the\n                 * filtering input text box. The variable \"_INPUT_\", if used in the string,\n                 * is replaced with the HTML text box for the filtering input allowing\n                 * control over where it appears in the string. If \"_INPUT_\" is not given\n                 * then the input box is appended to the string automatically.\n                 *  @type string\n                 *  @default Search:\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.search\n                 *\n                 *  @example\n                 *    // Input text box will be appended at the end automatically\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 *\n                 *  @example\n                 *    // Specify where the filter should appear\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sSearch\": \"Search:\",\n\n\n                /**\n                 * Assign a `placeholder` attribute to the search `input` element\n                 *  @type string\n                 *  @default\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.searchPlaceholder\n                 */\n                \"sSearchPlaceholder\": \"\",\n\n\n                /**\n                 * All of the language information can be stored in a file on the\n                 * server-side, which DataTables will look up if this parameter is passed.\n                 * It must store the URL of the language file, which is in a JSON format,\n                 * and the object has the same properties as the oLanguage object in the\n                 * initialiser object (i.e. the above parameters). Please refer to one of\n                 * the example language files to see how this works in action.\n                 *  @type string\n                 *  @default <i>Empty string - i.e. disabled</i>\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.url\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sUrl\": \"\",\n\n\n                /**\n                 * Text shown inside the table records when the is no information to be\n                 * displayed after filtering. `emptyTable` is shown when there is simply no\n                 * information in the table at all (regardless of filtering).\n                 *  @type string\n                 *  @default No matching records found\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.zeroRecords\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n                 */\n                \"sZeroRecords\": \"No matching records found\"\n            },\n\n\n            /**\n             * This parameter allows you to have define the global filtering state at\n             * initialisation time. As an object the `search` parameter must be\n             * defined, but all other parameters are optional. When `regex` is true,\n             * the search string will be treated as a regular expression, when false\n             * (default) it will be treated as a straight string. When `smart`\n             * DataTables will use it's smart filtering methods (to word match at\n             * any point in the data), when false this will not be done.\n             *  @namespace\n             *  @extends DataTable.models.oSearch\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.search\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n             */\n            \"oSearch\": $.extend({}, DataTable.models.oSearch),\n\n\n            /**\n             * __Deprecated__ The functionality provided by this parameter has now been\n             * superseded by that provided through `ajax`, which should be used instead.\n             *\n             * By default DataTables will look for the property `data` (or `aaData` for\n             * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n             * source or for server-side processing - this parameter allows that\n             * property to be changed. You can use Javascript dotted object notation to\n             * get a data source for multiple levels of nesting.\n             *  @type string\n             *  @default data\n             *\n             *  @dtopt Options\n             *  @dtopt Server-side\n             *  @name DataTable.defaults.ajaxDataProp\n             *\n             *  @deprecated 1.10. Please use `ajax` for this functionality now.\n             */\n            \"sAjaxDataProp\": \"data\",\n\n\n            /**\n             * __Deprecated__ The functionality provided by this parameter has now been\n             * superseded by that provided through `ajax`, which should be used instead.\n             *\n             * You can instruct DataTables to load data from an external\n             * source using this parameter (use aData if you want to pass data in you\n             * already have). Simply provide a url a JSON object can be obtained from.\n             *  @type string\n             *  @default null\n             *\n             *  @dtopt Options\n             *  @dtopt Server-side\n             *  @name DataTable.defaults.ajaxSource\n             *\n             *  @deprecated 1.10. Please use `ajax` for this functionality now.\n             */\n            \"sAjaxSource\": null,\n\n\n            /**\n             * This initialisation variable allows you to specify exactly where in the\n             * DOM you want DataTables to inject the various controls it adds to the page\n             * (for example you might want the pagination controls at the top of the\n             * table). DIV elements (with or without a custom class) can also be added to\n             * aid styling. The follow syntax is used:\n             *   <ul>\n             *     <li>The following options are allowed:\n             *       <ul>\n             *         <li>'l' - Length changing</li>\n             *         <li>'f' - Filtering input</li>\n             *         <li>'t' - The table!</li>\n             *         <li>'i' - Information</li>\n             *         <li>'p' - Pagination</li>\n             *         <li>'r' - pRocessing</li>\n             *       </ul>\n             *     </li>\n             *     <li>The following constants are allowed:\n             *       <ul>\n             *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n             *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n             *       </ul>\n             *     </li>\n             *     <li>The following syntax is expected:\n             *       <ul>\n             *         <li>'&lt;' and '&gt;' - div elements</li>\n             *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n             *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n             *       </ul>\n             *     </li>\n             *     <li>Examples:\n             *       <ul>\n             *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n             *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n             *       </ul>\n             *     </li>\n             *   </ul>\n             *  @type string\n             *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n             *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.dom\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sDom\": \"lfrtip\",\n\n\n            /**\n             * Search delay option. This will throttle full table searches that use the\n             * DataTables provided search input element (it does not effect calls to\n             * `dt-api search()`, providing a delay before the search is made.\n             *  @type integer\n             *  @default 0\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.searchDelay\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n             */\n            \"searchDelay\": null,\n\n\n            /**\n             * DataTables features four different built-in options for the buttons to\n             * display for pagination control:\n             *\n             * * `simple` - 'Previous' and 'Next' buttons only\n             * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n             * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n             * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus\n             *   page numbers\n             *\n             * Further methods can be added using {@link DataTable.ext.oPagination}.\n             *  @type string\n             *  @default simple_numbers\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.pagingType\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n             */\n            \"sPaginationType\": \"simple_numbers\",\n\n\n            /**\n             * Enable horizontal scrolling. When a table is too wide to fit into a\n             * certain layout, or you have a large number of columns in the table, you\n             * can enable x-scrolling to show the table in a viewport, which can be\n             * scrolled. This property can be `true` which will allow the table to\n             * scroll horizontally when needed, or any CSS unit, or a number (in which\n             * case it will be treated as a pixel measurement). Setting as simply `true`\n             * is recommended.\n             *  @type boolean|string\n             *  @default <i>blank string - i.e. disabled</i>\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.scrollX\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sScrollX\": \"\",\n\n\n            /**\n             * This property can be used to force a DataTable to use more width than it\n             * might otherwise do when x-scrolling is enabled. For example if you have a\n             * table which requires to be well spaced, this parameter is useful for\n             * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n             * any CSS unit, or a number (in which case it will be treated as a pixel\n             * measurement).\n             *  @type string\n             *  @default <i>blank string - i.e. disabled</i>\n             *\n             *  @dtopt Options\n             *  @name DataTable.defaults.scrollXInner\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sScrollXInner\": \"\",\n\n\n            /**\n             * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n             * to the given height, and enable scrolling for any data which overflows the\n             * current viewport. This can be used as an alternative to paging to display\n             * a lot of data in a small area (although paging and scrolling can both be\n             * enabled at the same time). This property can be any CSS unit, or a number\n             * (in which case it will be treated as a pixel measurement).\n             *  @type string\n             *  @default <i>blank string - i.e. disabled</i>\n             *\n             *  @dtopt Features\n             *  @name DataTable.defaults.scrollY\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sScrollY\": \"\",\n\n\n            /**\n             * __Deprecated__ The functionality provided by this parameter has now been\n             * superseded by that provided through `ajax`, which should be used instead.\n             *\n             * Set the HTTP method that is used to make the Ajax call for server-side\n             * processing or Ajax sourced data.\n             *  @type string\n             *  @default GET\n             *\n             *  @dtopt Options\n             *  @dtopt Server-side\n             *  @name DataTable.defaults.serverMethod\n             *\n             *  @deprecated 1.10. Please use `ajax` for this functionality now.\n             */\n            \"sServerMethod\": \"GET\",\n\n\n            /**\n             * DataTables makes use of renderers when displaying HTML elements for\n             * a table. These renderers can be added or modified by plug-ins to\n             * generate suitable mark-up for a site. For example the Bootstrap\n             * integration plug-in for DataTables uses a paging button renderer to\n             * display pagination buttons in the mark-up required by Bootstrap.\n             *\n             * For further information about the renderers available see\n             * DataTable.ext.renderer\n             *  @type string|object\n             *  @default null\n             *\n             *  @name DataTable.defaults.renderer\n             *\n             */\n            \"renderer\": null\n        };\n\n        _fnHungarianMap(DataTable.defaults);\n\n\n        /*\n         * Developer note - See note in model.defaults.js about the use of Hungarian\n         * notation and camel case.\n         */\n\n        /**\n         * Column options that can be given to DataTables at initialisation time.\n         *  @namespace\n         */\n        DataTable.defaults.column = {\n            /**\n             * Define which column(s) an order will occur on for this column. This\n             * allows a column's ordering to take multiple columns into account when\n             * doing a sort or use the data from a different column. For example first\n             * name / last name columns make sense to do a multi-column sort over the\n             * two columns.\n             *  @type array|int\n             *  @default null <i>Takes the value of the column index automatically</i>\n             *\n             *  @name DataTable.defaults.column.orderData\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"aDataSort\": null,\n            \"iDataSort\": -1,\n\n\n            /**\n             * You can control the default ordering direction, and even alter the\n             * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n             * using this parameter.\n             *  @type array\n             *  @default [ 'asc', 'desc' ]\n             *\n             *  @name DataTable.defaults.column.orderSequence\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"asSorting\": ['asc', 'desc'],\n\n\n            /**\n             * Enable or disable filtering on the data in this column.\n             *  @type boolean\n             *  @default true\n             *\n             *  @name DataTable.defaults.column.searchable\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n             */\n            \"bSearchable\": true,\n\n\n            /**\n             * Enable or disable ordering on this column.\n             *  @type boolean\n             *  @default true\n             *\n             *  @name DataTable.defaults.column.orderable\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n             */\n            \"bSortable\": true,\n\n\n            /**\n             * Enable or disable the display of this column.\n             *  @type boolean\n             *  @default true\n             *\n             *  @name DataTable.defaults.column.visible\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n             */\n            \"bVisible\": true,\n\n\n            /**\n             * Developer definable function that is called whenever a cell is created (Ajax source,\n             * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n             * allowing you to modify the DOM element (add background colour for example) when the\n             * element is available.\n             *  @type function\n             *  @param {element} td The TD node that has been created\n             *  @param {*} cellData The Data for the cell\n             *  @param {array|object} rowData The data for the whole row\n             *  @param {int} row The row index for the aoData data store\n             *  @param {int} col The column index for aoColumns\n             *\n             *  @name DataTable.defaults.column.createdCell\n             *  @dtopt Columns\n             *\n             *  @example\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n             */\n            \"fnCreatedCell\": null,\n\n\n            /**\n             * This parameter has been replaced by `data` in DataTables to ensure naming\n             * consistency. `dataProp` can still be used, as there is backwards\n             * compatibility in DataTables for this option, but it is strongly\n             * recommended that you use `data` in preference to `dataProp`.\n             *  @name DataTable.defaults.column.dataProp\n             */\n\n\n            /**\n             * This property can be used to read data from any data source property,\n             * including deeply nested objects / properties. `data` can be given in a\n             * number of different ways which effect its behaviour:\n             *\n             * * `integer` - treated as an array index for the data source. This is the\n             *   default that DataTables uses (incrementally increased for each column).\n             * * `string` - read an object property from the data source. There are\n             *   three 'special' options that can be used in the string to alter how\n             *   DataTables reads the data from the source object:\n             *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n             *      Javascript to read from nested objects, so to can the options\n             *      specified in `data`. For example: `browser.version` or\n             *      `browser.name`. If your object parameter name contains a period, use\n             *      `\\\\` to escape it - i.e. `first\\\\.name`.\n             *    * `[]` - Array notation. DataTables can automatically combine data\n             *      from and array source, joining the data with the characters provided\n             *      between the two brackets. For example: `name[, ]` would provide a\n             *      comma-space separated list from the source array. If no characters\n             *      are provided between the brackets, the original array source is\n             *      returned.\n             *    * `()` - Function notation. Adding `()` to the end of a parameter will\n             *      execute a function of the name given. For example: `browser()` for a\n             *      simple function on the data source, `browser.version()` for a\n             *      function in a nested property or even `browser().version` to get an\n             *      object property if the function called returns an object. Note that\n             *      function notation is recommended for use in `render` rather than\n             *      `data` as it is much simpler to use as a renderer.\n             * * `null` - use the original data source for the row rather than plucking\n             *   data directly from it. This action has effects on two other\n             *   initialisation options:\n             *    * `defaultContent` - When null is given as the `data` option and\n             *      `defaultContent` is specified for the column, the value defined by\n             *      `defaultContent` will be used for the cell.\n             *    * `render` - When null is used for the `data` option and the `render`\n             *      option is specified for the column, the whole data source for the\n             *      row is used for the renderer.\n             * * `function` - the function given will be executed whenever DataTables\n             *   needs to set or get the data for a cell in the column. The function\n             *   takes three parameters:\n             *    * Parameters:\n             *      * `{array|object}` The data source for the row\n             *      * `{string}` The type call data requested - this will be 'set' when\n             *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n             *        when gathering data. Note that when `undefined` is given for the\n             *        type DataTables expects to get the raw data for the object back<\n             *      * `{*}` Data to set when the second parameter is 'set'.\n             *    * Return:\n             *      * The return value from the function is not required when 'set' is\n             *        the type of call, but otherwise the return is what will be used\n             *        for the data requested.\n             *\n             * Note that `data` is a getter and setter option. If you just require\n             * formatting of data for output, you will likely want to use `render` which\n             * is simply a getter and thus simpler to use.\n             *\n             * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n             * name change reflects the flexibility of this property and is consistent\n             * with the naming of mRender. If 'mDataProp' is given, then it will still\n             * be used by DataTables, as it automatically maps the old name to the new\n             * if required.\n             *\n             *  @type string|int|function|null\n             *  @default null <i>Use automatically calculated column index</i>\n             *\n             *  @name DataTable.defaults.column.data\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Read table data from objects\n             *    // JSON structure for each row:\n             *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Read information from deeply nested objects\n             *    // JSON structure for each row:\n             *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"platform.details.0\" },\n\t\t *          { \"data\": \"platform.details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `data` as a function to provide different information for\n             *    // sorting, filtering and display. In this case, currency (price)\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using default content\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using array notation - outputting a list from an array\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n             *\n             */\n            \"mData\": null,\n\n\n            /**\n             * This property is the rendering partner to `data` and it is suggested that\n             * when you want to manipulate data for display (including filtering,\n             * sorting etc) without altering the underlying data for the table, use this\n             * property. `render` can be considered to be the the read only companion to\n             * `data` which is read / write (then as such more complex). Like `data`\n             * this option can be given in a number of different ways to effect its\n             * behaviour:\n             *\n             * * `integer` - treated as an array index for the data source. This is the\n             *   default that DataTables uses (incrementally increased for each column).\n             * * `string` - read an object property from the data source. There are\n             *   three 'special' options that can be used in the string to alter how\n             *   DataTables reads the data from the source object:\n             *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n             *      Javascript to read from nested objects, so to can the options\n             *      specified in `data`. For example: `browser.version` or\n             *      `browser.name`. If your object parameter name contains a period, use\n             *      `\\\\` to escape it - i.e. `first\\\\.name`.\n             *    * `[]` - Array notation. DataTables can automatically combine data\n             *      from and array source, joining the data with the characters provided\n             *      between the two brackets. For example: `name[, ]` would provide a\n             *      comma-space separated list from the source array. If no characters\n             *      are provided between the brackets, the original array source is\n             *      returned.\n             *    * `()` - Function notation. Adding `()` to the end of a parameter will\n             *      execute a function of the name given. For example: `browser()` for a\n             *      simple function on the data source, `browser.version()` for a\n             *      function in a nested property or even `browser().version` to get an\n             *      object property if the function called returns an object.\n             * * `object` - use different data for the different data types requested by\n             *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n             *   of the object is the data type the property refers to and the value can\n             *   defined using an integer, string or function using the same rules as\n             *   `render` normally does. Note that an `_` option _must_ be specified.\n             *   This is the default value to use if you haven't specified a value for\n             *   the data type requested by DataTables.\n             * * `function` - the function given will be executed whenever DataTables\n             *   needs to set or get the data for a cell in the column. The function\n             *   takes three parameters:\n             *    * Parameters:\n             *      * {array|object} The data source for the row (based on `data`)\n             *      * {string} The type call data requested - this will be 'filter',\n             *        'display', 'type' or 'sort'.\n             *      * {array|object} The full data source for the row (not based on\n             *        `data`)\n             *    * Return:\n             *      * The return value from the function is what will be used for the\n             *        data requested.\n             *\n             *  @type string|int|function|object|null\n             *  @default null Use the data source value.\n             *\n             *  @name DataTable.defaults.column.render\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Create a comma separated list from an array of objects\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Execute a function to obtain data\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // As an object, extracting different data for the different types\n             *    // This would be used with a data source such as:\n             *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n             *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n             *    // (which has both forms) is used for filtering for if a user inputs either format, while\n             *    // the formatted phone number is the one that is shown in the table.\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Use as a function to create a link from the data source\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"mRender\": null,\n\n\n            /**\n             * Change the cell type created for the column - either TD cells or TH cells. This\n             * can be useful as TH cells have semantic meaning in the table body, allowing them\n             * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n             *  @type string\n             *  @default td\n             *\n             *  @name DataTable.defaults.column.cellType\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Make the first column use TH cells\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sCellType\": \"td\",\n\n\n            /**\n             * Class to give to each cell in this column.\n             *  @type string\n             *  @default <i>Empty string</i>\n             *\n             *  @name DataTable.defaults.column.class\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sClass\": \"\",\n\n            /**\n             * When DataTables calculates the column widths to assign to each column,\n             * it finds the longest string in each column and then constructs a\n             * temporary table and reads the widths from that. The problem with this\n             * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n             * string - thus the calculation can go wrong (doing it properly and putting\n             * it into an DOM object and measuring that is horribly(!) slow). Thus as\n             * a \"work around\" we provide this option. It will append its value to the\n             * text that is found to be the longest string for the column - i.e. padding.\n             * Generally you shouldn't need this!\n             *  @type string\n             *  @default <i>Empty string<i>\n             *\n             *  @name DataTable.defaults.column.contentPadding\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sContentPadding\": \"\",\n\n\n            /**\n             * Allows a default value to be given for a column's data, and will be used\n             * whenever a null data source is encountered (this can be because `data`\n             * is set to null, or because the data source itself is null).\n             *  @type string\n             *  @default null\n             *\n             *  @name DataTable.defaults.column.defaultContent\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sDefaultContent\": null,\n\n\n            /**\n             * This parameter is only used in DataTables' server-side processing. It can\n             * be exceptionally useful to know what columns are being displayed on the\n             * client side, and to map these to database fields. When defined, the names\n             * also allow DataTables to reorder information from the server if it comes\n             * back in an unexpected order (i.e. if you switch your columns around on the\n             * client-side, your server-side code does not also need updating).\n             *  @type string\n             *  @default <i>Empty string</i>\n             *\n             *  @name DataTable.defaults.column.name\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sName\": \"\",\n\n\n            /**\n             * Defines a data source type for the ordering which can be used to read\n             * real-time information from the table (updating the internally cached\n             * version) prior to ordering. This allows ordering to occur on user\n             * editable elements such as form inputs.\n             *  @type string\n             *  @default std\n             *\n             *  @name DataTable.defaults.column.orderDataType\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sSortDataType\": \"std\",\n\n\n            /**\n             * The title of this column.\n             *  @type string\n             *  @default null <i>Derived from the 'TH' value for this column in the\n             *    original HTML table.</i>\n             *\n             *  @name DataTable.defaults.column.title\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sTitle\": null,\n\n\n            /**\n             * The type allows you to specify how the data for this column will be\n             * ordered. Four types (string, numeric, date and html (which will strip\n             * HTML tags before ordering)) are currently available. Note that only date\n             * formats understood by Javascript's Date() object will be accepted as type\n             * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n             * 'numeric', 'date' or 'html' (by default). Further types can be adding\n             * through plug-ins.\n             *  @type string\n             *  @default null <i>Auto-detected from raw data</i>\n             *\n             *  @name DataTable.defaults.column.type\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sType\": null,\n\n\n            /**\n             * Defining the width of the column, this parameter may take any CSS value\n             * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n             * been given a specific width through this interface ensuring that the table\n             * remains readable.\n             *  @type string\n             *  @default null <i>Automatic</i>\n             *\n             *  @name DataTable.defaults.column.width\n             *  @dtopt Columns\n             *\n             *  @example\n             *    // Using `columnDefs`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             *\n             *  @example\n             *    // Using `columns`\n             *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n             */\n            \"sWidth\": null\n        };\n\n        _fnHungarianMap(DataTable.defaults.column);\n\n\n        /**\n         * DataTables settings object - this holds all the information needed for a\n         * given table, including configuration, data and current application of the\n         * table options. DataTables does not have a single instance for each DataTable\n         * with the settings attached to that instance, but rather instances of the\n         * DataTable \"class\" are created on-the-fly as needed (typically by a\n         * $().dataTable() call) and the settings object is then applied to that\n         * instance.\n         *\n         * Note that this object is related to {@link DataTable.defaults} but this\n         * one is the internal data store for DataTables's cache of columns. It should\n         * NOT be manipulated outside of DataTables. Any configuration should be done\n         * through the initialisation options.\n         *  @namespace\n         *  @todo Really should attach the settings object to individual instances so we\n         *    don't need to create new instances on each $().dataTable() call (if the\n         *    table already exists). It would also save passing oSettings around and\n         *    into every single function. However, this is a very significant\n         *    architecture change for DataTables and will almost certainly break\n         *    backwards compatibility with older installations. This is something that\n         *    will be done in 2.0.\n         */\n        DataTable.models.oSettings = {\n            /**\n             * Primary features of DataTables and their enablement state.\n             *  @namespace\n             */\n            \"oFeatures\": {\n\n                /**\n                 * Flag to say if DataTables should automatically try to calculate the\n                 * optimum table and columns widths (true) or not (false).\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bAutoWidth\": null,\n\n                /**\n                 * Delay the creation of TR and TD elements until they are actually\n                 * needed by a driven page draw. This can give a significant speed\n                 * increase for Ajax source and Javascript source data, but makes no\n                 * difference at all fro DOM and server-side processing tables.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bDeferRender\": null,\n\n                /**\n                 * Enable filtering on the table or not. Note that if this is disabled\n                 * then there is no filtering at all on the table, including fnFilter.\n                 * To just remove the filtering input use sDom and remove the 'f' option.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bFilter\": null,\n\n                /**\n                 * Table information element (the 'Showing x of y records' div) enable\n                 * flag.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bInfo\": null,\n\n                /**\n                 * Present a user control allowing the end user to change the page size\n                 * when pagination is enabled.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bLengthChange\": null,\n\n                /**\n                 * Pagination enabled or not. Note that if this is disabled then length\n                 * changing must also be disabled.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bPaginate\": null,\n\n                /**\n                 * Processing indicator enable flag whenever DataTables is enacting a\n                 * user request - typically an Ajax request for server-side processing.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bProcessing\": null,\n\n                /**\n                 * Server-side processing enabled flag - when enabled DataTables will\n                 * get all data from the server for every draw - there is no filtering,\n                 * sorting or paging done on the client-side.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bServerSide\": null,\n\n                /**\n                 * Sorting enablement flag.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bSort\": null,\n\n                /**\n                 * Multi-column sorting\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bSortMulti\": null,\n\n                /**\n                 * Apply a class to the columns which are being sorted to provide a\n                 * visual highlight or not. This can slow things down when enabled since\n                 * there is a lot of DOM interaction.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bSortClasses\": null,\n\n                /**\n                 * State saving enablement flag.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bStateSave\": null\n            },\n\n\n            /**\n             * Scrolling settings for a table.\n             *  @namespace\n             */\n            \"oScroll\": {\n                /**\n                 * When the table is shorter in height than sScrollY, collapse the\n                 * table container down to the height of the table (when true).\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type boolean\n                 */\n                \"bCollapse\": null,\n\n                /**\n                 * Width of the scrollbar for the web-browser's platform. Calculated\n                 * during table initialisation.\n                 *  @type int\n                 *  @default 0\n                 */\n                \"iBarWidth\": 0,\n\n                /**\n                 * Viewport width for horizontal scrolling. Horizontal scrolling is\n                 * disabled if an empty string.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type string\n                 */\n                \"sX\": null,\n\n                /**\n                 * Width to expand the table to when using x-scrolling. Typically you\n                 * should not need to use this.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type string\n                 *  @deprecated\n                 */\n                \"sXInner\": null,\n\n                /**\n                 * Viewport height for vertical scrolling. Vertical scrolling is disabled\n                 * if an empty string.\n                 * Note that this parameter will be set by the initialisation routine. To\n                 * set a default use {@link DataTable.defaults}.\n                 *  @type string\n                 */\n                \"sY\": null\n            },\n\n            /**\n             * Language information for the table.\n             *  @namespace\n             *  @extends DataTable.defaults.oLanguage\n             */\n            \"oLanguage\": {\n                /**\n                 * Information callback function. See\n                 * {@link DataTable.defaults.fnInfoCallback}\n                 *  @type function\n                 *  @default null\n                 */\n                \"fnInfoCallback\": null\n            },\n\n            /**\n             * Browser support parameters\n             *  @namespace\n             */\n            \"oBrowser\": {\n                /**\n                 * Indicate if the browser incorrectly calculates width:100% inside a\n                 * scrolling element (IE6/7)\n                 *  @type boolean\n                 *  @default false\n                 */\n                \"bScrollOversize\": false,\n\n                /**\n                 * Determine if the vertical scrollbar is on the right or left of the\n                 * scrolling container - needed for rtl language layout, although not\n                 * all browsers move the scrollbar (Safari).\n                 *  @type boolean\n                 *  @default false\n                 */\n                \"bScrollbarLeft\": false\n            },\n\n\n            \"ajax\": null,\n\n\n            /**\n             * Array referencing the nodes which are used for the features. The\n             * parameters of this object match what is allowed by sDom - i.e.\n             *   <ul>\n             *     <li>'l' - Length changing</li>\n             *     <li>'f' - Filtering input</li>\n             *     <li>'t' - The table!</li>\n             *     <li>'i' - Information</li>\n             *     <li>'p' - Pagination</li>\n             *     <li>'r' - pRocessing</li>\n             *   </ul>\n             *  @type array\n             *  @default []\n             */\n            \"aanFeatures\": [],\n\n            /**\n             * Store data information - see {@link DataTable.models.oRow} for detailed\n             * information.\n             *  @type array\n             *  @default []\n             */\n            \"aoData\": [],\n\n            /**\n             * Array of indexes which are in the current display (after filtering etc)\n             *  @type array\n             *  @default []\n             */\n            \"aiDisplay\": [],\n\n            /**\n             * Array of indexes for display - no filtering\n             *  @type array\n             *  @default []\n             */\n            \"aiDisplayMaster\": [],\n\n            /**\n             * Store information about each column that is in use\n             *  @type array\n             *  @default []\n             */\n            \"aoColumns\": [],\n\n            /**\n             * Store information about the table's header\n             *  @type array\n             *  @default []\n             */\n            \"aoHeader\": [],\n\n            /**\n             * Store information about the table's footer\n             *  @type array\n             *  @default []\n             */\n            \"aoFooter\": [],\n\n            /**\n             * Store the applied global search information in case we want to force a\n             * research or compare the old search to a new one.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @namespace\n             *  @extends DataTable.models.oSearch\n             */\n            \"oPreviousSearch\": {},\n\n            /**\n             * Store the applied search for each column - see\n             * {@link DataTable.models.oSearch} for the format that is used for the\n             * filtering information for each column.\n             *  @type array\n             *  @default []\n             */\n            \"aoPreSearchCols\": [],\n\n            /**\n             * Sorting that is applied to the table. Note that the inner arrays are\n             * used in the following manner:\n             * <ul>\n             *   <li>Index 0 - column number</li>\n             *   <li>Index 1 - current sorting direction</li>\n             * </ul>\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type array\n             *  @todo These inner arrays should really be objects\n             */\n            \"aaSorting\": null,\n\n            /**\n             * Sorting that is always applied to the table (i.e. prefixed in front of\n             * aaSorting).\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type array\n             *  @default []\n             */\n            \"aaSortingFixed\": [],\n\n            /**\n             * Classes to use for the striping of a table.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type array\n             *  @default []\n             */\n            \"asStripeClasses\": null,\n\n            /**\n             * If restoring a table - we should restore its striping classes as well\n             *  @type array\n             *  @default []\n             */\n            \"asDestroyStripes\": [],\n\n            /**\n             * If restoring a table - we should restore its width\n             *  @type int\n             *  @default 0\n             */\n            \"sDestroyWidth\": 0,\n\n            /**\n             * Callback functions array for every time a row is inserted (i.e. on a draw).\n             *  @type array\n             *  @default []\n             */\n            \"aoRowCallback\": [],\n\n            /**\n             * Callback functions for the header on each draw.\n             *  @type array\n             *  @default []\n             */\n            \"aoHeaderCallback\": [],\n\n            /**\n             * Callback function for the footer on each draw.\n             *  @type array\n             *  @default []\n             */\n            \"aoFooterCallback\": [],\n\n            /**\n             * Array of callback functions for draw callback functions\n             *  @type array\n             *  @default []\n             */\n            \"aoDrawCallback\": [],\n\n            /**\n             * Array of callback functions for row created function\n             *  @type array\n             *  @default []\n             */\n            \"aoRowCreatedCallback\": [],\n\n            /**\n             * Callback functions for just before the table is redrawn. A return of\n             * false will be used to cancel the draw.\n             *  @type array\n             *  @default []\n             */\n            \"aoPreDrawCallback\": [],\n\n            /**\n             * Callback functions for when the table has been initialised.\n             *  @type array\n             *  @default []\n             */\n            \"aoInitComplete\": [],\n\n\n            /**\n             * Callbacks for modifying the settings to be stored for state saving, prior to\n             * saving state.\n             *  @type array\n             *  @default []\n             */\n            \"aoStateSaveParams\": [],\n\n            /**\n             * Callbacks for modifying the settings that have been stored for state saving\n             * prior to using the stored values to restore the state.\n             *  @type array\n             *  @default []\n             */\n            \"aoStateLoadParams\": [],\n\n            /**\n             * Callbacks for operating on the settings object once the saved state has been\n             * loaded\n             *  @type array\n             *  @default []\n             */\n            \"aoStateLoaded\": [],\n\n            /**\n             * Cache the table ID for quick access\n             *  @type string\n             *  @default <i>Empty string</i>\n             */\n            \"sTableId\": \"\",\n\n            /**\n             * The TABLE node for the main table\n             *  @type node\n             *  @default null\n             */\n            \"nTable\": null,\n\n            /**\n             * Permanent ref to the thead element\n             *  @type node\n             *  @default null\n             */\n            \"nTHead\": null,\n\n            /**\n             * Permanent ref to the tfoot element - if it exists\n             *  @type node\n             *  @default null\n             */\n            \"nTFoot\": null,\n\n            /**\n             * Permanent ref to the tbody element\n             *  @type node\n             *  @default null\n             */\n            \"nTBody\": null,\n\n            /**\n             * Cache the wrapper node (contains all DataTables controlled elements)\n             *  @type node\n             *  @default null\n             */\n            \"nTableWrapper\": null,\n\n            /**\n             * Indicate if when using server-side processing the loading of data\n             * should be deferred until the second draw.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             *  @default false\n             */\n            \"bDeferLoading\": false,\n\n            /**\n             * Indicate if all required information has been read in\n             *  @type boolean\n             *  @default false\n             */\n            \"bInitialised\": false,\n\n            /**\n             * Information about open rows. Each object in the array has the parameters\n             * 'nTr' and 'nParent'\n             *  @type array\n             *  @default []\n             */\n            \"aoOpenRows\": [],\n\n            /**\n             * Dictate the positioning of DataTables' control elements - see\n             * {@link DataTable.model.oInit.sDom}.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             *  @default null\n             */\n            \"sDom\": null,\n\n            /**\n             * Search delay (in mS)\n             *  @type integer\n             *  @default null\n             */\n            \"searchDelay\": null,\n\n            /**\n             * Which type of pagination should be used.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             *  @default two_button\n             */\n            \"sPaginationType\": \"two_button\",\n\n            /**\n             * The state duration (for `stateSave`) in seconds.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type int\n             *  @default 0\n             */\n            \"iStateDuration\": 0,\n\n            /**\n             * Array of callback functions for state saving. Each array element is an\n             * object with the following parameters:\n             *   <ul>\n             *     <li>function:fn - function to call. Takes two parameters, oSettings\n             *       and the JSON string to save that has been thus far created. Returns\n             *       a JSON string to be inserted into a json object\n             *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n             *     <li>string:sName - name of callback</li>\n             *   </ul>\n             *  @type array\n             *  @default []\n             */\n            \"aoStateSave\": [],\n\n            /**\n             * Array of callback functions for state loading. Each array element is an\n             * object with the following parameters:\n             *   <ul>\n             *     <li>function:fn - function to call. Takes two parameters, oSettings\n             *       and the object stored. May return false to cancel state loading</li>\n             *     <li>string:sName - name of callback</li>\n             *   </ul>\n             *  @type array\n             *  @default []\n             */\n            \"aoStateLoad\": [],\n\n            /**\n             * State that was saved. Useful for back reference\n             *  @type object\n             *  @default null\n             */\n            \"oSavedState\": null,\n\n            /**\n             * State that was loaded. Useful for back reference\n             *  @type object\n             *  @default null\n             */\n            \"oLoadedState\": null,\n\n            /**\n             * Source url for AJAX data for the table.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             *  @default null\n             */\n            \"sAjaxSource\": null,\n\n            /**\n             * Property from a given object from which to read the table data from. This\n             * can be an empty string (when not server-side processing), in which case\n             * it is  assumed an an array is given directly.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             */\n            \"sAjaxDataProp\": null,\n\n            /**\n             * Note if draw should be blocked while getting data\n             *  @type boolean\n             *  @default true\n             */\n            \"bAjaxDataGet\": true,\n\n            /**\n             * The last jQuery XHR object that was used for server-side data gathering.\n             * This can be used for working with the XHR information in one of the\n             * callbacks\n             *  @type object\n             *  @default null\n             */\n            \"jqXHR\": null,\n\n            /**\n             * JSON returned from the server in the last Ajax request\n             *  @type object\n             *  @default undefined\n             */\n            \"json\": undefined,\n\n            /**\n             * Data submitted as part of the last Ajax request\n             *  @type object\n             *  @default undefined\n             */\n            \"oAjaxData\": undefined,\n\n            /**\n             * Function to get the server-side data.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type function\n             */\n            \"fnServerData\": null,\n\n            /**\n             * Functions which are called prior to sending an Ajax request so extra\n             * parameters can easily be sent to the server\n             *  @type array\n             *  @default []\n             */\n            \"aoServerParams\": [],\n\n            /**\n             * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n             * required).\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             */\n            \"sServerMethod\": null,\n\n            /**\n             * Format numbers for display.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type function\n             */\n            \"fnFormatNumber\": null,\n\n            /**\n             * List of options that can be used for the user selectable length menu.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type array\n             *  @default []\n             */\n            \"aLengthMenu\": null,\n\n            /**\n             * Counter for the draws that the table does. Also used as a tracker for\n             * server-side processing\n             *  @type int\n             *  @default 0\n             */\n            \"iDraw\": 0,\n\n            /**\n             * Indicate if a redraw is being done - useful for Ajax\n             *  @type boolean\n             *  @default false\n             */\n            \"bDrawing\": false,\n\n            /**\n             * Draw index (iDraw) of the last error when parsing the returned data\n             *  @type int\n             *  @default -1\n             */\n            \"iDrawError\": -1,\n\n            /**\n             * Paging display length\n             *  @type int\n             *  @default 10\n             */\n            \"_iDisplayLength\": 10,\n\n            /**\n             * Paging start point - aiDisplay index\n             *  @type int\n             *  @default 0\n             */\n            \"_iDisplayStart\": 0,\n\n            /**\n             * Server-side processing - number of records in the result set\n             * (i.e. before filtering), Use fnRecordsTotal rather than\n             * this property to get the value of the number of records, regardless of\n             * the server-side processing setting.\n             *  @type int\n             *  @default 0\n             *  @private\n             */\n            \"_iRecordsTotal\": 0,\n\n            /**\n             * Server-side processing - number of records in the current display set\n             * (i.e. after filtering). Use fnRecordsDisplay rather than\n             * this property to get the value of the number of records, regardless of\n             * the server-side processing setting.\n             *  @type boolean\n             *  @default 0\n             *  @private\n             */\n            \"_iRecordsDisplay\": 0,\n\n            /**\n             * Flag to indicate if jQuery UI marking and classes should be used.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bJUI\": null,\n\n            /**\n             * The classes to use for the table\n             *  @type object\n             *  @default {}\n             */\n            \"oClasses\": {},\n\n            /**\n             * Flag attached to the settings object so you can check in the draw\n             * callback if filtering has been done in the draw. Deprecated in favour of\n             * events.\n             *  @type boolean\n             *  @default false\n             *  @deprecated\n             */\n            \"bFiltered\": false,\n\n            /**\n             * Flag attached to the settings object so you can check in the draw\n             * callback if sorting has been done in the draw. Deprecated in favour of\n             * events.\n             *  @type boolean\n             *  @default false\n             *  @deprecated\n             */\n            \"bSorted\": false,\n\n            /**\n             * Indicate that if multiple rows are in the header and there is more than\n             * one unique cell per column, if the top one (true) or bottom one (false)\n             * should be used for sorting / title by DataTables.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bSortCellsTop\": null,\n\n            /**\n             * Initialisation object that is used for the table\n             *  @type object\n             *  @default null\n             */\n            \"oInit\": null,\n\n            /**\n             * Destroy callback functions - for plug-ins to attach themselves to the\n             * destroy so they can clean up markup and events.\n             *  @type array\n             *  @default []\n             */\n            \"aoDestroyCallback\": [],\n\n\n            /**\n             * Get the number of records in the current record set, before filtering\n             *  @type function\n             */\n            \"fnRecordsTotal\": function () {\n                return _fnDataSource(this) == 'ssp' ?\n                this._iRecordsTotal * 1 :\n                    this.aiDisplayMaster.length;\n            },\n\n            /**\n             * Get the number of records in the current record set, after filtering\n             *  @type function\n             */\n            \"fnRecordsDisplay\": function () {\n                return _fnDataSource(this) == 'ssp' ?\n                this._iRecordsDisplay * 1 :\n                    this.aiDisplay.length;\n            },\n\n            /**\n             * Get the display end point - aiDisplay index\n             *  @type function\n             */\n            \"fnDisplayEnd\": function () {\n                var\n                    len = this._iDisplayLength,\n                    start = this._iDisplayStart,\n                    calc = start + len,\n                    records = this.aiDisplay.length,\n                    features = this.oFeatures,\n                    paginate = features.bPaginate;\n\n                if (features.bServerSide) {\n                    return paginate === false || len === -1 ?\n                    start + records :\n                        Math.min(start + len, this._iRecordsDisplay);\n                }\n                else {\n                    return !paginate || calc > records || len === -1 ?\n                        records :\n                        calc;\n                }\n            },\n\n            /**\n             * The DataTables object for this table\n             *  @type object\n             *  @default null\n             */\n            \"oInstance\": null,\n\n            /**\n             * Unique identifier for each instance of the DataTables object. If there\n             * is an ID on the table node, then it takes that value, otherwise an\n             * incrementing internal counter is used.\n             *  @type string\n             *  @default null\n             */\n            \"sInstance\": null,\n\n            /**\n             * tabindex attribute value that is added to DataTables control elements, allowing\n             * keyboard navigation of the table and its controls.\n             */\n            \"iTabIndex\": 0,\n\n            /**\n             * DIV container for the footer scrolling table if scrolling\n             */\n            \"nScrollHead\": null,\n\n            /**\n             * DIV container for the footer scrolling table if scrolling\n             */\n            \"nScrollFoot\": null,\n\n            /**\n             * Last applied sort\n             *  @type array\n             *  @default []\n             */\n            \"aLastSort\": [],\n\n            /**\n             * Stored plug-in instances\n             *  @type object\n             *  @default {}\n             */\n            \"oPlugins\": {}\n        };\n\n        /**\n         * Extension object for DataTables that is used to provide all extension\n         * options.\n         *\n         * Note that the `DataTable.ext` object is available through\n         * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n         * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n         *  @namespace\n         *  @extends DataTable.models.ext\n         */\n\n\n        /**\n         * DataTables extensions\n         *\n         * This namespace acts as a collection area for plug-ins that can be used to\n         * extend DataTables capabilities. Indeed many of the build in methods\n         * use this method to provide their own capabilities (sorting methods for\n         * example).\n         *\n         * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n         * reasons\n         *\n         *  @namespace\n         */\n        DataTable.ext = _ext = {\n            /**\n             * Element class names\n             *\n             *  @type object\n             *  @default {}\n             */\n            classes: {},\n\n\n            /**\n             * Error reporting.\n             *\n             * How should DataTables report an error. Can take the value 'alert' or\n             * 'throw'\n             *\n             *  @type string\n             *  @default alert\n             */\n            errMode: \"alert\",\n\n\n            /**\n             * Feature plug-ins.\n             *\n             * This is an array of objects which describe the feature plug-ins that are\n             * available to DataTables. These feature plug-ins are then available for\n             * use through the `dom` initialisation option.\n             *\n             * Each feature plug-in is described by an object which must have the\n             * following properties:\n             *\n             * * `fnInit` - function that is used to initialise the plug-in,\n             * * `cFeature` - a character so the feature can be enabled by the `dom`\n             *   instillation option. This is case sensitive.\n             *\n             * The `fnInit` function has the following input parameters:\n             *\n             * 1. `{object}` DataTables settings object: see\n             *    {@link DataTable.models.oSettings}\n             *\n             * And the following return is expected:\n             *\n             * * {node|null} The element which contains your feature. Note that the\n             *   return may also be void if your plug-in does not require to inject any\n             *   DOM elements into DataTables control (`dom`) - for example this might\n             *   be useful when developing a plug-in which allows table control via\n             *   keyboard entry\n             *\n             *  @type array\n             *\n             *  @example\n             *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n             */\n            feature: [],\n\n\n            /**\n             * Row searching.\n             *\n             * This method of searching is complimentary to the default type based\n             * searching, and a lot more comprehensive as it allows you complete control\n             * over the searching logic. Each element in this array is a function\n             * (parameters described below) that is called for every row in the table,\n             * and your logic decides if it should be included in the searching data set\n             * or not.\n             *\n             * Searching functions have the following input parameters:\n             *\n             * 1. `{object}` DataTables settings object: see\n             *    {@link DataTable.models.oSettings}\n             * 2. `{array|object}` Data for the row to be processed (same as the\n             *    original format that was passed in as the data source, or an array\n             *    from a DOM data source\n             * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n             *    can be useful to retrieve the `TR` element if you need DOM interaction.\n             *\n             * And the following return is expected:\n             *\n             * * {boolean} Include the row in the searched result set (true) or not\n             *   (false)\n             *\n             * Note that as with the main search ability in DataTables, technically this\n             * is \"filtering\", since it is subtractive. However, for consistency in\n             * naming we call it searching here.\n             *\n             *  @type array\n             *  @default []\n             *\n             *  @example\n             *    // The following example shows custom search being applied to the\n             *    // fourth column (i.e. the data[3] index) based on two input values\n             *    // from the end-user, matching the data in a certain range.\n             *    $.fn.dataTable.ext.search.push(\n             *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n             *    );\n             */\n            search: [],\n\n\n            /**\n             * Internal functions, exposed for used in plug-ins.\n             *\n             * Please note that you should not need to use the internal methods for\n             * anything other than a plug-in (and even then, try to avoid if possible).\n             * The internal function may change between releases.\n             *\n             *  @type object\n             *  @default {}\n             */\n            internal: {},\n\n\n            /**\n             * Legacy configuration options. Enable and disable legacy options that\n             * are available in DataTables.\n             *\n             *  @type object\n             */\n            legacy: {\n                /**\n                 * Enable / disable DataTables 1.9 compatible server-side processing\n                 * requests\n                 *\n                 *  @type boolean\n                 *  @default null\n                 */\n                ajax: null\n            },\n\n\n            /**\n             * Pagination plug-in methods.\n             *\n             * Each entry in this object is a function and defines which buttons should\n             * be shown by the pagination rendering method that is used for the table:\n             * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n             * buttons are displayed in the document, while the functions here tell it\n             * what buttons to display. This is done by returning an array of button\n             * descriptions (what each button will do).\n             *\n             * Pagination types (the four built in options and any additional plug-in\n             * options defined here) can be used through the `paginationType`\n             * initialisation parameter.\n             *\n             * The functions defined take two parameters:\n             *\n             * 1. `{int} page` The current page index\n             * 2. `{int} pages` The number of pages in the table\n             *\n             * Each function is expected to return an array where each element of the\n             * array can be one of:\n             *\n             * * `first` - Jump to first page when activated\n             * * `last` - Jump to last page when activated\n             * * `previous` - Show previous page when activated\n             * * `next` - Show next page when activated\n             * * `{int}` - Show page of the index given\n             * * `{array}` - A nested array containing the above elements to add a\n             *   containing 'DIV' element (might be useful for styling).\n             *\n             * Note that DataTables v1.9- used this object slightly differently whereby\n             * an object with two functions would be defined for each plug-in. That\n             * ability is still supported by DataTables 1.10+ to provide backwards\n             * compatibility, but this option of use is now decremented and no longer\n             * documented in DataTables 1.10+.\n             *\n             *  @type object\n             *  @default {}\n             *\n             *  @example\n             *    // Show previous, next and current page buttons only\n             *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n             */\n            pager: {},\n\n\n            renderer: {\n                pageButton: {},\n                header: {}\n            },\n\n\n            /**\n             * Ordering plug-ins - custom data source\n             *\n             * The extension options for ordering of data available here is complimentary\n             * to the default type based ordering that DataTables typically uses. It\n             * allows much greater control over the the data that is being used to\n             * order a column, but is necessarily therefore more complex.\n             *\n             * This type of ordering is useful if you want to do ordering based on data\n             * live from the DOM (for example the contents of an 'input' element) rather\n             * than just the static string that DataTables knows of.\n             *\n             * The way these plug-ins work is that you create an array of the values you\n             * wish to be ordering for the column in question and then return that\n             * array. The data in the array much be in the index order of the rows in\n             * the table (not the currently ordering order!). Which order data gathering\n             * function is run here depends on the `dt-init columns.orderDataType`\n             * parameter that is used for the column (if any).\n             *\n             * The functions defined take two parameters:\n             *\n             * 1. `{object}` DataTables settings object: see\n             *    {@link DataTable.models.oSettings}\n             * 2. `{int}` Target column index\n             *\n             * Each function is expected to return an array:\n             *\n             * * `{array}` Data for the column to be ordering upon\n             *\n             *  @type array\n             *\n             *  @example\n             *    // Ordering using `input` node values\n             *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n             *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n             */\n            order: {},\n\n\n            /**\n             * Type based plug-ins.\n             *\n             * Each column in DataTables has a type assigned to it, either by automatic\n             * detection or by direct assignment using the `type` option for the column.\n             * The type of a column will effect how it is ordering and search (plug-ins\n             * can also make use of the column type if required).\n             *\n             * @namespace\n             */\n            type: {\n                /**\n                 * Type detection functions.\n                 *\n                 * The functions defined in this object are used to automatically detect\n                 * a column's type, making initialisation of DataTables super easy, even\n                 * when complex data is in the table.\n                 *\n                 * The functions defined take two parameters:\n                 *\n                 *  1. `{*}` Data from the column cell to be analysed\n                 *  2. `{settings}` DataTables settings object. This can be used to\n                 *     perform context specific type detection - for example detection\n                 *     based on language settings such as using a comma for a decimal\n                 *     place. Generally speaking the options from the settings will not\n                 *     be required\n                 *\n                 * Each function is expected to return:\n                 *\n                 * * `{string|null}` Data type detected, or null if unknown (and thus\n                 *   pass it on to the other type detection functions.\n                 *\n                 *  @type array\n                 *\n                 *  @example\n                 *    // Currency type detection plug-in:\n                 *    $.fn.dataTable.ext.type.detect.push(\n                 *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! $.isNumeric( data.substring(1) ) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n                 *    );\n                 */\n                detect: [],\n\n\n                /**\n                 * Type based search formatting.\n                 *\n                 * The type based searching functions can be used to pre-format the\n                 * data to be search on. For example, it can be used to strip HTML\n                 * tags or to de-format telephone numbers for numeric only searching.\n                 *\n                 * Note that is a search is not defined for a column of a given type,\n                 * no search formatting will be performed.\n                 *\n                 * Pre-processing of searching data plug-ins - When you assign the sType\n                 * for a column (or have it automatically detected for you by DataTables\n                 * or a type detection plug-in), you will typically be using this for\n                 * custom sorting, but it can also be used to provide custom searching\n                 * by allowing you to pre-processing the data and returning the data in\n                 * the format that should be searched upon. This is done by adding\n                 * functions this object with a parameter name which matches the sType\n                 * for that target column. This is the corollary of <i>afnSortData</i>\n                 * for searching data.\n                 *\n                 * The functions defined take a single parameter:\n                 *\n                 *  1. `{*}` Data from the column cell to be prepared for searching\n                 *\n                 * Each function is expected to return:\n                 *\n                 * * `{string|null}` Formatted string that will be used for the searching.\n                 *\n                 *  @type object\n                 *  @default {}\n                 *\n                 *  @example\n                 *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n                 */\n                search: {},\n\n\n                /**\n                 * Type based ordering.\n                 *\n                 * The column type tells DataTables what ordering to apply to the table\n                 * when a column is sorted upon. The order for each type that is defined,\n                 * is defined by the functions available in this object.\n                 *\n                 * Each ordering option can be described by three properties added to\n                 * this object:\n                 *\n                 * * `{type}-pre` - Pre-formatting function\n                 * * `{type}-asc` - Ascending order function\n                 * * `{type}-desc` - Descending order function\n                 *\n                 * All three can be used together, only `{type}-pre` or only\n                 * `{type}-asc` and `{type}-desc` together. It is generally recommended\n                 * that only `{type}-pre` is used, as this provides the optimal\n                 * implementation in terms of speed, although the others are provided\n                 * for compatibility with existing Javascript sort functions.\n                 *\n                 * `{type}-pre`: Functions defined take a single parameter:\n                 *\n                 *  1. `{*}` Data from the column cell to be prepared for ordering\n                 *\n                 * And return:\n                 *\n                 * * `{*}` Data to be sorted upon\n                 *\n                 * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n                 * functions, taking two parameters:\n                 *\n                 *  1. `{*}` Data to compare to the second parameter\n                 *  2. `{*}` Data to compare to the first parameter\n                 *\n                 * And returning:\n                 *\n                 * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n                 *   than the second parameter, ===0 if the two parameters are equal and\n                 *   >0 if the first parameter should be sorted height than the second\n                 *   parameter.\n                 *\n                 *  @type object\n                 *  @default {}\n                 *\n                 *  @example\n                 *    // Numeric ordering of formatted numbers with a pre-formatter\n                 *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n                 *\n                 *  @example\n                 *    // Case-sensitive string ordering, with no pre-formatting method\n                 *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n                 */\n                order: {}\n            },\n\n            /**\n             * Unique DataTables instance counter\n             *\n             * @type int\n             * @private\n             */\n            _unique: 0,\n\n\n            //\n            // Depreciated\n            // The following properties are retained for backwards compatiblity only.\n            // The should not be used in new projects and will be removed in a future\n            // version\n            //\n\n            /**\n             * Version check function.\n             *  @type function\n             *  @depreciated Since 1.10\n             */\n            fnVersionCheck: DataTable.fnVersionCheck,\n\n\n            /**\n             * Index for what 'this' index API functions should use\n             *  @type int\n             *  @deprecated Since v1.10\n             */\n            iApiIndex: 0,\n\n\n            /**\n             * jQuery UI class container\n             *  @type object\n             *  @deprecated Since v1.10\n             */\n            oJUIClasses: {},\n\n\n            /**\n             * Software version\n             *  @type string\n             *  @deprecated Since v1.10\n             */\n            sVersion: DataTable.version\n        };\n\n\n        //\n        // Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n        //\n        $.extend(_ext, {\n            afnFiltering: _ext.search,\n            aTypes: _ext.type.detect,\n            ofnSearch: _ext.type.search,\n            oSort: _ext.type.order,\n            afnSortData: _ext.order,\n            aoFeatures: _ext.feature,\n            oApi: _ext.internal,\n            oStdClasses: _ext.classes,\n            oPagination: _ext.pager\n        });\n\n\n        $.extend(DataTable.ext.classes, {\n            \"sTable\": \"dataTable\",\n            \"sNoFooter\": \"no-footer\",\n\n            /* Paging buttons */\n            \"sPageButton\": \"paginate_button\",\n            \"sPageButtonActive\": \"current\",\n            \"sPageButtonDisabled\": \"disabled\",\n\n            /* Striping classes */\n            \"sStripeOdd\": \"odd\",\n            \"sStripeEven\": \"even\",\n\n            /* Empty row */\n            \"sRowEmpty\": \"dataTables_empty\",\n\n            /* Features */\n            \"sWrapper\": \"dataTables_wrapper\",\n            \"sFilter\": \"dataTables_filter\",\n            \"sInfo\": \"dataTables_info\",\n            \"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n            \"sLength\": \"dataTables_length\",\n            \"sProcessing\": \"dataTables_processing\",\n\n            /* Sorting */\n            \"sSortAsc\": \"sorting_asc\",\n            \"sSortDesc\": \"sorting_desc\",\n            \"sSortable\": \"sorting\", /* Sortable in both directions */\n            \"sSortableAsc\": \"sorting_asc_disabled\",\n            \"sSortableDesc\": \"sorting_desc_disabled\",\n            \"sSortableNone\": \"sorting_disabled\",\n            \"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n            /* Filtering */\n            \"sFilterInput\": \"\",\n\n            /* Page length */\n            \"sLengthSelect\": \"\",\n\n            /* Scrolling */\n            \"sScrollWrapper\": \"dataTables_scroll\",\n            \"sScrollHead\": \"dataTables_scrollHead\",\n            \"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n            \"sScrollBody\": \"dataTables_scrollBody\",\n            \"sScrollFoot\": \"dataTables_scrollFoot\",\n            \"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n            /* Misc */\n            \"sHeaderTH\": \"\",\n            \"sFooterTH\": \"\",\n\n            // Deprecated\n            \"sSortJUIAsc\": \"\",\n            \"sSortJUIDesc\": \"\",\n            \"sSortJUI\": \"\",\n            \"sSortJUIAscAllowed\": \"\",\n            \"sSortJUIDescAllowed\": \"\",\n            \"sSortJUIWrapper\": \"\",\n            \"sSortIcon\": \"\",\n            \"sJUIHeader\": \"\",\n            \"sJUIFooter\": \"\"\n        });\n\n\n        (function () {\n\n            // Reused strings for better compression. Closure compiler appears to have a\n            // weird edge case where it is trying to expand strings rather than use the\n            // variable version. This results in about 200 bytes being added, for very\n            // little preference benefit since it this run on script load only.\n            var _empty = '';\n            _empty = '';\n\n            var _stateDefault = _empty + 'ui-state-default';\n            var _sortIcon = _empty + 'css_right ui-icon ui-icon-';\n            var _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';\n\n            $.extend(DataTable.ext.oJUIClasses, DataTable.ext.classes, {\n                /* Full numbers paging buttons */\n                \"sPageButton\": \"fg-button ui-button \" + _stateDefault,\n                \"sPageButtonActive\": \"ui-state-disabled\",\n                \"sPageButtonDisabled\": \"ui-state-disabled\",\n\n                /* Features */\n                \"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \" +\n                \"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n\n                /* Sorting */\n                \"sSortAsc\": _stateDefault + \" sorting_asc\",\n                \"sSortDesc\": _stateDefault + \" sorting_desc\",\n                \"sSortable\": _stateDefault + \" sorting\",\n                \"sSortableAsc\": _stateDefault + \" sorting_asc_disabled\",\n                \"sSortableDesc\": _stateDefault + \" sorting_desc_disabled\",\n                \"sSortableNone\": _stateDefault + \" sorting_disabled\",\n                \"sSortJUIAsc\": _sortIcon + \"triangle-1-n\",\n                \"sSortJUIDesc\": _sortIcon + \"triangle-1-s\",\n                \"sSortJUI\": _sortIcon + \"carat-2-n-s\",\n                \"sSortJUIAscAllowed\": _sortIcon + \"carat-1-n\",\n                \"sSortJUIDescAllowed\": _sortIcon + \"carat-1-s\",\n                \"sSortJUIWrapper\": \"DataTables_sort_wrapper\",\n                \"sSortIcon\": \"DataTables_sort_icon\",\n\n                /* Scrolling */\n                \"sScrollHead\": \"dataTables_scrollHead \" + _stateDefault,\n                \"sScrollFoot\": \"dataTables_scrollFoot \" + _stateDefault,\n\n                /* Misc */\n                \"sHeaderTH\": _stateDefault,\n                \"sFooterTH\": _stateDefault,\n                \"sJUIHeader\": _headerFooter + \" ui-corner-tl ui-corner-tr\",\n                \"sJUIFooter\": _headerFooter + \" ui-corner-bl ui-corner-br\"\n            });\n\n        }());\n\n\n        var extPagination = DataTable.ext.pager;\n\n        function _numbers(page, pages) {\n            var\n                numbers = [],\n                buttons = extPagination.numbers_length,\n                half = Math.floor(buttons / 2),\n                i = 1;\n\n            if (pages <= buttons) {\n                numbers = _range(0, pages);\n            }\n            else if (page <= half) {\n                numbers = _range(0, buttons - 2);\n                numbers.push('ellipsis');\n                numbers.push(pages - 1);\n            }\n            else if (page >= pages - 1 - half) {\n                numbers = _range(pages - (buttons - 2), pages);\n                numbers.splice(0, 0, 'ellipsis'); // no unshift in ie6\n                numbers.splice(0, 0, 0);\n            }\n            else {\n                numbers = _range(page - 1, page + 2);\n                numbers.push('ellipsis');\n                numbers.push(pages - 1);\n                numbers.splice(0, 0, 'ellipsis');\n                numbers.splice(0, 0, 0);\n            }\n\n            numbers.DT_el = 'span';\n            return numbers;\n        }\n\n\n        $.extend(extPagination, {\n            simple: function (page, pages) {\n                return ['previous', 'next'];\n            },\n\n            full: function (page, pages) {\n                return ['first', 'previous', 'next', 'last'];\n            },\n\n            simple_numbers: function (page, pages) {\n                return ['previous', _numbers(page, pages), 'next'];\n            },\n\n            full_numbers: function (page, pages) {\n                return ['first', 'previous', _numbers(page, pages), 'next', 'last'];\n            },\n\n            // For testing and plug-ins to use\n            _numbers: _numbers,\n            numbers_length: 7\n        });\n\n\n        $.extend(true, DataTable.ext.renderer, {\n            pageButton: {\n                _: function (settings, host, idx, buttons, page, pages) {\n                    var classes = settings.oClasses;\n                    var lang = settings.oLanguage.oPaginate;\n                    var btnDisplay, btnClass, counter = 0;\n\n                    var attach = function (container, buttons) {\n                        var i, ien, node, button;\n                        var clickHandler = function (e) {\n                            _fnPageChange(settings, e.data.action, true);\n                        };\n\n                        for (i = 0, ien = buttons.length; i < ien; i++) {\n                            button = buttons[i];\n\n                            if ($.isArray(button)) {\n                                var inner = $('<' + (button.DT_el || 'div') + '/>')\n                                    .appendTo(container);\n                                attach(inner, button);\n                            }\n                            else {\n                                btnDisplay = '';\n                                btnClass = '';\n\n                                switch (button) {\n                                    case 'ellipsis':\n                                        container.append('<span>&hellip;</span>');\n                                        break;\n\n                                    case 'first':\n                                        btnDisplay = lang.sFirst;\n                                        btnClass = button + (page > 0 ?\n                                                '' : ' ' + classes.sPageButtonDisabled);\n                                        break;\n\n                                    case 'previous':\n                                        btnDisplay = lang.sPrevious;\n                                        btnClass = button + (page > 0 ?\n                                                '' : ' ' + classes.sPageButtonDisabled);\n                                        break;\n\n                                    case 'next':\n                                        btnDisplay = lang.sNext;\n                                        btnClass = button + (page < pages - 1 ?\n                                                '' : ' ' + classes.sPageButtonDisabled);\n                                        break;\n\n                                    case 'last':\n                                        btnDisplay = lang.sLast;\n                                        btnClass = button + (page < pages - 1 ?\n                                                '' : ' ' + classes.sPageButtonDisabled);\n                                        break;\n\n                                    default:\n                                        btnDisplay = button + 1;\n                                        btnClass = page === button ?\n                                            classes.sPageButtonActive : '';\n                                        break;\n                                }\n\n                                if (btnDisplay) {\n                                    node = $('<a>', {\n                                        'class': classes.sPageButton + ' ' + btnClass,\n                                        'aria-controls': settings.sTableId,\n                                        'data-dt-idx': counter,\n                                        'tabindex': settings.iTabIndex,\n                                        'id': idx === 0 && typeof button === 'string' ?\n                                        settings.sTableId + '_' + button :\n                                            null\n                                    })\n                                        .html(btnDisplay)\n                                        .appendTo(container);\n\n                                    _fnBindAction(\n                                        node, {action: button}, clickHandler\n                                    );\n\n                                    counter++;\n                                }\n                            }\n                        }\n                    };\n\n                    // IE9 throws an 'unknown error' if document.activeElement is used\n                    // inside an iframe or frame. Try / catch the error. Not good for\n                    // accessibility, but neither are frames.\n                    try {\n                        // Because this approach is destroying and recreating the paging\n                        // elements, focus is lost on the select button which is bad for\n                        // accessibility. So we want to restore focus once the draw has\n                        // completed\n                        var activeEl = $(document.activeElement).data('dt-idx');\n\n                        attach($(host).empty(), buttons);\n\n                        if (activeEl !== null) {\n                            $(host).find('[data-dt-idx=' + activeEl + ']').focus();\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n            }\n        });\n\n\n        // Built in type detection. See model.ext.aTypes for information about\n        // what is required from this methods.\n        $.extend(DataTable.ext.type.detect, [\n            // Plain numbers - first since V8 detects some plain numbers as dates\n            // e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n            function (d, settings) {\n                var decimal = settings.oLanguage.sDecimal;\n                return _isNumber(d, decimal) ? 'num' + decimal : null;\n            },\n\n            // Dates (only those recognised by the browser's Date.parse)\n            function (d, settings) {\n                // V8 will remove any unknown characters at the start and end of the\n                // expression, leading to false matches such as `$245.12` or `10%` being\n                // a valid date. See forum thread 18941 for detail.\n                if (d && !(d instanceof Date) && ( !_re_date_start.test(d) || !_re_date_end.test(d) )) {\n                    return null;\n                }\n                var parsed = Date.parse(d);\n                return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n            },\n\n            // Formatted numbers\n            function (d, settings) {\n                var decimal = settings.oLanguage.sDecimal;\n                return _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null;\n            },\n\n            // HTML numeric\n            function (d, settings) {\n                var decimal = settings.oLanguage.sDecimal;\n                return _htmlNumeric(d, decimal) ? 'html-num' + decimal : null;\n            },\n\n            // HTML numeric, formatted\n            function (d, settings) {\n                var decimal = settings.oLanguage.sDecimal;\n                return _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null;\n            },\n\n            // HTML (this is strict checking - there must be html)\n            function (d, settings) {\n                return _empty(d) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n                    'html' : null;\n            }\n        ]);\n\n\n        // Filter formatting functions. See model.ext.ofnSearch for information about\n        // what is required from these methods.\n        // \n        // Note that additional search methods are added for the html numbers and\n        // html formatted numbers by `_addNumericSort()` when we know what the decimal\n        // place is\n\n\n        $.extend(DataTable.ext.type.search, {\n            html: function (data) {\n                return _empty(data) ?\n                    data :\n                    typeof data === 'string' ?\n                        data\n                            .replace(_re_new_lines, \" \")\n                            .replace(_re_html, \"\") :\n                        '';\n            },\n\n            string: function (data) {\n                return _empty(data) ?\n                    data :\n                    typeof data === 'string' ?\n                        data.replace(_re_new_lines, \" \") :\n                        data;\n            }\n        });\n\n\n        var __numericReplace = function (d, decimalPlace, re1, re2) {\n            if (d !== 0 && (!d || d === '-')) {\n                return -Infinity;\n            }\n\n            // If a decimal place other than `.` is used, it needs to be given to the\n            // function so we can detect it and replace with a `.` which is the only\n            // decimal place Javascript recognises - it is not locale aware.\n            if (decimalPlace) {\n                d = _numToDecimal(d, decimalPlace);\n            }\n\n            if (d.replace) {\n                if (re1) {\n                    d = d.replace(re1, '');\n                }\n\n                if (re2) {\n                    d = d.replace(re2, '');\n                }\n            }\n\n            return d * 1;\n        };\n\n\n        // Add the numeric 'deformatting' functions for sorting and search. This is done\n        // in a function to provide an easy ability for the language options to add\n        // additional methods if a non-period decimal place is used.\n        function _addNumericSort(decimalPlace) {\n            $.each(\n                {\n                    // Plain numbers\n                    \"num\": function (d) {\n                        return __numericReplace(d, decimalPlace);\n                    },\n\n                    // Formatted numbers\n                    \"num-fmt\": function (d) {\n                        return __numericReplace(d, decimalPlace, _re_formatted_numeric);\n                    },\n\n                    // HTML numeric\n                    \"html-num\": function (d) {\n                        return __numericReplace(d, decimalPlace, _re_html);\n                    },\n\n                    // HTML numeric, formatted\n                    \"html-num-fmt\": function (d) {\n                        return __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric);\n                    }\n                },\n                function (key, fn) {\n                    // Add the ordering method\n                    _ext.type.order[key + decimalPlace + '-pre'] = fn;\n\n                    // For HTML types add a search formatter that will strip the HTML\n                    if (key.match(/^html\\-/)) {\n                        _ext.type.search[key + decimalPlace] = _ext.type.search.html;\n                    }\n                }\n            );\n        }\n\n\n        // Default sort methods\n        $.extend(_ext.type.order, {\n            // Dates\n            \"date-pre\": function (d) {\n                return Date.parse(d) || 0;\n            },\n\n            // html\n            \"html-pre\": function (a) {\n                return _empty(a) ?\n                    '' :\n                    a.replace ?\n                        a.replace(/<.*?>/g, \"\").toLowerCase() :\n                    a + '';\n            },\n\n            // string\n            \"string-pre\": function (a) {\n                // This is a little complex, but faster than always calling toString,\n                // http://jsperf.com/tostring-v-check\n                return _empty(a) ?\n                    '' :\n                    typeof a === 'string' ?\n                        a.toLowerCase() :\n                        !a.toString ?\n                            '' :\n                            a.toString();\n            },\n\n            // string-asc and -desc are retained only for compatibility with the old\n            // sort methods\n            \"string-asc\": function (x, y) {\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n            },\n\n            \"string-desc\": function (x, y) {\n                return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n            }\n        });\n\n\n        // Numeric sorting types - order doesn't matter here\n        _addNumericSort('');\n\n\n        $.extend(true, DataTable.ext.renderer, {\n            header: {\n                _: function (settings, cell, column, classes) {\n                    // No additional mark-up required\n                    // Attach a sort listener to update on sort - note that using the\n                    // `DT` namespace will allow the event to be removed automatically\n                    // on destroy, while the `dt` namespaced event is the one we are\n                    // listening for\n                    $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n                        if (settings !== ctx) { // need to check this this is the host\n                            return;               // table, not a nested one\n                        }\n\n                        var colIdx = column.idx;\n\n                        cell\n                            .removeClass(\n                            column.sSortingClass + ' ' +\n                            classes.sSortAsc + ' ' +\n                            classes.sSortDesc\n                        )\n                            .addClass(columns[colIdx] == 'asc' ?\n                                classes.sSortAsc : columns[colIdx] == 'desc' ?\n                                classes.sSortDesc :\n                                column.sSortingClass\n                        );\n                    });\n                },\n\n                jqueryui: function (settings, cell, column, classes) {\n                    $('<div/>')\n                        .addClass(classes.sSortJUIWrapper)\n                        .append(cell.contents())\n                        .append($('<span/>')\n                            .addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI)\n                    )\n                        .appendTo(cell);\n\n                    // Attach a sort listener to update on sort\n                    $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n                        if (settings !== ctx) {\n                            return;\n                        }\n\n                        var colIdx = column.idx;\n\n                        cell\n                            .removeClass(classes.sSortAsc + \" \" + classes.sSortDesc)\n                            .addClass(columns[colIdx] == 'asc' ?\n                                classes.sSortAsc : columns[colIdx] == 'desc' ?\n                                classes.sSortDesc :\n                                column.sSortingClass\n                        );\n\n                        cell\n                            .find('span.' + classes.sSortIcon)\n                            .removeClass(\n                            classes.sSortJUIAsc + \" \" +\n                            classes.sSortJUIDesc + \" \" +\n                            classes.sSortJUI + \" \" +\n                            classes.sSortJUIAscAllowed + \" \" +\n                            classes.sSortJUIDescAllowed\n                        )\n                            .addClass(columns[colIdx] == 'asc' ?\n                                classes.sSortJUIAsc : columns[colIdx] == 'desc' ?\n                                classes.sSortJUIDesc :\n                                column.sSortingClassJUI\n                        );\n                    });\n                }\n            }\n        });\n\n        /*\n         * Public helper functions. These aren't used internally by DataTables, or\n         * called by any of the options passed into DataTables, but they can be used\n         * externally by developers working with DataTables. They are helper functions\n         * to make working with DataTables a little bit easier.\n         */\n\n        /**\n         * Helpers for `columns.render`.\n         *\n         * The options defined here can be used with the `columns.render` initialisation\n         * option to provide a display renderer. The following functions are defined:\n         *\n         * * `number` - Will format numeric data (defined by `columns.data`) for\n         *   display, retaining the original unformatted data for sorting and filtering.\n         *   It takes 4 parameters:\n         *   * `string` - Thousands grouping separator\n         *   * `string` - Decimal point indicator\n         *   * `integer` - Number of decimal points to show\n         *   * `string` (optional) - Prefix.\n         *\n         * @example\n         *   // Column definition using the number renderer\n         *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n         *\n         * @namespace\n         */\n        DataTable.render = {\n            number: function (thousands, decimal, precision, prefix) {\n                return {\n                    display: function (d) {\n                        var negative = d < 0 ? '-' : '';\n                        d = Math.abs(parseFloat(d));\n\n                        var intPart = parseInt(d, 10);\n                        var floatPart = precision ?\n                        decimal + (d - intPart).toFixed(precision).substring(2) :\n                            '';\n\n                        return negative + (prefix || '') +\n                            intPart.toString().replace(\n                                /\\B(?=(\\d{3})+(?!\\d))/g, thousands\n                            ) +\n                            floatPart;\n                    }\n                };\n            }\n        };\n\n\n        /*\n         * This is really a good bit rubbish this method of exposing the internal methods\n         * publicly... - To be fixed in 2.0 using methods on the prototype\n         */\n\n\n        /**\n         * Create a wrapper function for exporting an internal functions to an external API.\n         *  @param {string} fn API function name\n         *  @returns {function} wrapped function\n         *  @memberof DataTable#internal\n         */\n        function _fnExternApiFunc(fn) {\n            return function () {\n                var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(\n                    Array.prototype.slice.call(arguments)\n                );\n                return DataTable.ext.internal[fn].apply(this, args);\n            };\n        }\n\n\n        /**\n         * Reference to internal functions for use by plug-in developers. Note that\n         * these methods are references to internal functions and are considered to be\n         * private. If you use these methods, be aware that they are liable to change\n         * between versions.\n         *  @namespace\n         */\n        $.extend(DataTable.ext.internal, {\n            _fnExternApiFunc: _fnExternApiFunc,\n            _fnBuildAjax: _fnBuildAjax,\n            _fnAjaxUpdate: _fnAjaxUpdate,\n            _fnAjaxParameters: _fnAjaxParameters,\n            _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n            _fnAjaxDataSrc: _fnAjaxDataSrc,\n            _fnAddColumn: _fnAddColumn,\n            _fnColumnOptions: _fnColumnOptions,\n            _fnAdjustColumnSizing: _fnAdjustColumnSizing,\n            _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n            _fnColumnIndexToVisible: _fnColumnIndexToVisible,\n            _fnVisbleColumns: _fnVisbleColumns,\n            _fnGetColumns: _fnGetColumns,\n            _fnColumnTypes: _fnColumnTypes,\n            _fnApplyColumnDefs: _fnApplyColumnDefs,\n            _fnHungarianMap: _fnHungarianMap,\n            _fnCamelToHungarian: _fnCamelToHungarian,\n            _fnLanguageCompat: _fnLanguageCompat,\n            _fnBrowserDetect: _fnBrowserDetect,\n            _fnAddData: _fnAddData,\n            _fnAddTr: _fnAddTr,\n            _fnNodeToDataIndex: _fnNodeToDataIndex,\n            _fnNodeToColumnIndex: _fnNodeToColumnIndex,\n            _fnGetCellData: _fnGetCellData,\n            _fnSetCellData: _fnSetCellData,\n            _fnSplitObjNotation: _fnSplitObjNotation,\n            _fnGetObjectDataFn: _fnGetObjectDataFn,\n            _fnSetObjectDataFn: _fnSetObjectDataFn,\n            _fnGetDataMaster: _fnGetDataMaster,\n            _fnClearTable: _fnClearTable,\n            _fnDeleteIndex: _fnDeleteIndex,\n            _fnInvalidate: _fnInvalidate,\n            _fnGetRowElements: _fnGetRowElements,\n            _fnCreateTr: _fnCreateTr,\n            _fnBuildHead: _fnBuildHead,\n            _fnDrawHead: _fnDrawHead,\n            _fnDraw: _fnDraw,\n            _fnReDraw: _fnReDraw,\n            _fnAddOptionsHtml: _fnAddOptionsHtml,\n            _fnDetectHeader: _fnDetectHeader,\n            _fnGetUniqueThs: _fnGetUniqueThs,\n            _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n            _fnFilterComplete: _fnFilterComplete,\n            _fnFilterCustom: _fnFilterCustom,\n            _fnFilterColumn: _fnFilterColumn,\n            _fnFilter: _fnFilter,\n            _fnFilterCreateSearch: _fnFilterCreateSearch,\n            _fnEscapeRegex: _fnEscapeRegex,\n            _fnFilterData: _fnFilterData,\n            _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n            _fnUpdateInfo: _fnUpdateInfo,\n            _fnInfoMacros: _fnInfoMacros,\n            _fnInitialise: _fnInitialise,\n            _fnInitComplete: _fnInitComplete,\n            _fnLengthChange: _fnLengthChange,\n            _fnFeatureHtmlLength: _fnFeatureHtmlLength,\n            _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n            _fnPageChange: _fnPageChange,\n            _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n            _fnProcessingDisplay: _fnProcessingDisplay,\n            _fnFeatureHtmlTable: _fnFeatureHtmlTable,\n            _fnScrollDraw: _fnScrollDraw,\n            _fnApplyToChildren: _fnApplyToChildren,\n            _fnCalculateColumnWidths: _fnCalculateColumnWidths,\n            _fnThrottle: _fnThrottle,\n            _fnConvertToWidth: _fnConvertToWidth,\n            _fnScrollingWidthAdjust: _fnScrollingWidthAdjust,\n            _fnGetWidestNode: _fnGetWidestNode,\n            _fnGetMaxLenString: _fnGetMaxLenString,\n            _fnStringToCss: _fnStringToCss,\n            _fnScrollBarWidth: _fnScrollBarWidth,\n            _fnSortFlatten: _fnSortFlatten,\n            _fnSort: _fnSort,\n            _fnSortAria: _fnSortAria,\n            _fnSortListener: _fnSortListener,\n            _fnSortAttachListener: _fnSortAttachListener,\n            _fnSortingClasses: _fnSortingClasses,\n            _fnSortData: _fnSortData,\n            _fnSaveState: _fnSaveState,\n            _fnLoadState: _fnLoadState,\n            _fnSettingsFromNode: _fnSettingsFromNode,\n            _fnLog: _fnLog,\n            _fnMap: _fnMap,\n            _fnBindAction: _fnBindAction,\n            _fnCallbackReg: _fnCallbackReg,\n            _fnCallbackFire: _fnCallbackFire,\n            _fnLengthOverflow: _fnLengthOverflow,\n            _fnRenderer: _fnRenderer,\n            _fnDataSource: _fnDataSource,\n            _fnRowAttributes: _fnRowAttributes,\n            _fnCalculateEnd: function () {\n            } // Used by a lot of plug-ins, but redundant\n              // in 1.10, so this dead-end function is\n              // added to prevent errors\n        });\n\n\n        // jQuery access\n        $.fn.dataTable = DataTable;\n\n        // Legacy aliases\n        $.fn.dataTableSettings = DataTable.settings;\n        $.fn.dataTableExt = DataTable.ext;\n\n        // With a capital `D` we return a DataTables API instance rather than a\n        // jQuery object\n        $.fn.DataTable = function (opts) {\n            return $(this).dataTable(opts).api();\n        };\n\n        // All properties that are available to $.fn.dataTable should also be\n        // available on $.fn.DataTable\n        $.each(DataTable, function (prop, val) {\n            $.fn.DataTable[prop] = val;\n        });\n\n\n        // Information about events fired by DataTables - for documentation.\n        /**\n         * Draw event, fired whenever the table is redrawn on the page, at the same\n         * point as fnDrawCallback. This may be useful for binding events or\n         * performing calculations when the table is altered at all.\n         *  @name DataTable#draw.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         */\n\n        /**\n         * Search event, fired when the searching applied to the table (using the\n         * built-in global search, or column filters) is altered.\n         *  @name DataTable#search.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         */\n\n        /**\n         * Page change event, fired when the paging of the table is altered.\n         *  @name DataTable#page.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         */\n\n        /**\n         * Order event, fired when the ordering applied to the table is altered.\n         *  @name DataTable#order.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         */\n\n        /**\n         * DataTables initialisation complete event, fired when the table is fully\n         * drawn, including Ajax data loaded, if Ajax data is required.\n         *  @name DataTable#init.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} oSettings DataTables settings object\n         *  @param {object} json The JSON object request from the server - only\n         *    present if client-side Ajax sourced data is used</li></ol>\n         */\n\n        /**\n         * State save event, fired when the table has changed state a new state save\n         * is required. This event allows modification of the state saving object\n         * prior to actually doing the save, including addition or other state\n         * properties (for plug-ins) or modification of a DataTables core property.\n         *  @name DataTable#stateSaveParams.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} oSettings DataTables settings object\n         *  @param {object} json The state information to be saved\n         */\n\n        /**\n         * State load event, fired when the table is loading state from the stored\n         * data, but prior to the settings object being modified by the saved state\n         * - allowing modification of the saved state is required or loading of\n         * state for a plug-in.\n         *  @name DataTable#stateLoadParams.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} oSettings DataTables settings object\n         *  @param {object} json The saved state information\n         */\n\n        /**\n         * State loaded event, fired when state has been loaded from stored data and\n         * the settings object has been modified by the loaded data.\n         *  @name DataTable#stateLoaded.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} oSettings DataTables settings object\n         *  @param {object} json The saved state information\n         */\n\n        /**\n         * Processing event, fired when DataTables is doing some kind of processing\n         * (be it, order, searcg or anything else). It can be used to indicate to\n         * the end user that there is something happening, or that something has\n         * finished.\n         *  @name DataTable#processing.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} oSettings DataTables settings object\n         *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n         */\n\n        /**\n         * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n         * request to made to the server for new data. This event is called before\n         * DataTables processed the returned data, so it can also be used to pre-\n         * process the data returned from the server, if needed.\n         *\n         * Note that this trigger is called in `fnServerData`, if you override\n         * `fnServerData` and which to use this event, you need to trigger it in you\n         * success function.\n         *  @name DataTable#xhr.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         *  @param {object} json JSON returned from the server\n         *\n         *  @example\n         *     // Use a custom property returned from the server in another DOM element\n         *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n         *\n         *  @example\n         *     // Pre-process the data returned from the server\n         *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n         */\n\n        /**\n         * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n         * or passing the bDestroy:true parameter in the initialisation object. This\n         * can be used to remove bound events, added DOM nodes, etc.\n         *  @name DataTable#destroy.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         */\n\n        /**\n         * Page length change event, fired when number of records to show on each\n         * page (the length) is changed.\n         *  @name DataTable#length.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         *  @param {integer} len New length\n         */\n\n        /**\n         * Column sizing has changed.\n         *  @name DataTable#column-sizing.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         */\n\n        /**\n         * Column visibility has changed.\n         *  @name DataTable#column-visibility.dt\n         *  @event\n         *  @param {event} e jQuery event object\n         *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n         *  @param {int} column Column index\n         *  @param {bool} vis `false` if column now hidden, or `true` if visible\n         */\n\n        return $.fn.dataTable;\n    }));\n\n}(window, document));\n\n","/* Set the defaults for DataTables initialisation */\n$.extend(true, $.fn.dataTable.defaults, {\n    \"sDom\": \"<'row'<'col-sm-6'l><'col-sm-6'f>r>\" + \"t\" + \"<'row'<'col-sm-6'i><'col-sm-6'p>>\",\n    \"oLanguage\": {\n        \"sLengthMenu\": \"_MENU_ records per page\"\n    }\n});\n\n\n/* Default class modification */\n$.extend($.fn.dataTableExt.oStdClasses, {\n    \"sWrapper\": \"dataTables_wrapper form-inline\",\n    \"sFilterInput\": \"form-control input-sm\",\n    \"sLengthSelect\": \"form-control input-sm\"\n});\n\n// In 1.10 we use the pagination renderers to draw the Bootstrap paging,\n// rather than  custom plug-in\nif ($.fn.dataTable.Api) {\n    $.fn.dataTable.defaults.renderer = 'bootstrap';\n    $.fn.dataTable.ext.renderer.pageButton.bootstrap = function (settings, host, idx, buttons, page, pages) {\n        var api = new $.fn.dataTable.Api(settings);\n        var classes = settings.oClasses;\n        var lang = settings.oLanguage.oPaginate;\n        var btnDisplay, btnClass;\n\n        var attach = function (container, buttons) {\n            var i, ien, node, button;\n            var clickHandler = function (e) {\n                e.preventDefault();\n                if (e.data.action !== 'ellipsis') {\n                    api.page(e.data.action).draw(false);\n                }\n            };\n\n            for (i = 0, ien = buttons.length; i < ien; i++) {\n                button = buttons[i];\n\n                if ($.isArray(button)) {\n                    attach(container, button);\n                } else {\n                    btnDisplay = '';\n                    btnClass = '';\n\n                    switch (button) {\n                        case 'ellipsis':\n                            btnDisplay = '&hellip;';\n                            btnClass = 'disabled';\n                            break;\n\n                        case 'first':\n                            btnDisplay = lang.sFirst;\n                            btnClass = button + (page > 0 ?\n                                    '' : ' disabled');\n                            break;\n\n                        case 'previous':\n                            btnDisplay = lang.sPrevious;\n                            btnClass = button + (page > 0 ?\n                                    '' : ' disabled');\n                            break;\n\n                        case 'next':\n                            btnDisplay = lang.sNext;\n                            btnClass = button + (page < pages - 1 ?\n                                    '' : ' disabled');\n                            break;\n\n                        case 'last':\n                            btnDisplay = lang.sLast;\n                            btnClass = button + (page < pages - 1 ?\n                                    '' : ' disabled');\n                            break;\n\n                        default:\n                            btnDisplay = button + 1;\n                            btnClass = page === button ?\n                                'active' : '';\n                            break;\n                    }\n\n                    if (btnDisplay) {\n                        node = $('<li>', {\n                            'class': classes.sPageButton + ' ' + btnClass,\n                            'aria-controls': settings.sTableId,\n                            'tabindex': settings.iTabIndex,\n                            'id': idx === 0 && typeof button === 'string' ? settings.sTableId + '_' + button : null\n                        })\n                            .append($('<a>', {\n                                'href': '#'\n                            })\n                                .html(btnDisplay)\n                        )\n                            .appendTo(container);\n\n                        settings.oApi._fnBindAction(\n                            node, {\n                                action: button\n                            }, clickHandler\n                        );\n                    }\n                }\n            }\n        };\n\n        attach(\n            $(host).empty().html('<ul class=\"pagination\"/>').children('ul'),\n            buttons\n        );\n    }\n} else {\n    // Integration for 1.9-\n    $.fn.dataTable.defaults.sPaginationType = 'bootstrap';\n\n    /* API method to get paging information */\n    $.fn.dataTableExt.oApi.fnPagingInfo = function (oSettings) {\n        return {\n            \"iStart\": oSettings._iDisplayStart,\n            \"iEnd\": oSettings.fnDisplayEnd(),\n            \"iLength\": oSettings._iDisplayLength,\n            \"iTotal\": oSettings.fnRecordsTotal(),\n            \"iFilteredTotal\": oSettings.fnRecordsDisplay(),\n            \"iPage\": oSettings._iDisplayLength === -1 ? 0 : Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength),\n            \"iTotalPages\": oSettings._iDisplayLength === -1 ? 0 : Math.ceil(oSettings.fnRecordsDisplay() / oSettings._iDisplayLength)\n        };\n    };\n\n    /* Bootstrap style pagination control */\n    $.extend($.fn.dataTableExt.oPagination, {\n        \"bootstrap\": {\n            \"fnInit\": function (oSettings, nPaging, fnDraw) {\n                var oLang = oSettings.oLanguage.oPaginate;\n                var fnClickHandler = function (e) {\n                    e.preventDefault();\n                    if (oSettings.oApi._fnPageChange(oSettings, e.data.action)) {\n                        fnDraw(oSettings);\n                    }\n                };\n\n                $(nPaging).append(\n                    '<ul class=\"pagination\">' +\n                    '<li class=\"prev disabled\"><a href=\"#\">&larr; ' + oLang.sPrevious + '</a></li>' +\n                    '<li class=\"next disabled\"><a href=\"#\">' + oLang.sNext + ' &rarr; </a></li>' +\n                    '</ul>'\n                );\n                var els = $('a', nPaging);\n                $(els[0]).bind('click.DT', {\n                    action: \"previous\"\n                }, fnClickHandler);\n                $(els[1]).bind('click.DT', {\n                    action: \"next\"\n                }, fnClickHandler);\n            },\n\n            \"fnUpdate\": function (oSettings, fnDraw) {\n                var iListLength = 5;\n                var oPaging = oSettings.oInstance.fnPagingInfo();\n                var an = oSettings.aanFeatures.p;\n                var i, ien, j, sClass, iStart, iEnd, iHalf = Math.floor(iListLength / 2);\n\n                if (oPaging.iTotalPages < iListLength) {\n                    iStart = 1;\n                    iEnd = oPaging.iTotalPages;\n                } else if (oPaging.iPage <= iHalf) {\n                    iStart = 1;\n                    iEnd = iListLength;\n                } else if (oPaging.iPage >= (oPaging.iTotalPages - iHalf)) {\n                    iStart = oPaging.iTotalPages - iListLength + 1;\n                    iEnd = oPaging.iTotalPages;\n                } else {\n                    iStart = oPaging.iPage - iHalf + 1;\n                    iEnd = iStart + iListLength - 1;\n                }\n\n                for (i = 0, ien = an.length; i < ien; i++) {\n                    // Remove the middle elements\n                    $('li:gt(0)', an[i]).filter(':not(:last)').remove();\n\n                    // Add the new list items and their event handlers\n                    for (j = iStart; j <= iEnd; j++) {\n                        sClass = (j == oPaging.iPage + 1) ? 'class=\"active\"' : '';\n                        $('<li ' + sClass + '><a href=\"#\">' + j + '</a></li>')\n                            .insertBefore($('li:last', an[i])[0])\n                            .bind('click', function (e) {\n                                e.preventDefault();\n                                oSettings._iDisplayStart = (parseInt($('a', this).text(), 10) - 1) * oPaging.iLength;\n                                fnDraw(oSettings);\n                            });\n                    }\n\n                    // Add / remove disabled classes from the static elements\n                    if (oPaging.iPage === 0) {\n                        $('li:first', an[i]).addClass('disabled');\n                    } else {\n                        $('li:first', an[i]).removeClass('disabled');\n                    }\n\n                    if (oPaging.iPage === oPaging.iTotalPages - 1 || oPaging.iTotalPages === 0) {\n                        $('li:last', an[i]).addClass('disabled');\n                    } else {\n                        $('li:last', an[i]).removeClass('disabled');\n                    }\n                }\n            }\n        }\n    });\n}\n\n\n/*\n * TableTools Bootstrap compatibility\n * Required TableTools 2.1+\n */\nif ($.fn.DataTable.TableTools) {\n    // Set the classes that TableTools uses to something suitable for Bootstrap\n    $.extend(true, $.fn.DataTable.TableTools.classes, {\n        \"container\": \"DTTT btn-group\",\n        \"buttons\": {\n            \"normal\": \"btn btn-default\",\n            \"disabled\": \"disabled\"\n        },\n        \"collection\": {\n            \"container\": \"DTTT_dropdown dropdown-menu\",\n            \"buttons\": {\n                \"normal\": \"\",\n                \"disabled\": \"disabled\"\n            }\n        },\n        \"print\": {\n            \"info\": \"DTTT_print_info modal\"\n        },\n        \"select\": {\n            \"row\": \"active\"\n        }\n    });\n\n    // Have the collection use a bootstrap compatible dropdown\n    $.extend(true, $.fn.DataTable.TableTools.DEFAULTS.oTags, {\n        \"collection\": {\n            \"container\": \"ul\",\n            \"button\": \"li\",\n            \"liner\": \"a\"\n        }\n    });\n}\n","/*! Responsive 1.0.2\n * 2014 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     1.0.2\n * @file        dataTables.responsive.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2014 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n(function (window, document, undefined) {\n\n\n    var factory = function ($, DataTable) {\n        \"use strict\";\n\n        /**\n         * Responsive is a plug-in for the DataTables library that makes use of\n         * DataTables' ability to change the visibility of columns, changing the\n         * visibility of columns so the displayed columns fit into the table container.\n         * The end result is that complex tables will be dynamically adjusted to fit\n         * into the viewport, be it on a desktop, tablet or mobile browser.\n         *\n         * Responsive for DataTables has two modes of operation, which can used\n         * individually or combined:\n         *\n         * * Class name based control - columns assigned class names that match the\n         *   breakpoint logic can be shown / hidden as required for each breakpoint.\n         * * Automatic control - columns are automatically hidden when there is no\n         *   room left to display them. Columns removed from the right.\n         *\n         * In additional to column visibility control, Responsive also has built into\n         * options to use DataTables' child row display to show / hide the information\n         * from the table that has been hidden. There are also two modes of operation\n         * for this child row display:\n         *\n         * * Inline - when the control element that the user can use to show / hide\n         *   child rows is displayed inside the first column of the table.\n         * * Column - where a whole column is dedicated to be the show / hide control.\n         *\n         * Initialisation of Responsive is performed by:\n         *\n         * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n         *   Responsive will automatically be initialised with the default configuration\n         *   options when the DataTable is created.\n         * * Using the `responsive` option in the DataTables configuration options. This\n         *   can also be used to specify the configuration options, or simply set to\n         *   `true` to use the defaults.\n         *\n         *  @class\n         *  @param {object} settings DataTables settings object for the host table\n         *  @param {object} [opts] Configuration options\n         *  @requires jQuery 1.7+\n         *  @requires DataTables 1.10.1+\n         *\n         *  @example\n         *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n         *    } );\n         */\n        var Responsive = function (settings, opts) {\n            // Sanity check that we are using DataTables 1.10 or newer\n            if (!DataTable.versionCheck || !DataTable.versionCheck('1.10.1')) {\n                throw 'DataTables Responsive requires DataTables 1.10.1 or newer';\n            }\n\n            this.s = {\n                dt: new DataTable.Api(settings),\n                columns: []\n            };\n\n            // Check if responsive has already been initialised on this table\n            if (this.s.dt.settings()[0].responsive) {\n                return;\n            }\n\n            // details is an object, but for simplicity the user can give it as a string\n            if (opts && typeof opts.details === 'string') {\n                opts.details = {type: opts.details};\n            }\n\n            this.c = $.extend(true, {}, Responsive.defaults, DataTable.defaults.responsive, opts);\n            settings.responsive = this;\n            this._constructor();\n        };\n\n        Responsive.prototype = {\n            /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n             * Constructor\n             */\n\n            /**\n             * Initialise the Responsive instance\n             *\n             * @private\n             */\n            _constructor: function () {\n                var that = this;\n                var dt = this.s.dt;\n\n                dt.settings()[0]._responsive = this;\n\n                // Use DataTables' private throttle function to avoid processor thrashing\n                $(window).on('resize.dtr orientationchange.dtr', dt.settings()[0].oApi._fnThrottle(function () {\n                    that._resize();\n                }));\n\n                // Destroy event handler\n                dt.on('destroy.dtr', function () {\n                    $(window).off('resize.dtr orientationchange.dtr');\n                });\n\n                // Reorder the breakpoints array here in case they have been added out\n                // of order\n                this.c.breakpoints.sort(function (a, b) {\n                    return a.width < b.width ? 1 :\n                        a.width > b.width ? -1 : 0;\n                });\n\n                // Determine which columns are already hidden, and should therefore\n                // remain hidden. TODO - should this be done? See thread 22677\n                //\n                // this.s.alwaysHidden = dt.columns(':hidden').indexes();\n\n                this._classLogic();\n                this._resizeAuto();\n\n                // First pass - draw the table for the current viewport size\n                this._resize();\n\n                // Details handler\n                var details = this.c.details;\n                if (details.type) {\n                    that._detailsInit();\n                    this._detailsVis();\n\n                    dt.on('column-visibility.dtr', function () {\n                        that._detailsVis();\n                    });\n\n                    $(dt.table().node()).addClass('dtr-' + details.type);\n                }\n            },\n\n\n            /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n             * Private methods\n             */\n\n            /**\n             * Calculate the visibility for the columns in a table for a given\n             * breakpoint. The result is pre-determined based on the class logic if\n             * class names are used to control all columns, but the width of the table\n             * is also used if there are columns which are to be automatically shown\n             * and hidden.\n             *\n             * @param  {string} breakpoint Breakpoint name to use for the calculation\n             * @return {array} Array of boolean values initiating the visibility of each\n             *   column.\n             *  @private\n             */\n            _columnsVisiblity: function (breakpoint) {\n                var dt = this.s.dt;\n                var columns = this.s.columns;\n                var i, ien;\n\n                // Class logic - determine which columns are in this breakpoint based\n                // on the classes. If no class control (i.e. `auto`) then `-` is used\n                // to indicate this to the rest of the function\n                var display = $.map(columns, function (col) {\n                    return col.auto && col.minWidth === null ?\n                        false :\n                        col.auto === true ?\n                            '-' :\n                        $.inArray(breakpoint, col.includeIn) !== -1;\n                });\n\n                // Auto column control - first pass: how much width is taken by the\n                // ones that must be included from the non-auto columns\n                var requiredWidth = 0;\n                for (i = 0, ien = display.length; i < ien; i++) {\n                    if (display[i] === true) {\n                        requiredWidth += columns[i].minWidth;\n                    }\n                }\n\n                // Second pass, use up any remaining width for other columns\n                var widthAvailable = dt.table().container().offsetWidth;\n                var usedWidth = widthAvailable - requiredWidth;\n\n                for (i = 0, ien = display.length; i < ien; i++) {\n                    // Control column needs to always be included. This makes it sub-\n                    // optimal in terms of using the available with, but to stop layout\n                    // thrashing or overflow\n                    if (columns[i].control) {\n                        usedWidth -= columns[i].minWidth;\n                    }\n                    else if (display[i] === '-') {\n                        // Otherwise, remove the width\n                        display[i] = usedWidth - columns[i].minWidth < 0 ?\n                            false :\n                            true;\n\n                        // Continue counting down the width, so a smaller column to the\n                        // left won't be shown\n                        usedWidth -= columns[i].minWidth;\n                    }\n                }\n\n                // Determine if the 'control' column should be shown (if there is one).\n                // This is the case when there is a hidden column (that is not the\n                // control column). The two loops look inefficient here, but they are\n                // trivial and will fly through. We need to know the outcome from the\n                // first , before the action in the second can be taken\n                var showControl = false;\n\n                for (i = 0, ien = columns.length; i < ien; i++) {\n                    if (!columns[i].control && !columns[i].never && !display[i]) {\n                        showControl = true;\n                        break;\n                    }\n                }\n\n                for (i = 0, ien = columns.length; i < ien; i++) {\n                    if (columns[i].control) {\n                        display[i] = showControl;\n                    }\n                }\n\n                // Finally we need to make sure that there is at least one column that\n                // is visible\n                if ($.inArray(true, display) === -1) {\n                    display[0] = true;\n                }\n\n                return display;\n            },\n\n\n            /**\n             * Create the internal `columns` array with information about the columns\n             * for the table. This includes determining which breakpoints the column\n             * will appear in, based upon class names in the column, which makes up the\n             * vast majority of this method.\n             *\n             * @private\n             */\n            _classLogic: function () {\n                var that = this;\n                var calc = {};\n                var breakpoints = this.c.breakpoints;\n                var columns = this.s.dt.columns().eq(0).map(function (i) {\n                    var className = this.column(i).header().className;\n\n                    return {\n                        className: className,\n                        includeIn: [],\n                        auto: false,\n                        control: false,\n                        never: className.match(/\\bnever\\b/) ? true : false\n                    };\n                });\n\n                // Simply add a breakpoint to `includeIn` array, ensuring that there are\n                // no duplicates\n                var add = function (colIdx, name) {\n                    var includeIn = columns[colIdx].includeIn;\n\n                    if ($.inArray(name, includeIn) === -1) {\n                        includeIn.push(name);\n                    }\n                };\n\n                var column = function (colIdx, name, operator, matched) {\n                    var size, i, ien;\n\n                    if (!operator) {\n                        columns[colIdx].includeIn.push(name);\n                    }\n                    else if (operator === 'max-') {\n                        // Add this breakpoint and all smaller\n                        size = that._find(name).width;\n\n                        for (i = 0, ien = breakpoints.length; i < ien; i++) {\n                            if (breakpoints[i].width <= size) {\n                                add(colIdx, breakpoints[i].name);\n                            }\n                        }\n                    }\n                    else if (operator === 'min-') {\n                        // Add this breakpoint and all larger\n                        size = that._find(name).width;\n\n                        for (i = 0, ien = breakpoints.length; i < ien; i++) {\n                            if (breakpoints[i].width >= size) {\n                                add(colIdx, breakpoints[i].name);\n                            }\n                        }\n                    }\n                    else if (operator === 'not-') {\n                        // Add all but this breakpoint (xxx need extra information)\n\n                        for (i = 0, ien = breakpoints.length; i < ien; i++) {\n                            if (breakpoints[i].name.indexOf(matched) === -1) {\n                                add(colIdx, breakpoints[i].name);\n                            }\n                        }\n                    }\n                };\n\n                // Loop over each column and determine if it has a responsive control\n                // class\n                columns.each(function (col, i) {\n                    var classNames = col.className.split(' ');\n                    var hasClass = false;\n\n                    // Split the class name up so multiple rules can be applied if needed\n                    for (var k = 0, ken = classNames.length; k < ken; k++) {\n                        var className = $.trim(classNames[k]);\n\n                        if (className === 'all') {\n                            // Include in all\n                            hasClass = true;\n                            col.includeIn = $.map(breakpoints, function (a) {\n                                return a.name;\n                            });\n                            return;\n                        }\n                        else if (className === 'none' || className === 'never') {\n                            // Include in none (default) and no auto\n                            hasClass = true;\n                            return;\n                        }\n                        else if (className === 'control') {\n                            // Special column that is only visible, when one of the other\n                            // columns is hidden. This is used for the details control\n                            hasClass = true;\n                            col.control = true;\n                            return;\n                        }\n\n                        $.each(breakpoints, function (j, breakpoint) {\n                            // Does this column have a class that matches this breakpoint?\n                            var brokenPoint = breakpoint.name.split('-');\n                            var re = new RegExp('(min\\\\-|max\\\\-|not\\\\-)?(' + brokenPoint[0] + ')(\\\\-[_a-zA-Z0-9])?');\n                            var match = className.match(re);\n\n                            if (match) {\n                                hasClass = true;\n\n                                if (match[2] === brokenPoint[0] && match[3] === '-' + brokenPoint[1]) {\n                                    // Class name matches breakpoint name fully\n                                    column(i, breakpoint.name, match[1], match[2] + match[3]);\n                                }\n                                else if (match[2] === brokenPoint[0] && !match[3]) {\n                                    // Class name matched primary breakpoint name with no qualifier\n                                    column(i, breakpoint.name, match[1], match[2]);\n                                }\n                            }\n                        });\n                    }\n\n                    // If there was no control class, then automatic sizing is used\n                    if (!hasClass) {\n                        col.auto = true;\n                    }\n                });\n\n                this.s.columns = columns;\n            },\n\n\n            /**\n             * Initialisation for the details handler\n             *\n             * @private\n             */\n            _detailsInit: function () {\n                var that = this;\n                var dt = this.s.dt;\n                var details = this.c.details;\n\n                // The inline type always uses the first child as the target\n                if (details.type === 'inline') {\n                    details.target = 'td:first-child';\n                }\n\n                // type.target can be a string jQuery selector or a column index\n                var target = details.target;\n                var selector = typeof target === 'string' ? target : 'td';\n\n                // Click handler to show / hide the details rows when they are available\n                $(dt.table().body()).on('click', selector, function (e) {\n                    // If the table is not collapsed (i.e. there is no hidden columns)\n                    // then take no action\n                    if (!$(dt.table().node()).hasClass('collapsed')) {\n                        return;\n                    }\n\n                    // Check that the row is actually a DataTable's controlled node\n                    if (!dt.row($(this).closest('tr')).length) {\n                        return;\n                    }\n\n                    // For column index, we determine if we should act or not in the\n                    // handler - otherwise it is already okay\n                    if (typeof target === 'number') {\n                        var targetIdx = target < 0 ?\n                        dt.columns().eq(0).length + target :\n                            target;\n\n                        if (dt.cell(this).index().column !== targetIdx) {\n                            return;\n                        }\n                    }\n\n                    // $().closest() includes itself in its check\n                    var row = dt.row($(this).closest('tr'));\n\n                    if (row.child.isShown()) {\n                        row.child(false);\n                        $(row.node()).removeClass('parent');\n                    }\n                    else {\n                        var info = that.c.details.renderer(dt, row[0]);\n                        row.child(info, 'child').show();\n                        $(row.node()).addClass('parent');\n                    }\n                });\n            },\n\n\n            /**\n             * Update the child rows in the table whenever the column visibility changes\n             *\n             * @private\n             */\n            _detailsVis: function () {\n                var that = this;\n                var dt = this.s.dt;\n\n                // Find how many columns are hidden\n                var hiddenColumns = dt.columns().indexes().filter(function (idx) {\n                    var col = dt.column(idx);\n\n                    if (col.visible()) {\n                        return null;\n                    }\n\n                    // Only counts as hidden if it doesn't have the `never` class\n                    return $(col.header()).hasClass('never') ? null : idx;\n                });\n                var haveHidden = true;\n\n                if (hiddenColumns.length === 0 || ( hiddenColumns.length === 1 && this.s.columns[hiddenColumns[0]].control )) {\n                    haveHidden = false;\n                }\n\n                if (haveHidden) {\n                    // Got hidden columns\n                    $(dt.table().node()).addClass('collapsed');\n\n                    // Show all existing child rows\n                    dt.rows().eq(0).each(function (idx) {\n                        var row = dt.row(idx);\n\n                        if (row.child()) {\n                            var info = that.c.details.renderer(dt, row[0]);\n\n                            // The renderer can return false to have no child row\n                            if (info === false) {\n                                row.child.hide();\n                            }\n                            else {\n                                row.child(info, 'child').show();\n                            }\n                        }\n                    });\n                }\n                else {\n                    // No hidden columns\n                    $(dt.table().node()).removeClass('collapsed');\n\n                    // Hide all existing child rows\n                    dt.rows().eq(0).each(function (idx) {\n                        dt.row(idx).child.hide();\n                    });\n                }\n            },\n\n\n            /**\n             * Find a breakpoint object from a name\n             * @param  {string} name Breakpoint name to find\n             * @return {object}      Breakpoint description object\n             */\n            _find: function (name) {\n                var breakpoints = this.c.breakpoints;\n\n                for (var i = 0, ien = breakpoints.length; i < ien; i++) {\n                    if (breakpoints[i].name === name) {\n                        return breakpoints[i];\n                    }\n                }\n            },\n\n\n            /**\n             * Alter the table display for a resized viewport. This involves first\n             * determining what breakpoint the window currently is in, getting the\n             * column visibilities to apply and then setting them.\n             *\n             * @private\n             */\n            _resize: function () {\n                var dt = this.s.dt;\n                var width = $(window).width();\n                var breakpoints = this.c.breakpoints;\n                var breakpoint = breakpoints[0].name;\n\n                // Determine what breakpoint we are currently at\n                for (var i = breakpoints.length - 1; i >= 0; i--) {\n                    if (width <= breakpoints[i].width) {\n                        breakpoint = breakpoints[i].name;\n                        break;\n                    }\n                }\n\n                // Show the columns for that break point\n                var columns = this._columnsVisiblity(breakpoint);\n\n                dt.columns().eq(0).each(function (colIdx, i) {\n                    dt.column(colIdx).visible(columns[i]);\n                });\n            },\n\n\n            /**\n             * Determine the width of each column in the table so the auto column hiding\n             * has that information to work with. This method is never going to be 100%\n             * perfect since column widths can change slightly per page, but without\n             * seriously compromising performance this is quite effective.\n             *\n             * @private\n             */\n            _resizeAuto: function () {\n                var dt = this.s.dt;\n                var columns = this.s.columns;\n\n                // Are we allowed to do auto sizing?\n                if (!this.c.auto) {\n                    return;\n                }\n\n                // Are there any columns that actually need auto-sizing, or do they all\n                // have classes defined\n                if ($.inArray(true, $.map(columns, function (c) {\n                        return c.auto;\n                    })) === -1) {\n                    return;\n                }\n\n                // Clone the table with the current data in it\n                var tableWidth = dt.table().node().offsetWidth;\n                var columnWidths = dt.columns;\n                var clonedTable = dt.table().node().cloneNode(false);\n                var clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(clonedTable);\n                var clonedBody = $(dt.table().body().cloneNode(false)).appendTo(clonedTable);\n\n                // This is a bit slow, but we need to get a clone of each row that\n                // includes all columns. As such, try to do this as little as possible.\n                dt.rows({page: 'current'}).indexes().flatten().each(function (idx) {\n                    var clone = dt.row(idx).node().cloneNode(true);\n\n                    if (dt.columns(':hidden').flatten().length) {\n                        $(clone).append(dt.cells(idx, ':hidden').nodes().to$().clone());\n                    }\n\n                    $(clone).appendTo(clonedBody);\n                });\n\n                var cells = dt.columns().header().to$().clone(false).wrapAll('tr').appendTo(clonedHeader);\n                var inserted = $('<div/>')\n                    .css({\n                        width: 1,\n                        height: 1,\n                        overflow: 'hidden'\n                    })\n                    .append(clonedTable)\n                    .insertBefore(dt.table().node());\n\n                // The cloned header now contains the smallest that each column can be\n                dt.columns().eq(0).each(function (idx) {\n                    columns[idx].minWidth = cells[idx].offsetWidth || 0;\n                });\n\n                inserted.remove();\n            }\n        };\n\n\n        /**\n         * List of default breakpoints. Each item in the array is an object with two\n         * properties:\n         *\n         * * `name` - the breakpoint name.\n         * * `width` - the breakpoint width\n         *\n         * @name Responsive.breakpoints\n         * @static\n         */\n        Responsive.breakpoints = [\n            {name: 'desktop', width: Infinity},\n            {name: 'tablet-l', width: 1024},\n            {name: 'tablet-p', width: 768},\n            {name: 'mobile-l', width: 480},\n            {name: 'mobile-p', width: 320}\n        ];\n\n\n        /**\n         * Responsive default settings for initialisation\n         *\n         * @namespace\n         * @name Responsive.defaults\n         * @static\n         */\n        Responsive.defaults = {\n            /**\n             * List of breakpoints for the instance. Note that this means that each\n             * instance can have its own breakpoints. Additionally, the breakpoints\n             * cannot be changed once an instance has been creased.\n             *\n             * @type {Array}\n             * @default Takes the value of `Responsive.breakpoints`\n             */\n            breakpoints: Responsive.breakpoints,\n\n            /**\n             * Enable / disable auto hiding calculations. It can help to increase\n             * performance slightly if you disable this option, but all columns would\n             * need to have breakpoint classes assigned to them\n             *\n             * @type {Boolean}\n             * @default  `true`\n             */\n            auto: true,\n\n            /**\n             * Details control. If given as a string value, the `type` property of the\n             * default object is set to that value, and the defaults used for the rest\n             * of the object - this is for ease of implementation.\n             *\n             * The object consists of the following properties:\n             *\n             * * `renderer` - function that is called for display of the child row data.\n             *   The default function will show the data from the hidden columns\n             * * `target` - Used as the selector for what objects to attach the child\n             *   open / close to\n             * * `type` - `false` to disable the details display, `inline` or `column`\n             *   for the two control types\n             *\n             * @type {Object|string}\n             */\n            details: {\n                renderer: function (api, rowIdx) {\n                    var data = api.cells(rowIdx, ':hidden').eq(0).map(function (cell) {\n                        var header = $(api.column(cell.column).header());\n                        var idx = api.cell(cell).index();\n\n                        if (header.hasClass('control') || header.hasClass('never')) {\n                            return '';\n                        }\n\n                        // Use a non-public DT API method to render the data for display\n                        // This needs to be updated when DT adds a suitable method for\n                        // this type of data retrieval\n                        var dtPrivate = api.settings()[0];\n                        var cellData = dtPrivate.oApi._fnGetCellData(\n                            dtPrivate, idx.row, idx.column, 'display'\n                        );\n\n                        return '<li data-dtr-index=\"' + idx.column + '\">' +\n                            '<span class=\"dtr-title\">' +\n                            header.text() + ':' +\n                            '</span> ' +\n                            '<span class=\"dtr-data\">' +\n                            cellData +\n                            '</span>' +\n                            '</li>';\n                    }).toArray().join('');\n\n                    return data ?\n                        $('<ul data-dtr-index=\"' + rowIdx + '\"/>').append(data) :\n                        false;\n                },\n\n                target: 0,\n\n                type: 'inline'\n            }\n        };\n\n\n        /*\n         * API\n         */\n        var Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\n        Api.register('responsive()', function () {\n            return this;\n        });\n\n        Api.register('responsive.recalc()', function () {\n            this.iterator('table', function (ctx) {\n                if (ctx._responsive) {\n                    ctx._responsive._resizeAuto();\n                    ctx._responsive._resize();\n                }\n            });\n        });\n\n        Api.register('responsive.index()', function (li) {\n            li = $(li);\n\n            return {\n                column: li.data('dtr-index'),\n                row: li.parent().data('dtr-index')\n            };\n        });\n\n\n        /**\n         * Version information\n         *\n         * @name Responsive.version\n         * @static\n         */\n        Responsive.version = '1.0.2';\n\n\n        $.fn.dataTable.Responsive = Responsive;\n        $.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n        $(document).on('init.dt.dtr', function (e, settings, json) {\n            if ($(settings.nTable).hasClass('responsive') ||\n                $(settings.nTable).hasClass('dt-responsive') ||\n                settings.oInit.responsive ||\n                DataTable.defaults.responsive\n            ) {\n                var init = settings.oInit.responsive;\n\n                if (init !== false) {\n                    new Responsive(settings, $.isPlainObject(init) ? init : {});\n                }\n            }\n        });\n\n        return Responsive;\n    }; // /factory\n\n\n// Define as an AMD module if possible\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery.dataTables', 'datatables'], factory);\n    }\n    else if (typeof exports === 'object') {\n        // Node/CommonJS\n        factory(require('jquery'), require('datatables'));\n    }\n    else if (jQuery && !jQuery.fn.dataTable.Responsive) {\n        // Otherwise simply initialise as normal, stopping multiple evaluation\n        factory(jQuery, jQuery.fn.dataTable);\n    }\n\n\n})(window, document);\n\n","/*!\n TableTools 2.2.3\n 2009-2014 SpryMedia Ltd - datatables.net/license\n\n ZeroClipboard 1.0.4\n Author: Joseph Huckaby - MIT licensed\n */\nvar TableTools;\n(function (n, k, q) {\n    var p = function (m, p) {\n        var g = {\n            version: \"1.0.4-TableTools2\", clients: {}, moviePath: \"\", nextId: 1, $: function (a) {\n                \"string\" == typeof a && (a = k.getElementById(a));\n                a.addClass || (a.hide = function () {\n                    this.style.display = \"none\"\n                }, a.show = function () {\n                    this.style.display = \"\"\n                }, a.addClass = function (a) {\n                    this.removeClass(a);\n                    this.className += \" \" + a\n                }, a.removeClass = function (a) {\n                    this.className = this.className.replace(RegExp(\"\\\\s*\" + a + \"\\\\s*\"), \" \").replace(/^\\s+/, \"\").replace(/\\s+$/, \"\")\n                }, a.hasClass = function (a) {\n                    return !!this.className.match(RegExp(\"\\\\s*\" + a +\n                        \"\\\\s*\"))\n                });\n                return a\n            }, setMoviePath: function (a) {\n                this.moviePath = a\n            }, dispatch: function (a, b, c) {\n                (a = this.clients[a]) && a.receiveEvent(b, c)\n            }, register: function (a, b) {\n                this.clients[a] = b\n            }, getDOMObjectPosition: function (a) {\n                var b = {\n                    left: 0,\n                    top: 0,\n                    width: a.width ? a.width : a.offsetWidth,\n                    height: a.height ? a.height : a.offsetHeight\n                };\n                \"\" !== a.style.width && (b.width = a.style.width.replace(\"px\", \"\"));\n                \"\" !== a.style.height && (b.height = a.style.height.replace(\"px\", \"\"));\n                for (; a;)b.left += a.offsetLeft, b.top += a.offsetTop, a = a.offsetParent;\n                return b\n            },\n            Client: function (a) {\n                this.handlers = {};\n                this.id = g.nextId++;\n                this.movieId = \"ZeroClipboard_TableToolsMovie_\" + this.id;\n                g.register(this.id, this);\n                a && this.glue(a)\n            }\n        };\n        g.Client.prototype = {\n            id: 0,\n            ready: !1,\n            movie: null,\n            clipText: \"\",\n            fileName: \"\",\n            action: \"copy\",\n            handCursorEnabled: !0,\n            cssEffects: !0,\n            handlers: null,\n            sized: !1,\n            glue: function (a, b) {\n                this.domElement = g.$(a);\n                var c = 99;\n                this.domElement.style.zIndex && (c = parseInt(this.domElement.style.zIndex, 10) + 1);\n                var d = g.getDOMObjectPosition(this.domElement);\n                this.div = k.createElement(\"div\");\n                var f =\n                    this.div.style;\n                f.position = \"absolute\";\n                f.left = \"0px\";\n                f.top = \"0px\";\n                f.width = d.width + \"px\";\n                f.height = d.height + \"px\";\n                f.zIndex = c;\n                \"undefined\" != typeof b && \"\" !== b && (this.div.title = b);\n                0 !== d.width && 0 !== d.height && (this.sized = !0);\n                this.domElement && (this.domElement.appendChild(this.div), this.div.innerHTML = this.getHTML(d.width, d.height).replace(/&/g, \"&amp;\"))\n            },\n            positionElement: function () {\n                var a = g.getDOMObjectPosition(this.domElement), b = this.div.style;\n                b.position = \"absolute\";\n                b.width = a.width + \"px\";\n                b.height = a.height + \"px\";\n                0 !== a.width &&\n                0 !== a.height && (this.sized = !0, b = this.div.childNodes[0], b.width = a.width, b.height = a.height)\n            },\n            getHTML: function (a, b) {\n                var c = \"\", d = \"id=\" + this.id + \"&width=\" + a + \"&height=\" + b;\n                if (navigator.userAgent.match(/MSIE/))var f = location.href.match(/^https/i) ? \"https://\" : \"http://\", c = c + ('<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"' + f + 'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,0,0\" width=\"' + a + '\" height=\"' + b + '\" id=\"' + this.movieId + '\" align=\"middle\"><param name=\"allowScriptAccess\" value=\"always\" /><param name=\"allowFullScreen\" value=\"false\" /><param name=\"movie\" value=\"' +\n                    g.moviePath + '\" /><param name=\"loop\" value=\"false\" /><param name=\"menu\" value=\"false\" /><param name=\"quality\" value=\"best\" /><param name=\"bgcolor\" value=\"#ffffff\" /><param name=\"flashvars\" value=\"' + d + '\"/><param name=\"wmode\" value=\"transparent\"/></object>'); else c += '<embed id=\"' + this.movieId + '\" src=\"' + g.moviePath + '\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" width=\"' + a + '\" height=\"' + b + '\" name=\"' + this.movieId + '\" align=\"middle\" allowScriptAccess=\"always\" allowFullScreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"' +\n                    d + '\" wmode=\"transparent\" />';\n                return c\n            },\n            hide: function () {\n                this.div && (this.div.style.left = \"-2000px\")\n            },\n            show: function () {\n                this.reposition()\n            },\n            destroy: function () {\n                if (this.domElement && this.div) {\n                    this.hide();\n                    this.div.innerHTML = \"\";\n                    var a = k.getElementsByTagName(\"body\")[0];\n                    try {\n                        a.removeChild(this.div)\n                    } catch (b) {\n                    }\n                    this.div = this.domElement = null\n                }\n            },\n            reposition: function (a) {\n                a && ((this.domElement = g.$(a)) || this.hide());\n                if (this.domElement && this.div) {\n                    var a = g.getDOMObjectPosition(this.domElement), b = this.div.style;\n                    b.left = \"\" + a.left +\n                        \"px\";\n                    b.top = \"\" + a.top + \"px\"\n                }\n            },\n            clearText: function () {\n                this.clipText = \"\";\n                this.ready && this.movie.clearText()\n            },\n            appendText: function (a) {\n                this.clipText += a;\n                this.ready && this.movie.appendText(a)\n            },\n            setText: function (a) {\n                this.clipText = a;\n                this.ready && this.movie.setText(a)\n            },\n            setCharSet: function (a) {\n                this.charSet = a;\n                this.ready && this.movie.setCharSet(a)\n            },\n            setBomInc: function (a) {\n                this.incBom = a;\n                this.ready && this.movie.setBomInc(a)\n            },\n            setFileName: function (a) {\n                this.fileName = a;\n                this.ready && this.movie.setFileName(a)\n            },\n            setAction: function (a) {\n                this.action =\n                    a;\n                this.ready && this.movie.setAction(a)\n            },\n            addEventListener: function (a, b) {\n                a = a.toString().toLowerCase().replace(/^on/, \"\");\n                this.handlers[a] || (this.handlers[a] = []);\n                this.handlers[a].push(b)\n            },\n            setHandCursor: function (a) {\n                this.handCursorEnabled = a;\n                this.ready && this.movie.setHandCursor(a)\n            },\n            setCSSEffects: function (a) {\n                this.cssEffects = !!a\n            },\n            receiveEvent: function (a, b) {\n                var c, a = a.toString().toLowerCase().replace(/^on/, \"\");\n                switch (a) {\n                    case \"load\":\n                        this.movie = k.getElementById(this.movieId);\n                        if (!this.movie) {\n                            c = this;\n                            setTimeout(function () {\n                                c.receiveEvent(\"load\",\n                                    null)\n                            }, 1);\n                            return\n                        }\n                        if (!this.ready && navigator.userAgent.match(/Firefox/) && navigator.userAgent.match(/Windows/)) {\n                            c = this;\n                            setTimeout(function () {\n                                c.receiveEvent(\"load\", null)\n                            }, 100);\n                            this.ready = !0;\n                            return\n                        }\n                        this.ready = !0;\n                        this.movie.clearText();\n                        this.movie.appendText(this.clipText);\n                        this.movie.setFileName(this.fileName);\n                        this.movie.setAction(this.action);\n                        this.movie.setCharSet(this.charSet);\n                        this.movie.setBomInc(this.incBom);\n                        this.movie.setHandCursor(this.handCursorEnabled);\n                        break;\n                    case \"mouseover\":\n                        this.domElement && this.cssEffects &&\n                        this.recoverActive && this.domElement.addClass(\"active\");\n                        break;\n                    case \"mouseout\":\n                        this.domElement && this.cssEffects && (this.recoverActive = !1, this.domElement.hasClass(\"active\") && (this.domElement.removeClass(\"active\"), this.recoverActive = !0));\n                        break;\n                    case \"mousedown\":\n                        this.domElement && this.cssEffects && this.domElement.addClass(\"active\");\n                        break;\n                    case \"mouseup\":\n                        this.domElement && this.cssEffects && (this.domElement.removeClass(\"active\"), this.recoverActive = !1)\n                }\n                if (this.handlers[a])for (var d = 0, f = this.handlers[a].length; d <\n                f; d++) {\n                    var e = this.handlers[a][d];\n                    if (\"function\" == typeof e)e(this, b); else if (\"object\" == typeof e && 2 == e.length)e[0][e[1]](this, b); else if (\"string\" == typeof e)n[e](this, b)\n                }\n            }\n        };\n        n.ZeroClipboard_TableTools = g;\n        var e = jQuery;\n        TableTools = function (a, b) {\n            !this instanceof TableTools && alert(\"Warning: TableTools must be initialised with the keyword 'new'\");\n            this.s = {\n                that: this,\n                dt: e.fn.dataTable.Api ? (new e.fn.dataTable.Api(a)).settings()[0] : a.fnSettings(),\n                print: {\n                    saveStart: -1, saveLength: -1, saveScroll: -1, funcEnd: function () {\n                    }\n                },\n                buttonCounter: 0,\n                select: {\n                    type: \"\",\n                    selected: [],\n                    preRowSelect: null,\n                    postSelected: null,\n                    postDeselected: null,\n                    all: !1,\n                    selectedClass: \"\"\n                },\n                custom: {},\n                swfPath: \"\",\n                buttonSet: [],\n                master: !1,\n                tags: {}\n            };\n            this.dom = {\n                container: null,\n                table: null,\n                print: {hidden: [], message: null},\n                collection: {collection: null, background: null}\n            };\n            this.classes = e.extend(!0, {}, TableTools.classes);\n            this.s.dt.bJUI && e.extend(!0, this.classes, TableTools.classes_themeroller);\n            this.fnSettings = function () {\n                return this.s\n            };\n            \"undefined\" == typeof b && (b = {});\n            TableTools._aInstances.push(this);\n            this._fnConstruct(b);\n            return this\n        };\n        TableTools.prototype = {\n            fnGetSelected: function (a) {\n                var b = [], c = this.s.dt.aoData, d = this.s.dt.aiDisplay, f;\n                if (a) {\n                    a = 0;\n                    for (f = d.length; a < f; a++)c[d[a]]._DTTT_selected && b.push(c[d[a]].nTr)\n                } else {\n                    a = 0;\n                    for (f = c.length; a < f; a++)c[a]._DTTT_selected && b.push(c[a].nTr)\n                }\n                return b\n            }, fnGetSelectedData: function () {\n                var a = [], b = this.s.dt.aoData, c, d;\n                c = 0;\n                for (d = b.length; c < d; c++)b[c]._DTTT_selected && a.push(this.s.dt.oInstance.fnGetData(c));\n                return a\n            }, fnGetSelectedIndexes: function (a) {\n                var b = [], c = this.s.dt.aoData,\n                    d = this.s.dt.aiDisplay, f;\n                if (a) {\n                    a = 0;\n                    for (f = d.length; a < f; a++)c[d[a]]._DTTT_selected && b.push(d[a])\n                } else {\n                    a = 0;\n                    for (f = c.length; a < f; a++)c[a]._DTTT_selected && b.push(a)\n                }\n                return b\n            }, fnIsSelected: function (a) {\n                a = this.s.dt.oInstance.fnGetPosition(a);\n                return !0 === this.s.dt.aoData[a]._DTTT_selected ? !0 : !1\n            }, fnSelectAll: function (a) {\n                this._fnRowSelect(a ? this.s.dt.aiDisplay : this.s.dt.aoData)\n            }, fnSelectNone: function (a) {\n                this._fnRowDeselect(this.fnGetSelectedIndexes(a))\n            }, fnSelect: function (a) {\n                \"single\" == this.s.select.type && this.fnSelectNone();\n                this._fnRowSelect(a)\n            }, fnDeselect: function (a) {\n                this._fnRowDeselect(a)\n            }, fnGetTitle: function (a) {\n                var b = \"\";\n                \"undefined\" != typeof a.sTitle && \"\" !== a.sTitle ? b = a.sTitle : (a = k.getElementsByTagName(\"title\"), 0 < a.length && (b = a[0].innerHTML));\n                return 4 > \"¡\".toString().length ? b.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\") : b.replace(/[^a-zA-Z0-9_\\.,\\-_ !\\(\\)]/g, \"\")\n            }, fnCalcColRatios: function (a) {\n                var b = this.s.dt.aoColumns, a = this._fnColumnTargets(a.mColumns), c = [], d = 0, f = 0, e, i;\n                e = 0;\n                for (i = a.length; e < i; e++)a[e] && (d = b[e].nTh.offsetWidth,\n                    f += d, c.push(d));\n                e = 0;\n                for (i = c.length; e < i; e++)c[e] /= f;\n                return c.join(\"\\t\")\n            }, fnGetTableData: function (a) {\n                if (this.s.dt)return this._fnGetDataTablesData(a)\n            }, fnSetText: function (a, b) {\n                this._fnFlashSetText(a, b)\n            }, fnResizeButtons: function () {\n                for (var a in g.clients)if (a) {\n                    var b = g.clients[a];\n                    \"undefined\" != typeof b.domElement && b.domElement.parentNode && b.positionElement()\n                }\n            }, fnResizeRequired: function () {\n                for (var a in g.clients)if (a) {\n                    var b = g.clients[a];\n                    if (\"undefined\" != typeof b.domElement && b.domElement.parentNode == this.dom.container &&\n                        !1 === b.sized)return !0\n                }\n                return !1\n            }, fnPrint: function (a, b) {\n                b === q && (b = {});\n                a === q || a ? this._fnPrintStart(b) : this._fnPrintEnd()\n            }, fnInfo: function (a, b) {\n                var c = e(\"<div/>\").addClass(this.classes.print.info).html(a).appendTo(\"body\");\n                setTimeout(function () {\n                    c.fadeOut(\"normal\", function () {\n                        c.remove()\n                    })\n                }, b)\n            }, fnContainer: function () {\n                return this.dom.container\n            }, _fnConstruct: function (a) {\n                var b = this;\n                this._fnCustomiseSettings(a);\n                this.dom.container = k.createElement(this.s.tags.container);\n                this.dom.container.className = this.classes.container;\n                \"none\" != this.s.select.type && this._fnRowSelectConfig();\n                this._fnButtonDefinations(this.s.buttonSet, this.dom.container);\n                this.s.dt.aoDestroyCallback.push({\n                    sName: \"TableTools\", fn: function () {\n                        e(b.s.dt.nTBody).off(\"click.DTTT_Select\", \"tr\");\n                        e(b.dom.container).empty();\n                        var a = e.inArray(b, TableTools._aInstances);\n                        -1 !== a && TableTools._aInstances.splice(a, 1)\n                    }\n                })\n            }, _fnCustomiseSettings: function (a) {\n                \"undefined\" == typeof this.s.dt._TableToolsInit && (this.s.master = !0, this.s.dt._TableToolsInit = !0);\n                this.dom.table = this.s.dt.nTable;\n                this.s.custom = e.extend({}, TableTools.DEFAULTS, a);\n                this.s.swfPath = this.s.custom.sSwfPath;\n                \"undefined\" != typeof g && (g.moviePath = this.s.swfPath);\n                this.s.select.type = this.s.custom.sRowSelect;\n                this.s.select.preRowSelect = this.s.custom.fnPreRowSelect;\n                this.s.select.postSelected = this.s.custom.fnRowSelected;\n                this.s.select.postDeselected = this.s.custom.fnRowDeselected;\n                this.s.custom.sSelectedClass && (this.classes.select.row = this.s.custom.sSelectedClass);\n                this.s.tags = this.s.custom.oTags;\n                this.s.buttonSet = this.s.custom.aButtons\n            },\n            _fnButtonDefinations: function (a, b) {\n                for (var c, d = 0, f = a.length; d < f; d++) {\n                    if (\"string\" == typeof a[d]) {\n                        if (\"undefined\" == typeof TableTools.BUTTONS[a[d]]) {\n                            alert(\"TableTools: Warning - unknown button type: \" + a[d]);\n                            continue\n                        }\n                        c = e.extend({}, TableTools.BUTTONS[a[d]], !0)\n                    } else {\n                        if (\"undefined\" == typeof TableTools.BUTTONS[a[d].sExtends]) {\n                            alert(\"TableTools: Warning - unknown button type: \" + a[d].sExtends);\n                            continue\n                        }\n                        c = e.extend({}, TableTools.BUTTONS[a[d].sExtends], !0);\n                        c = e.extend(c, a[d], !0)\n                    }\n                    (c = this._fnCreateButton(c, e(b).hasClass(this.classes.collection.container))) &&\n                    b.appendChild(c)\n                }\n            }, _fnCreateButton: function (a, b) {\n                var c = this._fnButtonBase(a, b);\n                if (a.sAction.match(/flash/)) {\n                    if (!this._fnHasFlash())return !1;\n                    this._fnFlashConfig(c, a)\n                } else\"text\" == a.sAction ? this._fnTextConfig(c, a) : \"div\" == a.sAction ? this._fnTextConfig(c, a) : \"collection\" == a.sAction && (this._fnTextConfig(c, a), this._fnCollectionConfig(c, a));\n                if (-1 !== this.s.dt.iTabIndex)e(c).attr(\"tabindex\", this.s.dt.iTabIndex).attr(\"aria-controls\", this.s.dt.sTableId).on(\"keyup.DTTT\", function (a) {\n                    13 === a.keyCode && (a.stopPropagation(),\n                        e(this).trigger(\"click\"))\n                }).on(\"mousedown.DTTT\", function (b) {\n                    a.sAction.match(/flash/) || b.preventDefault()\n                });\n                return c\n            }, _fnButtonBase: function (a, b) {\n                var c, d, f;\n                b ? (c = a.sTag && \"default\" !== a.sTag ? a.sTag : this.s.tags.collection.button, d = a.sLinerTag && \"default\" !== a.sLinerTag ? a.sLiner : this.s.tags.collection.liner, f = this.classes.collection.buttons.normal) : (c = a.sTag && \"default\" !== a.sTag ? a.sTag : this.s.tags.button, d = a.sLinerTag && \"default\" !== a.sLinerTag ? a.sLiner : this.s.tags.liner, f = this.classes.buttons.normal);\n                c = k.createElement(c);\n                d = k.createElement(d);\n                var e = this._fnGetMasterSettings();\n                c.className = f + \" \" + a.sButtonClass;\n                c.setAttribute(\"id\", \"ToolTables_\" + this.s.dt.sInstance + \"_\" + e.buttonCounter);\n                c.appendChild(d);\n                d.innerHTML = a.sButtonText;\n                e.buttonCounter++;\n                return c\n            }, _fnGetMasterSettings: function () {\n                if (this.s.master)return this.s;\n                for (var a = TableTools._aInstances, b = 0, c = a.length; b < c; b++)if (this.dom.table == a[b].s.dt.nTable)return a[b].s\n            }, _fnCollectionConfig: function (a, b) {\n                var c = k.createElement(this.s.tags.collection.container);\n                c.style.display =\n                    \"none\";\n                c.className = this.classes.collection.container;\n                b._collection = c;\n                k.body.appendChild(c);\n                this._fnButtonDefinations(b.aButtons, c)\n            }, _fnCollectionShow: function (a, b) {\n                var c = this, d = e(a).offset(), f = b._collection, j = d.left, d = d.top + e(a).outerHeight(), i = e(n).height(), h = e(k).height(), o = e(n).width(), g = e(k).width();\n                f.style.position = \"absolute\";\n                f.style.left = j + \"px\";\n                f.style.top = d + \"px\";\n                f.style.display = \"block\";\n                e(f).css(\"opacity\", 0);\n                var l = k.createElement(\"div\");\n                l.style.position = \"absolute\";\n                l.style.left = \"0px\";\n                l.style.top =\n                    \"0px\";\n                l.style.height = (i > h ? i : h) + \"px\";\n                l.style.width = (o > g ? o : g) + \"px\";\n                l.className = this.classes.collection.background;\n                e(l).css(\"opacity\", 0);\n                k.body.appendChild(l);\n                k.body.appendChild(f);\n                i = e(f).outerWidth();\n                o = e(f).outerHeight();\n                j + i > g && (f.style.left = g - i + \"px\");\n                d + o > h && (f.style.top = d - o - e(a).outerHeight() + \"px\");\n                this.dom.collection.collection = f;\n                this.dom.collection.background = l;\n                setTimeout(function () {\n                    e(f).animate({opacity: 1}, 500);\n                    e(l).animate({opacity: 0.25}, 500)\n                }, 10);\n                this.fnResizeButtons();\n                e(l).click(function () {\n                    c._fnCollectionHide.call(c,\n                        null, null)\n                })\n            }, _fnCollectionHide: function (a, b) {\n                !(null !== b && \"collection\" == b.sExtends) && null !== this.dom.collection.collection && (e(this.dom.collection.collection).animate({opacity: 0}, 500, function () {\n                    this.style.display = \"none\"\n                }), e(this.dom.collection.background).animate({opacity: 0}, 500, function () {\n                    this.parentNode.removeChild(this)\n                }), this.dom.collection.collection = null, this.dom.collection.background = null)\n            }, _fnRowSelectConfig: function () {\n                if (this.s.master) {\n                    var a = this, b = this.s.dt;\n                    e(b.nTable).addClass(this.classes.select.table);\n                    \"os\" === this.s.select.type && (e(b.nTBody).on(\"mousedown.DTTT_Select\", \"tr\", function (a) {\n                        if (a.shiftKey)e(b.nTBody).css(\"-moz-user-select\", \"none\").one(\"selectstart.DTTT_Select\", \"tr\", function () {\n                            return !1\n                        })\n                    }), e(b.nTBody).on(\"mouseup.DTTT_Select\", \"tr\", function () {\n                        e(b.nTBody).css(\"-moz-user-select\", \"\")\n                    }));\n                    e(b.nTBody).on(\"click.DTTT_Select\", this.s.custom.sRowSelector, function (c) {\n                        var d = this.nodeName.toLowerCase() === \"tr\" ? this : e(this).parents(\"tr\")[0], f = a.s.select, j = a.s.dt.oInstance.fnGetPosition(d);\n                        if (d.parentNode ==\n                            b.nTBody && b.oInstance.fnGetData(d) !== null) {\n                            if (f.type == \"os\")if (c.ctrlKey || c.metaKey)a.fnIsSelected(d) ? a._fnRowDeselect(d, c) : a._fnRowSelect(d, c); else if (c.shiftKey) {\n                                var i = a.s.dt.aiDisplay.slice(), h = e.inArray(f.lastRow, i), o = e.inArray(j, i);\n                                if (a.fnGetSelected().length === 0 || h === -1)i.splice(e.inArray(j, i) + 1, i.length); else {\n                                    if (h > o)var g = o, o = h, h = g;\n                                    i.splice(o + 1, i.length);\n                                    i.splice(0, h)\n                                }\n                                if (a.fnIsSelected(d)) {\n                                    i.splice(e.inArray(j, i), 1);\n                                    a._fnRowDeselect(i, c)\n                                } else a._fnRowSelect(i, c)\n                            } else if (a.fnIsSelected(d) && a.fnGetSelected().length ===\n                                1)a._fnRowDeselect(d, c); else {\n                                a.fnSelectNone();\n                                a._fnRowSelect(d, c)\n                            } else if (a.fnIsSelected(d))a._fnRowDeselect(d, c); else if (f.type == \"single\") {\n                                a.fnSelectNone();\n                                a._fnRowSelect(d, c)\n                            } else f.type == \"multi\" && a._fnRowSelect(d, c);\n                            f.lastRow = j\n                        }\n                    });\n                    b.oApi._fnCallbackReg(b, \"aoRowCreatedCallback\", function (c, d, f) {\n                        b.aoData[f]._DTTT_selected && e(c).addClass(a.classes.select.row)\n                    }, \"TableTools-SelectAll\")\n                }\n            }, _fnRowSelect: function (a, b) {\n                var c = this._fnSelectData(a), d = [], f, j;\n                f = 0;\n                for (j = c.length; f < j; f++)c[f].nTr && d.push(c[f].nTr);\n                if (null === this.s.select.preRowSelect || this.s.select.preRowSelect.call(this, b, d, !0)) {\n                    f = 0;\n                    for (j = c.length; f < j; f++)c[f]._DTTT_selected = !0, c[f].nTr && e(c[f].nTr).addClass(this.classes.select.row);\n                    null !== this.s.select.postSelected && this.s.select.postSelected.call(this, d);\n                    TableTools._fnEventDispatch(this, \"select\", d, !0)\n                }\n            }, _fnRowDeselect: function (a, b) {\n                var c = this._fnSelectData(a), d = [], f, j;\n                f = 0;\n                for (j = c.length; f < j; f++)c[f].nTr && d.push(c[f].nTr);\n                if (null === this.s.select.preRowSelect || this.s.select.preRowSelect.call(this,\n                        b, d, !1)) {\n                    f = 0;\n                    for (j = c.length; f < j; f++)c[f]._DTTT_selected = !1, c[f].nTr && e(c[f].nTr).removeClass(this.classes.select.row);\n                    null !== this.s.select.postDeselected && this.s.select.postDeselected.call(this, d);\n                    TableTools._fnEventDispatch(this, \"select\", d, !1)\n                }\n            }, _fnSelectData: function (a) {\n                var b = [], c, d, f;\n                if (a.nodeName)c = this.s.dt.oInstance.fnGetPosition(a), b.push(this.s.dt.aoData[c]); else if (\"undefined\" !== typeof a.length) {\n                    d = 0;\n                    for (f = a.length; d < f; d++)a[d].nodeName ? (c = this.s.dt.oInstance.fnGetPosition(a[d]), b.push(this.s.dt.aoData[c])) :\n                        \"number\" === typeof a[d] ? b.push(this.s.dt.aoData[a[d]]) : b.push(a[d])\n                } else b.push(a);\n                return b\n            }, _fnTextConfig: function (a, b) {\n                var c = this;\n                null !== b.fnInit && b.fnInit.call(this, a, b);\n                \"\" !== b.sToolTip && (a.title = b.sToolTip);\n                e(a).hover(function () {\n                    b.fnMouseover !== null && b.fnMouseover.call(this, a, b, null)\n                }, function () {\n                    b.fnMouseout !== null && b.fnMouseout.call(this, a, b, null)\n                });\n                null !== b.fnSelect && TableTools._fnEventListen(this, \"select\", function (d) {\n                    b.fnSelect.call(c, a, b, d)\n                });\n                e(a).click(function (d) {\n                    b.fnClick !== null && b.fnClick.call(c,\n                        a, b, null, d);\n                    b.fnComplete !== null && b.fnComplete.call(c, a, b, null, null);\n                    c._fnCollectionHide(a, b)\n                })\n            }, _fnHasFlash: function () {\n                try {\n                    if (new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\"))return !0\n                } catch (a) {\n                    if (navigator.mimeTypes && navigator.mimeTypes[\"application/x-shockwave-flash\"] !== q && navigator.mimeTypes[\"application/x-shockwave-flash\"].enabledPlugin)return !0\n                }\n                return !1\n            }, _fnFlashConfig: function (a, b) {\n                var c = this, d = new g.Client;\n                null !== b.fnInit && b.fnInit.call(this, a, b);\n                d.setHandCursor(!0);\n                \"flash_save\" == b.sAction ?\n                    (d.setAction(\"save\"), d.setCharSet(\"utf16le\" == b.sCharSet ? \"UTF16LE\" : \"UTF8\"), d.setBomInc(b.bBomInc), d.setFileName(b.sFileName.replace(\"*\", this.fnGetTitle(b)))) : \"flash_pdf\" == b.sAction ? (d.setAction(\"pdf\"), d.setFileName(b.sFileName.replace(\"*\", this.fnGetTitle(b)))) : d.setAction(\"copy\");\n                d.addEventListener(\"mouseOver\", function () {\n                    b.fnMouseover !== null && b.fnMouseover.call(c, a, b, d)\n                });\n                d.addEventListener(\"mouseOut\", function () {\n                    b.fnMouseout !== null && b.fnMouseout.call(c, a, b, d)\n                });\n                d.addEventListener(\"mouseDown\", function () {\n                    b.fnClick !==\n                    null && b.fnClick.call(c, a, b, d)\n                });\n                d.addEventListener(\"complete\", function (f, e) {\n                    b.fnComplete !== null && b.fnComplete.call(c, a, b, d, e);\n                    c._fnCollectionHide(a, b)\n                });\n                this._fnFlashGlue(d, a, b.sToolTip)\n            }, _fnFlashGlue: function (a, b, c) {\n                var d = this, f = b.getAttribute(\"id\");\n                k.getElementById(f) ? a.glue(b, c) : setTimeout(function () {\n                    d._fnFlashGlue(a, b, c)\n                }, 100)\n            }, _fnFlashSetText: function (a, b) {\n                var c = this._fnChunkData(b, 8192);\n                a.clearText();\n                for (var d = 0, f = c.length; d < f; d++)a.appendText(c[d])\n            }, _fnColumnTargets: function (a) {\n                var b = [], c =\n                    this.s.dt, d, f = c.aoColumns;\n                d = f.length;\n                if (\"function\" == typeof a) {\n                    a = a.call(this, c);\n                    for (c = 0; c < d; c++)b.push(-1 !== e.inArray(c, a) ? !0 : !1)\n                } else if (\"object\" == typeof a) {\n                    for (c = 0; c < d; c++)b.push(!1);\n                    c = 0;\n                    for (d = a.length; c < d; c++)b[a[c]] = !0\n                } else if (\"visible\" == a)for (c = 0; c < d; c++)b.push(f[c].bVisible ? !0 : !1); else if (\"hidden\" == a)for (c = 0; c < d; c++)b.push(f[c].bVisible ? !1 : !0); else if (\"sortable\" == a)for (c = 0; c < d; c++)b.push(f[c].bSortable ? !0 : !1); else for (c = 0; c < d; c++)b.push(!0);\n                return b\n            }, _fnNewline: function (a) {\n                return \"auto\" == a.sNewLine ?\n                    navigator.userAgent.match(/Windows/) ? \"\\r\\n\" : \"\\n\" : a.sNewLine\n            }, _fnGetDataTablesData: function (a) {\n                var b, c, d, f, j, i = [], h = \"\", g = this.s.dt, k, l = RegExp(a.sFieldBoundary, \"g\"), n = this._fnColumnTargets(a.mColumns);\n                d = \"undefined\" != typeof a.bSelectedOnly ? a.bSelectedOnly : !1;\n                if (a.bHeader) {\n                    j = [];\n                    b = 0;\n                    for (c = g.aoColumns.length; b < c; b++)n[b] && (h = g.aoColumns[b].sTitle.replace(/\\n/g, \" \").replace(/<.*?>/g, \"\").replace(/^\\s+|\\s+$/g, \"\"), h = this._fnHtmlDecode(h), j.push(this._fnBoundData(h, a.sFieldBoundary, l)));\n                    i.push(j.join(a.sFieldSeperator))\n                }\n                d = !0;\n                var m;\n                f = this.fnGetSelectedIndexes();\n                m = (d = \"none\" !== this.s.select.type && d && 0 !== f.length) ? f : p.Api ? (new p.Api(g)).rows(a.oSelectorOpts).indexes().flatten().toArray() : g.oInstance.$(\"tr\", a.oSelectorOpts).map(function (a, b) {\n                    return g.oInstance.fnGetPosition(b)\n                }).get();\n                d = 0;\n                for (f = m.length; d < f; d++) {\n                    k = g.aoData[m[d]].nTr;\n                    j = [];\n                    b = 0;\n                    for (c = g.aoColumns.length; b < c; b++)n[b] && (h = g.oApi._fnGetCellData(g, m[d], b, \"display\"), a.fnCellRender ? h = a.fnCellRender(h, b, k, m[d]) + \"\" : \"string\" == typeof h ? (h = h.replace(/\\n/g, \" \"), h = h.replace(/<img.*?\\s+alt\\s*=\\s*(?:\"([^\"]+)\"|'([^']+)'|([^\\s>]+)).*?>/gi,\n                        \"$1$2$3\"), h = h.replace(/<.*?>/g, \"\")) : h += \"\", h = h.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\"), h = this._fnHtmlDecode(h), j.push(this._fnBoundData(h, a.sFieldBoundary, l)));\n                    i.push(j.join(a.sFieldSeperator));\n                    a.bOpenRows && (b = e.grep(g.aoOpenRows, function (a) {\n                        return a.nParent === k\n                    }), 1 === b.length && (h = this._fnBoundData(e(\"td\", b[0].nTr).html(), a.sFieldBoundary, l), i.push(h)))\n                }\n                if (a.bFooter && null !== g.nTFoot) {\n                    j = [];\n                    b = 0;\n                    for (c = g.aoColumns.length; b < c; b++)n[b] && null !== g.aoColumns[b].nTf && (h = g.aoColumns[b].nTf.innerHTML.replace(/\\n/g,\n                        \" \").replace(/<.*?>/g, \"\"), h = this._fnHtmlDecode(h), j.push(this._fnBoundData(h, a.sFieldBoundary, l)));\n                    i.push(j.join(a.sFieldSeperator))\n                }\n                return i.join(this._fnNewline(a))\n            }, _fnBoundData: function (a, b, c) {\n                return \"\" === b ? a : b + a.replace(c, b + b) + b\n            }, _fnChunkData: function (a, b) {\n                for (var c = [], d = a.length, f = 0; f < d; f += b)f + b < d ? c.push(a.substring(f, f + b)) : c.push(a.substring(f, d));\n                return c\n            }, _fnHtmlDecode: function (a) {\n                if (-1 === a.indexOf(\"&\"))return a;\n                var b = k.createElement(\"div\");\n                return a.replace(/&([^\\s]*?);/g, function (a, d) {\n                    if (\"#\" ===\n                        a.substr(1, 1))return String.fromCharCode(Number(d.substr(1)));\n                    b.innerHTML = a;\n                    return b.childNodes[0].nodeValue\n                })\n            }, _fnPrintStart: function (a) {\n                var b = this, c = this.s.dt;\n                this._fnPrintHideNodes(c.nTable);\n                this.s.print.saveStart = c._iDisplayStart;\n                this.s.print.saveLength = c._iDisplayLength;\n                a.bShowAll && (c._iDisplayStart = 0, c._iDisplayLength = -1, c.oApi._fnCalculateEnd && c.oApi._fnCalculateEnd(c), c.oApi._fnDraw(c));\n                if (\"\" !== c.oScroll.sX || \"\" !== c.oScroll.sY)this._fnPrintScrollStart(c), e(this.s.dt.nTable).bind(\"draw.DTTT_Print\",\n                    function () {\n                        b._fnPrintScrollStart(c)\n                    });\n                var d = c.aanFeatures, f;\n                for (f in d)if (\"i\" != f && \"t\" != f && 1 == f.length)for (var g = 0, i = d[f].length; g < i; g++)this.dom.print.hidden.push({\n                    node: d[f][g],\n                    display: \"block\"\n                }), d[f][g].style.display = \"none\";\n                e(k.body).addClass(this.classes.print.body);\n                \"\" !== a.sInfo && this.fnInfo(a.sInfo, 3E3);\n                a.sMessage && e(\"<div/>\").addClass(this.classes.print.message).html(a.sMessage).prependTo(\"body\");\n                this.s.print.saveScroll = e(n).scrollTop();\n                n.scrollTo(0, 0);\n                e(k).bind(\"keydown.DTTT\", function (a) {\n                    if (a.keyCode ==\n                        27) {\n                        a.preventDefault();\n                        b._fnPrintEnd.call(b, a)\n                    }\n                })\n            }, _fnPrintEnd: function () {\n                var a = this.s.dt, b = this.s.print;\n                this._fnPrintShowNodes();\n                if (\"\" !== a.oScroll.sX || \"\" !== a.oScroll.sY)e(this.s.dt.nTable).unbind(\"draw.DTTT_Print\"), this._fnPrintScrollEnd();\n                n.scrollTo(0, b.saveScroll);\n                e(\"div.\" + this.classes.print.message).remove();\n                e(k.body).removeClass(\"DTTT_Print\");\n                a._iDisplayStart = b.saveStart;\n                a._iDisplayLength = b.saveLength;\n                a.oApi._fnCalculateEnd && a.oApi._fnCalculateEnd(a);\n                a.oApi._fnDraw(a);\n                e(k).unbind(\"keydown.DTTT\")\n            },\n            _fnPrintScrollStart: function () {\n                var a = this.s.dt;\n                a.nScrollHead.getElementsByTagName(\"div\")[0].getElementsByTagName(\"table\");\n                var b = a.nTable.parentNode, c;\n                c = a.nTable.getElementsByTagName(\"thead\");\n                0 < c.length && a.nTable.removeChild(c[0]);\n                null !== a.nTFoot && (c = a.nTable.getElementsByTagName(\"tfoot\"), 0 < c.length && a.nTable.removeChild(c[0]));\n                c = a.nTHead.cloneNode(!0);\n                a.nTable.insertBefore(c, a.nTable.childNodes[0]);\n                null !== a.nTFoot && (c = a.nTFoot.cloneNode(!0), a.nTable.insertBefore(c, a.nTable.childNodes[1]));\n                \"\" !== a.oScroll.sX &&\n                (a.nTable.style.width = e(a.nTable).outerWidth() + \"px\", b.style.width = e(a.nTable).outerWidth() + \"px\", b.style.overflow = \"visible\");\n                \"\" !== a.oScroll.sY && (b.style.height = e(a.nTable).outerHeight() + \"px\", b.style.overflow = \"visible\")\n            }, _fnPrintScrollEnd: function () {\n                var a = this.s.dt, b = a.nTable.parentNode;\n                \"\" !== a.oScroll.sX && (b.style.width = a.oApi._fnStringToCss(a.oScroll.sX), b.style.overflow = \"auto\");\n                \"\" !== a.oScroll.sY && (b.style.height = a.oApi._fnStringToCss(a.oScroll.sY), b.style.overflow = \"auto\")\n            }, _fnPrintShowNodes: function () {\n                for (var a =\n                    this.dom.print.hidden, b = 0, c = a.length; b < c; b++)a[b].node.style.display = a[b].display;\n                a.splice(0, a.length)\n            }, _fnPrintHideNodes: function (a) {\n                for (var b = this.dom.print.hidden, c = a.parentNode, d = c.childNodes, f = 0, g = d.length; f < g; f++)if (d[f] != a && 1 == d[f].nodeType) {\n                    var i = e(d[f]).css(\"display\");\n                    \"none\" != i && (b.push({node: d[f], display: i}), d[f].style.display = \"none\")\n                }\n                \"BODY\" != c.nodeName.toUpperCase() && this._fnPrintHideNodes(c)\n            }\n        };\n        TableTools._aInstances = [];\n        TableTools._aListeners = [];\n        TableTools.fnGetMasters = function () {\n            for (var a =\n                [], b = 0, c = TableTools._aInstances.length; b < c; b++)TableTools._aInstances[b].s.master && a.push(TableTools._aInstances[b]);\n            return a\n        };\n        TableTools.fnGetInstance = function (a) {\n            \"object\" != typeof a && (a = k.getElementById(a));\n            for (var b = 0, c = TableTools._aInstances.length; b < c; b++)if (TableTools._aInstances[b].s.master && TableTools._aInstances[b].dom.table == a)return TableTools._aInstances[b];\n            return null\n        };\n        TableTools._fnEventListen = function (a, b, c) {\n            TableTools._aListeners.push({that: a, type: b, fn: c})\n        };\n        TableTools._fnEventDispatch =\n            function (a, b, c, d) {\n                for (var f = TableTools._aListeners, e = 0, g = f.length; e < g; e++)a.dom.table == f[e].that.dom.table && f[e].type == b && f[e].fn(c, d)\n            };\n        TableTools.buttonBase = {\n            sAction: \"text\",\n            sTag: \"default\",\n            sLinerTag: \"default\",\n            sButtonClass: \"DTTT_button_text\",\n            sButtonText: \"Button text\",\n            sTitle: \"\",\n            sToolTip: \"\",\n            sCharSet: \"utf8\",\n            bBomInc: !1,\n            sFileName: \"*.csv\",\n            sFieldBoundary: \"\",\n            sFieldSeperator: \"\\t\",\n            sNewLine: \"auto\",\n            mColumns: \"all\",\n            bHeader: !0,\n            bFooter: !0,\n            bOpenRows: !1,\n            bSelectedOnly: !1,\n            oSelectorOpts: q,\n            fnMouseover: null,\n            fnMouseout: null,\n            fnClick: null,\n            fnSelect: null,\n            fnComplete: null,\n            fnInit: null,\n            fnCellRender: null\n        };\n        TableTools.BUTTONS = {\n            csv: e.extend({}, TableTools.buttonBase, {\n                sAction: \"flash_save\",\n                sButtonClass: \"DTTT_button_csv\",\n                sButtonText: \"CSV\",\n                sFieldBoundary: '\"',\n                sFieldSeperator: \",\",\n                fnClick: function (a, b, c) {\n                    this.fnSetText(c, this.fnGetTableData(b))\n                }\n            }),\n            xls: e.extend({}, TableTools.buttonBase, {\n                sAction: \"flash_save\",\n                sCharSet: \"utf16le\",\n                bBomInc: !0,\n                sButtonClass: \"DTTT_button_xls\",\n                sButtonText: \"Excel\",\n                fnClick: function (a, b, c) {\n                    this.fnSetText(c, this.fnGetTableData(b))\n                }\n            }),\n            copy: e.extend({}, TableTools.buttonBase, {\n                sAction: \"flash_copy\",\n                sButtonClass: \"DTTT_button_copy\",\n                sButtonText: \"Copy\",\n                fnClick: function (a, b, c) {\n                    this.fnSetText(c, this.fnGetTableData(b))\n                },\n                fnComplete: function (a, b, c, d) {\n                    a = d.split(\"\\n\").length;\n                    b.bHeader && a--;\n                    null !== this.s.dt.nTFoot && b.bFooter && a--;\n                    this.fnInfo(\"<h6>Table copied</h6><p>Copied \" + a + \" row\" + (1 == a ? \"\" : \"s\") + \" to the clipboard.</p>\", 1500)\n                }\n            }),\n            pdf: e.extend({}, TableTools.buttonBase, {\n                sAction: \"flash_pdf\",\n                sNewLine: \"\\n\",\n                sFileName: \"*.pdf\",\n                sButtonClass: \"DTTT_button_pdf\",\n                sButtonText: \"PDF\",\n                sPdfOrientation: \"portrait\",\n                sPdfSize: \"A4\",\n                sPdfMessage: \"\",\n                fnClick: function (a, b, c) {\n                    this.fnSetText(c, \"title:\" + this.fnGetTitle(b) + \"\\nmessage:\" + b.sPdfMessage + \"\\ncolWidth:\" + this.fnCalcColRatios(b) + \"\\norientation:\" + b.sPdfOrientation + \"\\nsize:\" + b.sPdfSize + \"\\n--/TableToolsOpts--\\n\" + this.fnGetTableData(b))\n                }\n            }),\n            print: e.extend({}, TableTools.buttonBase, {\n                sInfo: \"<h6>Print view</h6><p>Please use your browser's print function to print this table. Press escape when finished.</p>\",\n                sMessage: null,\n                bShowAll: !0,\n                sToolTip: \"View print view\",\n                sButtonClass: \"DTTT_button_print\",\n                sButtonText: \"Print\",\n                fnClick: function (a, b) {\n                    this.fnPrint(!0, b)\n                }\n            }),\n            text: e.extend({}, TableTools.buttonBase),\n            select: e.extend({}, TableTools.buttonBase, {\n                sButtonText: \"Select button\", fnSelect: function (a) {\n                    0 !== this.fnGetSelected().length ? e(a).removeClass(this.classes.buttons.disabled) : e(a).addClass(this.classes.buttons.disabled)\n                }, fnInit: function (a) {\n                    e(a).addClass(this.classes.buttons.disabled)\n                }\n            }),\n            select_single: e.extend({}, TableTools.buttonBase, {\n                sButtonText: \"Select button\",\n                fnSelect: function (a) {\n                    1 == this.fnGetSelected().length ? e(a).removeClass(this.classes.buttons.disabled) : e(a).addClass(this.classes.buttons.disabled)\n                }, fnInit: function (a) {\n                    e(a).addClass(this.classes.buttons.disabled)\n                }\n            }),\n            select_all: e.extend({}, TableTools.buttonBase, {\n                sButtonText: \"Select all\", fnClick: function () {\n                    this.fnSelectAll()\n                }, fnSelect: function (a) {\n                    this.fnGetSelected().length == this.s.dt.fnRecordsDisplay() ? e(a).addClass(this.classes.buttons.disabled) : e(a).removeClass(this.classes.buttons.disabled)\n                }\n            }),\n            select_none: e.extend({},\n                TableTools.buttonBase, {\n                    sButtonText: \"Deselect all\", fnClick: function () {\n                        this.fnSelectNone()\n                    }, fnSelect: function (a) {\n                        0 !== this.fnGetSelected().length ? e(a).removeClass(this.classes.buttons.disabled) : e(a).addClass(this.classes.buttons.disabled)\n                    }, fnInit: function (a) {\n                        e(a).addClass(this.classes.buttons.disabled)\n                    }\n                }),\n            ajax: e.extend({}, TableTools.buttonBase, {\n                sAjaxUrl: \"/xhr.php\", sButtonText: \"Ajax button\", fnClick: function (a, b) {\n                    var c = this.fnGetTableData(b);\n                    e.ajax({\n                        url: b.sAjaxUrl, data: [{name: \"tableData\", value: c}], success: b.fnAjaxComplete,\n                        dataType: \"json\", type: \"POST\", cache: !1, error: function () {\n                            alert(\"Error detected when sending table data to server\")\n                        }\n                    })\n                }, fnAjaxComplete: function () {\n                    alert(\"Ajax complete\")\n                }\n            }),\n            div: e.extend({}, TableTools.buttonBase, {\n                sAction: \"div\",\n                sTag: \"div\",\n                sButtonClass: \"DTTT_nonbutton\",\n                sButtonText: \"Text button\"\n            }),\n            collection: e.extend({}, TableTools.buttonBase, {\n                sAction: \"collection\",\n                sButtonClass: \"DTTT_button_collection\",\n                sButtonText: \"Collection\",\n                fnClick: function (a, b) {\n                    this._fnCollectionShow(a, b)\n                }\n            })\n        };\n        TableTools.buttons = TableTools.BUTTONS;\n        TableTools.classes = {\n            container: \"DTTT_container\",\n            buttons: {normal: \"DTTT_button\", disabled: \"DTTT_disabled\"},\n            collection: {\n                container: \"DTTT_collection\",\n                background: \"DTTT_collection_background\",\n                buttons: {normal: \"DTTT_button\", disabled: \"DTTT_disabled\"}\n            },\n            select: {table: \"DTTT_selectable\", row: \"DTTT_selected selected\"},\n            print: {body: \"DTTT_Print\", info: \"DTTT_print_info\", message: \"DTTT_PrintMessage\"}\n        };\n        TableTools.classes_themeroller = {\n            container: \"DTTT_container ui-buttonset ui-buttonset-multi\",\n            buttons: {normal: \"DTTT_button ui-button ui-state-default\"},\n            collection: {container: \"DTTT_collection ui-buttonset ui-buttonset-multi\"}\n        };\n        TableTools.DEFAULTS = {\n            sSwfPath: \"../swf/copy_csv_xls_pdf.swf\",\n            sRowSelect: \"none\",\n            sRowSelector: \"tr\",\n            sSelectedClass: null,\n            fnPreRowSelect: null,\n            fnRowSelected: null,\n            fnRowDeselected: null,\n            aButtons: [\"copy\", \"csv\", \"xls\", \"pdf\", \"print\"],\n            oTags: {\n                container: \"div\",\n                button: \"a\",\n                liner: \"span\",\n                collection: {container: \"div\", button: \"a\", liner: \"span\"}\n            }\n        };\n        TableTools.defaults = TableTools.DEFAULTS;\n        TableTools.prototype.CLASS = \"TableTools\";\n        TableTools.version = \"2.2.3\";\n        e.fn.dataTable.Api && e.fn.dataTable.Api.register(\"tabletools()\", function () {\n            var a = null;\n            0 < this.context.length && (a = TableTools.fnGetInstance(this.context[0].nTable));\n            return a\n        });\n        \"function\" == typeof e.fn.dataTable && \"function\" == typeof e.fn.dataTableExt.fnVersionCheck && e.fn.dataTableExt.fnVersionCheck(\"1.9.0\") ? e.fn.dataTableExt.aoFeatures.push({\n            fnInit: function (a) {\n                var b = a.oInit;\n                return (new TableTools(a.oInstance, b ? b.tableTools || b.oTableTools || {} : {})).dom.container\n            }, cFeature: \"T\", sFeature: \"TableTools\"\n        }) : alert(\"Warning: TableTools requires DataTables 1.9.0 or newer - www.datatables.net/download\");\n        e.fn.DataTable.TableTools = TableTools;\n        \"function\" == typeof m.fn.dataTable && \"function\" == typeof m.fn.dataTableExt.fnVersionCheck && m.fn.dataTableExt.fnVersionCheck(\"1.9.0\") ? m.fn.dataTableExt.aoFeatures.push({\n            fnInit: function (a) {\n                a = new TableTools(a.oInstance, \"undefined\" != typeof a.oInit.oTableTools ? a.oInit.oTableTools : {});\n                TableTools._aInstances.push(a);\n                return a.dom.container\n            }, cFeature: \"T\", sFeature: \"TableTools\"\n        }) : alert(\"Warning: TableTools 2 requires DataTables 1.9.0 or newer - www.datatables.net/download\");\n        m.fn.dataTable.TableTools = TableTools;\n        return m.fn.DataTable.TableTools = TableTools\n    };\n    \"function\" === typeof define && define.amd ? define([\"jquery.dataTables\", \"datatables\"], p) : \"object\" === typeof exports ? p(require(\"jquery\"), require(\"datatables\")) : jQuery && !jQuery.fn.dataTable.TableTools && p(jQuery, jQuery.fn.dataTable)\n})(window, document);\n","/*!\n * ClockPicker v{package.version} (http://weareoutman.github.io/clockpicker/)\n * Copyright 2014 Wang Shenwei.\n * Licensed under MIT (https://github.com/weareoutman/clockpicker/blob/gh-pages/LICENSE)\n */\n\n;(function(){\n\tvar $ = window.jQuery,\n\t\t$win = $(window),\n\t\t$doc = $(document),\n\t\t$body;\n\n\t// Can I use inline svg ?\n\tvar svgNS = 'http://www.w3.org/2000/svg',\n\t\tsvgSupported = 'SVGAngle' in window && (function(){\n\t\t\tvar supported,\n\t\t\t\tel = document.createElement('div');\n\t\t\tel.innerHTML = '<svg/>';\n\t\t\tsupported = (el.firstChild && el.firstChild.namespaceURI) == svgNS;\n\t\t\tel.innerHTML = '';\n\t\t\treturn supported;\n\t\t})();\n\n\t// Can I use transition ?\n\tvar transitionSupported = (function(){\n\t\tvar style = document.createElement('div').style;\n\t\treturn 'transition' in style ||\n\t\t\t'WebkitTransition' in style ||\n\t\t\t'MozTransition' in style ||\n\t\t\t'msTransition' in style ||\n\t\t\t'OTransition' in style;\n\t})();\n\n\t// Listen touch events in touch screen device, instead of mouse events in desktop.\n\tvar touchSupported = 'ontouchstart' in window,\n\t\tmousedownEvent = 'mousedown' + ( touchSupported ? ' touchstart' : ''),\n\t\tmousemoveEvent = 'mousemove.clockpicker' + ( touchSupported ? ' touchmove.clockpicker' : ''),\n\t\tmouseupEvent = 'mouseup.clockpicker' + ( touchSupported ? ' touchend.clockpicker' : '');\n\n\t// Vibrate the device if supported\n\tvar vibrate = navigator.vibrate ? 'vibrate' : navigator.webkitVibrate ? 'webkitVibrate' : null;\n\n\tfunction createSvgElement(name) {\n\t\treturn document.createElementNS(svgNS, name);\n\t}\n\n\tfunction leadingZero(num) {\n\t\treturn (num < 10 ? '0' : '') + num;\n\t}\n\n\t// Get a unique id\n\tvar idCounter = 0;\n\tfunction uniqueId(prefix) {\n\t\tvar id = ++idCounter + '';\n\t\treturn prefix ? prefix + id : id;\n\t}\n\n\t// Clock size\n\tvar dialRadius = 100,\n\t\touterRadius = 80,\n\t\t// innerRadius = 80 on 12 hour clock\n\t\tinnerRadius = 54,\n\t\ttickRadius = 13,\n\t\tdiameter = dialRadius * 2,\n\t\tduration = transitionSupported ? 350 : 1;\n\n\t// Popover template\n\tvar tpl = [\n\t\t'<div class=\"popover clockpicker-popover\">',\n\t\t\t'<div class=\"arrow\"></div>',\n\t\t\t'<div class=\"popover-title\">',\n\t\t\t\t'<span class=\"clockpicker-span-hours text-primary\"></span>',\n\t\t\t\t' : ',\n\t\t\t\t'<span class=\"clockpicker-span-minutes\"></span>',\n\t\t\t\t'<span class=\"clockpicker-span-am-pm\"></span>',\n\t\t\t'</div>',\n\t\t\t'<div class=\"popover-content\">',\n\t\t\t\t'<div class=\"clockpicker-plate\">',\n\t\t\t\t\t'<div class=\"clockpicker-canvas\"></div>',\n\t\t\t\t\t'<div class=\"clockpicker-dial clockpicker-hours\"></div>',\n\t\t\t\t\t'<div class=\"clockpicker-dial clockpicker-minutes clockpicker-dial-out\"></div>',\n\t\t\t\t'</div>',\n\t\t\t\t'<span class=\"clockpicker-am-pm-block\">',\n\t\t\t\t'</span>',\n\t\t\t'</div>',\n\t\t'</div>'\n\t].join('');\n\n\t// ClockPicker\n\tfunction ClockPicker(element, options) {\n\t\tvar popover = $(tpl),\n\t\t\tplate = popover.find('.clockpicker-plate'),\n\t\t\thoursView = popover.find('.clockpicker-hours'),\n\t\t\tminutesView = popover.find('.clockpicker-minutes'),\n\t\t\tamPmBlock = popover.find('.clockpicker-am-pm-block'),\n\t\t\tisInput = element.prop('tagName') === 'INPUT',\n\t\t\tinput = isInput ? element : element.find('input'),\n\t\t\taddon = element.find('.input-group-addon'),\n\t\t\tself = this,\n\t\t\ttimer;\n\n\t\tthis.id = uniqueId('cp');\n\t\tthis.element = element;\n\t\tthis.options = options;\n\t\tthis.isAppended = false;\n\t\tthis.isShown = false;\n\t\tthis.currentView = 'hours';\n\t\tthis.isInput = isInput;\n\t\tthis.input = input;\n\t\tthis.addon = addon;\n\t\tthis.popover = popover;\n\t\tthis.plate = plate;\n\t\tthis.hoursView = hoursView;\n\t\tthis.minutesView = minutesView;\n\t\tthis.amPmBlock = amPmBlock;\n\t\tthis.spanHours = popover.find('.clockpicker-span-hours');\n\t\tthis.spanMinutes = popover.find('.clockpicker-span-minutes');\n\t\tthis.spanAmPm = popover.find('.clockpicker-span-am-pm');\n\t\tthis.amOrPm = \"PM\";\n\t\t\n\t\t// Setup for for 12 hour clock if option is selected\n\t\tif (options.twelvehour) {\n\t\t\t\n\t\t\tvar  amPmButtonsTemplate = ['<div class=\"clockpicker-am-pm-block\">',\n\t\t\t\t'<button type=\"button\" class=\"btn btn-sm btn-default clockpicker-button clockpicker-am-button\">',\n\t\t\t\t'AM</button>',\n\t\t\t\t'<button type=\"button\" class=\"btn btn-sm btn-default clockpicker-button clockpicker-pm-button\">',\n\t\t\t\t'PM</button>',\n\t\t\t\t'</div>'].join('');\n\t\t\t\n\t\t\tvar amPmButtons = $(amPmButtonsTemplate);\n\t\t\t//amPmButtons.appendTo(plate);\n\t\t\t\n\t\t\t////Not working b/c they are not shown when this runs\n\t\t\t//$('clockpicker-am-button')\n\t\t\t//    .on(\"click\", function() {\n\t\t\t//        self.amOrPm = \"AM\";\n\t\t\t//        $('.clockpicker-span-am-pm').empty().append('AM');\n\t\t\t//    });\n\t\t\t//    \n\t\t\t//$('clockpicker-pm-button')\n\t\t\t//    .on(\"click\", function() {\n\t\t\t//         self.amOrPm = \"PM\";\n\t\t\t//        $('.clockpicker-span-am-pm').empty().append('PM');\n\t\t\t//    });\n\t\n\t\t\t$('<button type=\"button\" class=\"btn btn-sm btn-default clockpicker-button am-button\">' + \"AM\" + '</button>')\n\t\t\t\t.on(\"click\", function() {\n\t\t\t\t\tself.amOrPm = \"AM\";\n\t\t\t\t\t$('.clockpicker-span-am-pm').empty().append('AM');\n\t\t\t\t}).appendTo(this.amPmBlock);\n\t\t\t\t\n\t\t\t\t\n\t\t\t$('<button type=\"button\" class=\"btn btn-sm btn-default clockpicker-button pm-button\">' + \"PM\" + '</button>')\n\t\t\t\t.on(\"click\", function() {\n\t\t\t\t\tself.amOrPm = 'PM';\n\t\t\t\t\t$('.clockpicker-span-am-pm').empty().append('PM');\n\t\t\t\t}).appendTo(this.amPmBlock);\n\t\t\t\t\n\t\t}\n\t\t\n\t\tif (! options.autoclose) {\n\t\t\t// If autoclose is not setted, append a button\n\t\t\t$('<button type=\"button\" class=\"btn btn-sm btn-default btn-block clockpicker-button\">' + options.donetext + '</button>')\n\t\t\t\t.click($.proxy(this.done, this))\n\t\t\t\t.appendTo(popover);\n\t\t}\n\n\t\t// Placement and arrow align - make sure they make sense.\n\t\tif ((options.placement === 'top' || options.placement === 'bottom') && (options.align === 'top' || options.align === 'bottom')) options.align = 'left';\n\t\tif ((options.placement === 'left' || options.placement === 'right') && (options.align === 'left' || options.align === 'right')) options.align = 'top';\n\n\t\tpopover.addClass(options.placement);\n\t\tpopover.addClass('clockpicker-align-' + options.align);\n\n\t\tthis.spanHours.click($.proxy(this.toggleView, this, 'hours'));\n\t\tthis.spanMinutes.click($.proxy(this.toggleView, this, 'minutes'));\n\n\t\t// Show or toggle\n\t\tinput.on('focus.clockpicker click.clockpicker', $.proxy(this.show, this));\n\t\taddon.on('click.clockpicker', $.proxy(this.toggle, this));\n\n\t\t// Build ticks\n\t\tvar tickTpl = $('<div class=\"clockpicker-tick\"></div>'),\n\t\t\ti, tick, radian, radius;\n\n\t\t// Hours view\n\t\tif (options.twelvehour) {\n\t\t\tfor (i = 1; i < 13; i += 1) {\n\t\t\t\ttick = tickTpl.clone();\n\t\t\t\tradian = i / 6 * Math.PI;\n\t\t\t\tradius = outerRadius;\n\t\t\t\ttick.css('font-size', '120%');\n\t\t\t\ttick.css({\n\t\t\t\t\tleft: dialRadius + Math.sin(radian) * radius - tickRadius,\n\t\t\t\t\ttop: dialRadius - Math.cos(radian) * radius - tickRadius\n\t\t\t\t});\n\t\t\t\ttick.html(i === 0 ? '00' : i);\n\t\t\t\thoursView.append(tick);\n\t\t\t\ttick.on(mousedownEvent, mousedown);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0; i < 24; i += 1) {\n\t\t\t\ttick = tickTpl.clone();\n\t\t\t\tradian = i / 6 * Math.PI;\n\t\t\t\tvar inner = i > 0 && i < 13;\n\t\t\t\tradius = inner ? innerRadius : outerRadius;\n\t\t\t\ttick.css({\n\t\t\t\t\tleft: dialRadius + Math.sin(radian) * radius - tickRadius,\n\t\t\t\t\ttop: dialRadius - Math.cos(radian) * radius - tickRadius\n\t\t\t\t});\n\t\t\t\tif (inner) {\n\t\t\t\t\ttick.css('font-size', '120%');\n\t\t\t\t}\n\t\t\t\ttick.html(i === 0 ? '00' : i);\n\t\t\t\thoursView.append(tick);\n\t\t\t\ttick.on(mousedownEvent, mousedown);\n\t\t\t}\n\t\t}\n\n\t\t// Minutes view\n\t\tfor (i = 0; i < 60; i += 5) {\n\t\t\ttick = tickTpl.clone();\n\t\t\tradian = i / 30 * Math.PI;\n\t\t\ttick.css({\n\t\t\t\tleft: dialRadius + Math.sin(radian) * outerRadius - tickRadius,\n\t\t\t\ttop: dialRadius - Math.cos(radian) * outerRadius - tickRadius\n\t\t\t});\n\t\t\ttick.css('font-size', '120%');\n\t\t\ttick.html(leadingZero(i));\n\t\t\tminutesView.append(tick);\n\t\t\ttick.on(mousedownEvent, mousedown);\n\t\t}\n\n\t\t// Clicking on minutes view space\n\t\tplate.on(mousedownEvent, function(e){\n\t\t\tif ($(e.target).closest('.clockpicker-tick').length === 0) {\n\t\t\t\tmousedown(e, true);\n\t\t\t}\n\t\t});\n\n\t\t// Mousedown or touchstart\n\t\tfunction mousedown(e, space) {\n\t\t\tvar offset = plate.offset(),\n\t\t\t\tisTouch = /^touch/.test(e.type),\n\t\t\t\tx0 = offset.left + dialRadius,\n\t\t\t\ty0 = offset.top + dialRadius,\n\t\t\t\tdx = (isTouch ? e.originalEvent.touches[0] : e).pageX - x0,\n\t\t\t\tdy = (isTouch ? e.originalEvent.touches[0] : e).pageY - y0,\n\t\t\t\tz = Math.sqrt(dx * dx + dy * dy),\n\t\t\t\tmoved = false;\n\n\t\t\t// When clicking on minutes view space, check the mouse position\n\t\t\tif (space && (z < outerRadius - tickRadius || z > outerRadius + tickRadius)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\te.preventDefault();\n\n\t\t\t// Set cursor style of body after 200ms\n\t\t\tvar movingTimer = setTimeout(function(){\n\t\t\t\t$body.addClass('clockpicker-moving');\n\t\t\t}, 200);\n\n\t\t\t// Place the canvas to top\n\t\t\tif (svgSupported) {\n\t\t\t\tplate.append(self.canvas);\n\t\t\t}\n\n\t\t\t// Clock\n\t\t\tself.setHand(dx, dy, ! space, true);\n\n\t\t\t// Mousemove on document\n\t\t\t$doc.off(mousemoveEvent).on(mousemoveEvent, function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tvar isTouch = /^touch/.test(e.type),\n\t\t\t\t\tx = (isTouch ? e.originalEvent.touches[0] : e).pageX - x0,\n\t\t\t\t\ty = (isTouch ? e.originalEvent.touches[0] : e).pageY - y0;\n\t\t\t\tif (! moved && x === dx && y === dy) {\n\t\t\t\t\t// Clicking in chrome on windows will trigger a mousemove event\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoved = true;\n\t\t\t\tself.setHand(x, y, false, true);\n\t\t\t});\n\n\t\t\t// Mouseup on document\n\t\t\t$doc.off(mouseupEvent).on(mouseupEvent, function(e){\n\t\t\t\t$doc.off(mouseupEvent);\n\t\t\t\te.preventDefault();\n\t\t\t\tvar isTouch = /^touch/.test(e.type),\n\t\t\t\t\tx = (isTouch ? e.originalEvent.changedTouches[0] : e).pageX - x0,\n\t\t\t\t\ty = (isTouch ? e.originalEvent.changedTouches[0] : e).pageY - y0;\n\t\t\t\tif ((space || moved) && x === dx && y === dy) {\n\t\t\t\t\tself.setHand(x, y);\n\t\t\t\t}\n\t\t\t\tif (self.currentView === 'hours') {\n\t\t\t\t\tself.toggleView('minutes', duration / 2);\n\t\t\t\t} else {\n\t\t\t\t\tif (options.autoclose) {\n\t\t\t\t\t\tself.minutesView.addClass('clockpicker-dial-out');\n\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\tself.done();\n\t\t\t\t\t\t}, duration / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tplate.prepend(canvas);\n\n\t\t\t\t// Reset cursor style of body\n\t\t\t\tclearTimeout(movingTimer);\n\t\t\t\t$body.removeClass('clockpicker-moving');\n\n\t\t\t\t// Unbind mousemove event\n\t\t\t\t$doc.off(mousemoveEvent);\n\t\t\t});\n\t\t}\n\n\t\tif (svgSupported) {\n\t\t\t// Draw clock hands and others\n\t\t\tvar canvas = popover.find('.clockpicker-canvas'),\n\t\t\t\tsvg = createSvgElement('svg');\n\t\t\tsvg.setAttribute('class', 'clockpicker-svg');\n\t\t\tsvg.setAttribute('width', diameter);\n\t\t\tsvg.setAttribute('height', diameter);\n\t\t\tvar g = createSvgElement('g');\n\t\t\tg.setAttribute('transform', 'translate(' + dialRadius + ',' + dialRadius + ')');\n\t\t\tvar bearing = createSvgElement('circle');\n\t\t\tbearing.setAttribute('class', 'clockpicker-canvas-bearing');\n\t\t\tbearing.setAttribute('cx', 0);\n\t\t\tbearing.setAttribute('cy', 0);\n\t\t\tbearing.setAttribute('r', 2);\n\t\t\tvar hand = createSvgElement('line');\n\t\t\thand.setAttribute('x1', 0);\n\t\t\thand.setAttribute('y1', 0);\n\t\t\tvar bg = createSvgElement('circle');\n\t\t\tbg.setAttribute('class', 'clockpicker-canvas-bg');\n\t\t\tbg.setAttribute('r', tickRadius);\n\t\t\tvar fg = createSvgElement('circle');\n\t\t\tfg.setAttribute('class', 'clockpicker-canvas-fg');\n\t\t\tfg.setAttribute('r', 3.5);\n\t\t\tg.appendChild(hand);\n\t\t\tg.appendChild(bg);\n\t\t\tg.appendChild(fg);\n\t\t\tg.appendChild(bearing);\n\t\t\tsvg.appendChild(g);\n\t\t\tcanvas.append(svg);\n\n\t\t\tthis.hand = hand;\n\t\t\tthis.bg = bg;\n\t\t\tthis.fg = fg;\n\t\t\tthis.bearing = bearing;\n\t\t\tthis.g = g;\n\t\t\tthis.canvas = canvas;\n\t\t}\n\n\t\traiseCallback(this.options.init);\n\t}\n\n\tfunction raiseCallback(callbackFunction) {\n\t\tif (callbackFunction && typeof callbackFunction === \"function\") {\n\t\t\tcallbackFunction();\n\t\t}\n\t}\n\n\t// Default options\n\tClockPicker.DEFAULTS = {\n\t\t'default': '',       // default time, 'now' or '13:14' e.g.\n\t\tfromnow: 0,          // set default time to * milliseconds from now (using with default = 'now')\n\t\tplacement: 'bottom', // clock popover placement\n\t\talign: 'left',       // popover arrow align\n\t\tdonetext: '完成',    // done button text\n\t\tautoclose: false,    // auto close when minute is selected\n\t\ttwelvehour: false, // change to 12 hour AM/PM clock from 24 hour\n\t\tvibrate: true        // vibrate the device when dragging clock hand\n\t};\n\n\t// Show or hide popover\n\tClockPicker.prototype.toggle = function(){\n\t\tthis[this.isShown ? 'hide' : 'show']();\n\t};\n\n\t// Set popover position\n\tClockPicker.prototype.locate = function(){\n\t\tvar element = this.element,\n\t\t\tpopover = this.popover,\n\t\t\toffset = element.offset(),\n\t\t\twidth = element.outerWidth(),\n\t\t\theight = element.outerHeight(),\n\t\t\tplacement = this.options.placement,\n\t\t\talign = this.options.align,\n\t\t\tstyles = {},\n\t\t\tself = this;\n\n\t\tpopover.show();\n\n\t\t// Place the popover\n\t\tswitch (placement) {\n\t\t\tcase 'bottom':\n\t\t\t\tstyles.top = offset.top + height;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tstyles.left = offset.left + width;\n\t\t\t\tbreak;\n\t\t\tcase 'top':\n\t\t\t\tstyles.top = offset.top - popover.outerHeight();\n\t\t\t\tbreak;\n\t\t\tcase 'left':\n\t\t\t\tstyles.left = offset.left - popover.outerWidth();\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Align the popover arrow\n\t\tswitch (align) {\n\t\t\tcase 'left':\n\t\t\t\tstyles.left = offset.left;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tstyles.left = offset.left + width - popover.outerWidth();\n\t\t\t\tbreak;\n\t\t\tcase 'top':\n\t\t\t\tstyles.top = offset.top;\n\t\t\t\tbreak;\n\t\t\tcase 'bottom':\n\t\t\t\tstyles.top = offset.top + height - popover.outerHeight();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tpopover.css(styles);\n\t};\n\n\t// Show popover\n\tClockPicker.prototype.show = function(e){\n\t\t// Not show again\n\t\tif (this.isShown) {\n\t\t\treturn;\n\t\t}\n\n\t\traiseCallback(this.options.beforeShow);\n\n\t\tvar self = this;\n\n\t\t// Initialize\n\t\tif (! this.isAppended) {\n\t\t\t// Append popover to body\n\t\t\t$body = $(document.body).append(this.popover);\n\n\t\t\t// Reset position when resize\n\t\t\t$win.on('resize.clockpicker' + this.id, function(){\n\t\t\t\tif (self.isShown) {\n\t\t\t\t\tself.locate();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.isAppended = true;\n\t\t}\n\n\t\t// Get the time\n\t\tvar value = ((this.input.prop('value') || this.options['default'] || '') + '').split(':');\n\t\tif (value[0] === 'now') {\n\t\t\tvar now = new Date(+ new Date() + this.options.fromnow);\n\t\t\tvalue = [\n\t\t\t\tnow.getHours(),\n\t\t\t\tnow.getMinutes()\n\t\t\t];\n\t\t}\n\t\tthis.hours = + value[0] || 0;\n\t\tthis.minutes = + value[1] || 0;\n\t\tthis.spanHours.html(leadingZero(this.hours));\n\t\tthis.spanMinutes.html(leadingZero(this.minutes));\n\n\t\t// Toggle to hours view\n\t\tthis.toggleView('hours');\n\n\t\t// Set position\n\t\tthis.locate();\n\n\t\tthis.isShown = true;\n\n\t\t// Hide when clicking or tabbing on any element except the clock, input and addon\n\t\t$doc.on('click.clockpicker.' + this.id + ' focusin.clockpicker.' + this.id, function(e){\n\t\t\tvar target = $(e.target);\n\t\t\tif (target.closest(self.popover).length === 0 &&\n\t\t\t\t\ttarget.closest(self.addon).length === 0 &&\n\t\t\t\t\ttarget.closest(self.input).length === 0) {\n\t\t\t\tself.hide();\n\t\t\t}\n\t\t});\n\n\t\t// Hide when ESC is pressed\n\t\t$doc.on('keyup.clockpicker.' + this.id, function(e){\n\t\t\tif (e.keyCode === 27) {\n\t\t\t\tself.hide();\n\t\t\t}\n\t\t});\n\n\t\traiseCallback(this.options.afterShow);\n\t};\n\n\t// Hide popover\n\tClockPicker.prototype.hide = function(){\n\t\traiseCallback(this.options.beforeHide);\n\n\t\tthis.isShown = false;\n\n\t\t// Unbinding events on document\n\t\t$doc.off('click.clockpicker.' + this.id + ' focusin.clockpicker.' + this.id);\n\t\t$doc.off('keyup.clockpicker.' + this.id);\n\n\t\tthis.popover.hide();\n\n\t\traiseCallback(this.options.afterHide);\n\t};\n\n\t// Toggle to hours or minutes view\n\tClockPicker.prototype.toggleView = function(view, delay){\n\t\tvar raiseAfterHourSelect = false;\n\t\tif (view === 'minutes' && $(this.hoursView).css(\"visibility\") === \"visible\") {\n\t\t\traiseCallback(this.options.beforeHourSelect);\n\t\t\traiseAfterHourSelect = true;\n\t\t}\n\t\tvar isHours = view === 'hours',\n\t\t\tnextView = isHours ? this.hoursView : this.minutesView,\n\t\t\thideView = isHours ? this.minutesView : this.hoursView;\n\n\t\tthis.currentView = view;\n\n\t\tthis.spanHours.toggleClass('text-primary', isHours);\n\t\tthis.spanMinutes.toggleClass('text-primary', ! isHours);\n\n\t\t// Let's make transitions\n\t\thideView.addClass('clockpicker-dial-out');\n\t\tnextView.css('visibility', 'visible').removeClass('clockpicker-dial-out');\n\n\t\t// Reset clock hand\n\t\tthis.resetClock(delay);\n\n\t\t// After transitions ended\n\t\tclearTimeout(this.toggleViewTimer);\n\t\tthis.toggleViewTimer = setTimeout(function(){\n\t\t\thideView.css('visibility', 'hidden');\n\t\t}, duration);\n\n\t\tif (raiseAfterHourSelect) {\n\t\t\traiseCallback(this.options.afterHourSelect);\n\t\t}\n\t};\n\n\t// Reset clock hand\n\tClockPicker.prototype.resetClock = function(delay){\n\t\tvar view = this.currentView,\n\t\t\tvalue = this[view],\n\t\t\tisHours = view === 'hours',\n\t\t\tunit = Math.PI / (isHours ? 6 : 30),\n\t\t\tradian = value * unit,\n\t\t\tradius = isHours && value > 0 && value < 13 ? innerRadius : outerRadius,\n\t\t\tx = Math.sin(radian) * radius,\n\t\t\ty = - Math.cos(radian) * radius,\n\t\t\tself = this;\n\t\tif (svgSupported && delay) {\n\t\t\tself.canvas.addClass('clockpicker-canvas-out');\n\t\t\tsetTimeout(function(){\n\t\t\t\tself.canvas.removeClass('clockpicker-canvas-out');\n\t\t\t\tself.setHand(x, y);\n\t\t\t}, delay);\n\t\t} else {\n\t\t\tthis.setHand(x, y);\n\t\t}\n\t};\n\n\t// Set clock hand to (x, y)\n\tClockPicker.prototype.setHand = function(x, y, roundBy5, dragging){\n\t\tvar radian = Math.atan2(x, - y),\n\t\t\tisHours = this.currentView === 'hours',\n\t\t\tunit = Math.PI / (isHours || roundBy5 ? 6 : 30),\n\t\t\tz = Math.sqrt(x * x + y * y),\n\t\t\toptions = this.options,\n\t\t\tinner = isHours && z < (outerRadius + innerRadius) / 2,\n\t\t\tradius = inner ? innerRadius : outerRadius,\n\t\t\tvalue;\n\t\t\t\n\t\t\tif (options.twelvehour) {\n\t\t\t\tradius = outerRadius;\n\t\t\t}\n\n\t\t// Radian should in range [0, 2PI]\n\t\tif (radian < 0) {\n\t\t\tradian = Math.PI * 2 + radian;\n\t\t}\n\n\t\t// Get the round value\n\t\tvalue = Math.round(radian / unit);\n\n\t\t// Get the round radian\n\t\tradian = value * unit;\n\n\t\t// Correct the hours or minutes\n\t\tif (options.twelvehour) {\n\t\t\tif (isHours) {\n\t\t\t\tif (value === 0) {\n\t\t\t\t\tvalue = 12;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (roundBy5) {\n\t\t\t\t\tvalue *= 5;\n\t\t\t\t}\n\t\t\t\tif (value === 60) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (isHours) {\n\t\t\t\tif (value === 12) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\t\t\t\tvalue = inner ? (value === 0 ? 12 : value) : value === 0 ? 0 : value + 12;\n\t\t\t} else {\n\t\t\t\tif (roundBy5) {\n\t\t\t\t\tvalue *= 5;\n\t\t\t\t}\n\t\t\t\tif (value === 60) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Once hours or minutes changed, vibrate the device\n\t\tif (this[this.currentView] !== value) {\n\t\t\tif (vibrate && this.options.vibrate) {\n\t\t\t\t// Do not vibrate too frequently\n\t\t\t\tif (! this.vibrateTimer) {\n\t\t\t\t\tnavigator[vibrate](10);\n\t\t\t\t\tthis.vibrateTimer = setTimeout($.proxy(function(){\n\t\t\t\t\t\tthis.vibrateTimer = null;\n\t\t\t\t\t}, this), 100);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis[this.currentView] = value;\n\t\tthis[isHours ? 'spanHours' : 'spanMinutes'].html(leadingZero(value));\n\n\t\t// If svg is not supported, just add an active class to the tick\n\t\tif (! svgSupported) {\n\t\t\tthis[isHours ? 'hoursView' : 'minutesView'].find('.clockpicker-tick').each(function(){\n\t\t\t\tvar tick = $(this);\n\t\t\t\ttick.toggleClass('active', value === + tick.html());\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Place clock hand at the top when dragging\n\t\tif (dragging || (! isHours && value % 5)) {\n\t\t\tthis.g.insertBefore(this.hand, this.bearing);\n\t\t\tthis.g.insertBefore(this.bg, this.fg);\n\t\t\tthis.bg.setAttribute('class', 'clockpicker-canvas-bg clockpicker-canvas-bg-trans');\n\t\t} else {\n\t\t\t// Or place it at the bottom\n\t\t\tthis.g.insertBefore(this.hand, this.bg);\n\t\t\tthis.g.insertBefore(this.fg, this.bg);\n\t\t\tthis.bg.setAttribute('class', 'clockpicker-canvas-bg');\n\t\t}\n\n\t\t// Set clock hand and others' position\n\t\tvar cx = Math.sin(radian) * radius,\n\t\t\tcy = - Math.cos(radian) * radius;\n\t\tthis.hand.setAttribute('x2', cx);\n\t\tthis.hand.setAttribute('y2', cy);\n\t\tthis.bg.setAttribute('cx', cx);\n\t\tthis.bg.setAttribute('cy', cy);\n\t\tthis.fg.setAttribute('cx', cx);\n\t\tthis.fg.setAttribute('cy', cy);\n\t};\n\n\t// Hours and minutes are selected\n\tClockPicker.prototype.done = function() {\n\t\traiseCallback(this.options.beforeDone);\n\t\tthis.hide();\n\t\tvar last = this.input.prop('value'),\n\t\t\tvalue = leadingZero(this.hours) + ':' + leadingZero(this.minutes);\n\t\tif  (this.options.twelvehour) {\n\t\t\tvalue = value + this.amOrPm;\n\t\t}\n\t\t\n\t\tthis.input.prop('value', value);\n\t\tif (value !== last) {\n\t\t\tthis.input.triggerHandler('change');\n\t\t\tif (! this.isInput) {\n\t\t\t\tthis.element.trigger('change');\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.autoclose) {\n\t\t\tthis.input.trigger('blur');\n\t\t}\n\n\t\traiseCallback(this.options.afterDone);\n\t};\n\n\t// Remove clockpicker from input\n\tClockPicker.prototype.remove = function() {\n\t\tthis.element.removeData('clockpicker');\n\t\tthis.input.off('focus.clockpicker click.clockpicker');\n\t\tthis.addon.off('click.clockpicker');\n\t\tif (this.isShown) {\n\t\t\tthis.hide();\n\t\t}\n\t\tif (this.isAppended) {\n\t\t\t$win.off('resize.clockpicker' + this.id);\n\t\t\tthis.popover.remove();\n\t\t}\n\t};\n\n\t// Extends $.fn.clockpicker\n\t$.fn.clockpicker = function(option){\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\treturn this.each(function(){\n\t\t\tvar $this = $(this),\n\t\t\t\tdata = $this.data('clockpicker');\n\t\t\tif (! data) {\n\t\t\t\tvar options = $.extend({}, ClockPicker.DEFAULTS, $this.data(), typeof option == 'object' && option);\n\t\t\t\t$this.data('clockpicker', new ClockPicker($this, options));\n\t\t\t} else {\n\t\t\t\t// Manual operatsions. show, hide, remove, e.g.\n\t\t\t\tif (typeof data[option] === 'function') {\n\t\t\t\t\tdata[option].apply(data, args);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n}());\n"],"sourceRoot":"/source/"}